%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2007.i039.019.P.m004.c33.cyber security spyware data protection isometric set-18.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 2/26/2021
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 18 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2007.i039.019.P.m004.c33.cyber security spyware data protection isometric set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2021-02-26T00:20:20+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2021-02-26T00:20:20+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2021-02-26T00:20:19+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7z+aMU8nl+3EMskLLeRN&#xA;6kTyxkEK/CrQsjj4+NKHrTDFlAWd3liedvOOjSItzfzalaPI3pXMwMFwJEorEqBQqWqOgHQBTu2R&#xA;1EOEE3y/Gx/R9zuNDPHknHGYC5bA/wDFD9Io9d3pnlj8yrLUUVLrclgnroKEFq8RLHuQTTqtRmNj&#xA;1II/H2tuu7DniO23Wv8AiT+g0Wb5lOgdirsVdirE/wAyNc1jTNGjj0f0/r16zwqZSUAX0nqVkDKY&#xA;2VuLBqNSh27h4TIEBu05iMkTIWAbrvrp8WEeXPzC81yadI99FJd6dYOvr6lEqs8ddl9QA0kA61H4&#xA;5rY6iYsHcRPN7DP2TppcMsZEJ5Y2IE/HY9O5kuj/AJqWzSldYgEFlI7C21a3+O3I5bLMgLyQsAwq&#xA;TUUBZuHTNlCpi4m3ktVpMmCXDMUWfYuM7FXYq7FXYq838y/m0yaw2geXNNudRvleWC7vYlQpaSRM&#xA;UYvE5TkoYbszItOjE5s8PZ/pE8hqP3/H+0+SLSbyBqktj5zvrPWPNj32uXc3pvo0k6yQAKwVniqq&#xA;gOeJ4xgI6r1Vhvl2rxxOMGMKiBzrf4/r3CvYc0yXYq7FXYq7FXEgCp2A6nFUh1HVFVSRIRMHFKGi&#xA;oAwrX6Moy9p6bBkGPJOIJ+za9+7y72yGCchYCeRyJJGskZ5I4DKw7g5ZjyRnESibiRYYSiQaK7Jo&#xA;dirsVdiqC1fWdN0izN3qEwhh5BFJqSzkEhVA6mgP6+mThjMzQV435o/O24vZZLXSw1nYEAeup/fO&#xA;D1+MH4Nv5foYjK/zunxSo3M+XL9r0Gn9m9TkhxGo+R5/seu+VHMnlbR5CeRextmLDoSYVNcnOYkT&#xA;Ici6LLjMJGMucTR+DDvzf8x+cbDQXh8u6RHfw3SPFeTPSV4lYcSPqpHx1DdfiA7rk4QYA0+ezrOh&#xA;a9fWl5ehNJ1ezZmLsjyRzKVKekJiTLGByqPV5gb/ABoNshk088gMYbkjl+P0/N2eg1OKOeE5+nhk&#xA;DYG3y/V/pXrf5S6NH5h8t/pnTrhS0N9JFLEystRGEIoxA/ZNen7XiMwI6OUBR527nV+0EMszcaBj&#xA;XfRs/fs9uzNeTdirsVdiqS+a9Ni1TT006QsguJABcRErLCVBIkjYbhgaD3BIwESI2b9POMZcUhdd&#xA;O95iVbyAlzoWoEXVlrKTCC/hYCRgkRVkaN1bkRUE0bbr45gSxzx8VixLq9Zjz4dacfBLgyY6AhLk&#xA;aI5EV92/cw/QdEm1m21Gyiu3sy8cdJlBZQVlV/jUEEqQhBoCd+hynQS4ST0p2PtRHixQiK4uLa/d&#xA;y/t2fTGbZ87dirsVdirsVfP6vZaL+YXmi6ntrkQSyXC3GqF4/q8S3VwXq0NPV4oyUZ1ZqD4iAM6W&#xA;U5TwQjtsBt12DFr8nrOSG61lb2FP0hYNFAszqrSxqfUDostC3A8egNMs7UIPCY8pfsQ+gc5Zm7FX&#xA;Yq7FXYqlfmGd4bBpFr8IJIBpWgrmLr80sWmyTj9UYEhu08BLJGJ6l4h+cAvtU0aN/rUdvYeuDdxy&#xA;s8asZBwhLekkrMElZWKcd/EUrnBdh9p+Nrp5Mg4skonhoDoLI36mIoG/vdzqtNwYgByHP8eRe0eR&#xA;7ZLXydotvHMbiOKygWO4Y1MiBBxcn/KG+d12dxeBEyjwSNnh7rJNOmz1xmjYTvM1pdirsVdirzb8&#xA;+5ZE8n2qqBwlvo1c1NaCGVqU7hgpBr2zH1WYwxmv4tnfezmnjl1Q4v4Bxfj52858x6d5TtfIGiQC&#xA;SC21y7lgmu7iVl9b0rlHJZiGakaim1Ow7nNecUTCIH1l6SGtyx1OXJkJ8CII8rFf7Is58o/nT5au&#xA;fN+jeQtNgeeCSxjFrq5dVRnitFn9MxDkVIQFWq1Q4K0zdGNPAZJmcjI8ybeoXFpBcLSVakdGHUfT&#xA;jGZHJgwTzl+V1peC41jy/a21r5pCkQXlDHy5Di5YUkiLlSRV4zy6VWtQTkPRlCuqafl75TuPLtgY&#xA;mhhs1uB611aQV4fWnp6rJvQJUUXqeNK9N5Zc3HvW6ZCI62fsZblTB2KuxV2Ksf8ANPl/VNWudHms&#xA;NQNgun3iXF0FBDTwqwLxcgaBWA3BBqadMuxZRC7F2FRj6OJJUWVElhRhIC4VqMpqrAEH4geh7YDM&#xA;EIUYfJvlyC5uLiGzWKS6Cif0y0YJWvxAIVCk1340rmL4MLuvx+C58u0s8oxjKViPK9/vTrLXBdir&#xA;sVdirsVedfmT5G1nUknPly2tml1WJrS/Mx9MRrJyDTin2jSRqr3ND89lo9VGP1k+ncfqQQmPlz8t&#xA;rbRbieVbuSb6zFbRzFqVJtYvSXjttVepJORza8ziBXK/tWmaZr0uxV2KuxV2KqF5ZQXkDQzglGBX&#xA;Y0IqKVGVZ8Iy45Y5fTIUWeOZhISHMMV1z8u9PvfL2p2NPrNxcWs0dn6yqypM0ZET8TQFlehFe+aH&#xA;s32ZwaXL4gMpSHLpXy5/d5ObqO0Z5I8NADqnPk2wvdO8oaHp98gjvbPT7W3uowVIWWKBUdaqSpow&#xA;PTbOjdenGKuxV2KuxVK/MnlrSvMWmNp2pIzwcuaFGZGSQKVVxQ0NOR2ao8RkZxEomJ5FyNJqp4Mg&#xA;yQ+oPK73/nHuRtK1SCHUIbm+uVhh02a4iosEfrI1w9CJv3hhVkQgbV6jqMbTaXw5Xdu57V7d/N4x&#xA;AR4d7PX5PRvJmgRWGhaWb3S7ay1m1tFtZ3iWNmHAnlxlQfZkYmSlerb71zMLzzIsCuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxVI/N/nPQ/KemLf6tIypK/o28UalnllILBF7DZTuxAy/Bp5ZTUVYn5a/NHWNcvLyODSHKkxfo+K&#xA;nFkSh9aS4ZmoAGpwFASO2+Q1PBAiMDxy61yHxdji7OPDx5SMcOl85f1Y8/jyeiwGUwRmYKJSoMgS&#xA;pXlTfiTQ0rlbgSqzXJfixdirsVdirsVYP5n/ADa8ueWPN0Pl/Wy1slxax3MV9SsYLvInF6bj+769&#xA;MzcOhnkx8ce/ki2QWvmrSbgMyyfuq/upV+JXQ9HUr2I3+Wc5PtjHjyShlEoSia3B5d/u63yrq5Q0&#xA;siAY72m6srKGUgqwqCOhBzaxkCLHIuORTeFDsVdirsVS/VNcsdNjeS6dY4oVLzyuwREUCpLM1ANs&#xA;ux4TLki0nuvzF8urawyWEh1O6ukWS1s7Xizur/ZZmJCRoafadgMcmLwwZZCIQHOUtgyjEyNAWWRW&#xA;d3FdQLLGwNQOSg14nuDmFg1WLMOLHISHkynjlE1IUrZewdirsVdiqXX2uWlrcC24tLNsZAo2RT+0&#xA;xNBmo1nbOPDl8ICU59a/hHeSdvx0cnFpZSjxch96VS+a3e9iSAARcxzPbj3LE+A8KU8Tmnl7Qyya&#xA;iOPCOK5VQ3262eu3dQHfIOUNCIwMpbbfj8fcyG1u7W7gWe1mSeB/sSxsHU9tiKjOwlEg0XWKuBXY&#xA;q7FXYqpXd5a2du9zdTJBBHu8sjBVFdupwxiSaCsb1bznZrPHptpK0d7dpWJwgLRhwSjsrig2Uniw&#xA;r45lY9MTueSLZLbOz20TsasyKSfEkVzFkKKWC/mvotzq8/laCGP1I4NVW4uyTxCwRwuXYkb96Cnc&#xA;jM7RSAjMHrGkxkYkEcwj9JPly3v7uK2t4rZNMhjM83OPhBUuF+AEujMOVT+0OvbMeMDGIEfpPKuv&#xA;Jtz5ZZJcU5GUjztk9hPNPaq80PoSVZTEWD0CsQDUfzAA5Q1EIjFDsVdirsVQ19qFrYxCW5YpHvVg&#xA;rNQKpYk8QfDG0iJPJ5fqt35W86tLOR6ukXtYplliH72FV4BiGHqJx/vImUgite5Gc9qfayWj1fgS&#xA;iPDBHq35SA3+Bu+8bc93YYuz/ExcYPq7nnf5O2eoWWsXHls3s093bxypPp6kvbiZJhxuIyQhjDJR&#xA;fs0Jb4mGwzofaHEe0uzY5MMRcuGUSaEvd7/i06c+DmqXuL6XskeOzgjcUdI0Vh1oQoB6ZVgBGOIO&#xA;xoOPkNyNd6tlrB2KuxVRvbkW1s81KlR8I8SdhkoR4jSl4F+Yvnny5rHmmz8o6rNMumJcGXXJoA55&#xA;skTNDbKsXJ25SlAadGp4bb/TaecIGcedbfrYsr/LPynZW1hHDMk3MxB3jmBjlUN/dwuOq+klFI/m&#xA;G+eW6/Oe0+0ckM1+FhJjGIO13V357n5C6Du4/uMMTH6pdWf+VLT0NMLdRNIzoT/J9lfvpXMz2W0v&#xA;haUn+fIke7kPutxe0snFkruCc50rgOxV2KuxVg3mt3TUL2R34WkKxPKSdqsoVQAN2Zm+FQBUnYZw&#xA;3bXZ+p1eqOPCLFAnehy6u40mWGPGJSYxreqaHfaro/14KPLV1aSEC4FFuLuP0RFBNETSoikd1ibq&#xA;wrSoGdt2H2dDDCUoR/ejhjxWDcYjnEjYCxRrqN3X6jLKRonbnXvZ95G0+x0by9ZaJCQklrGeUBrV&#xA;CzFylT1K8qHBl7Uw5tRKAkDMcx7vx0azikI8RGzIssa3Yq7FXYq8v/Om5SA6ZJI1UiWZzERUblF5&#xA;dRXrTMrDm8LHOdXTlaLS+Pmjjvh4jzYF5n85Wp1q51Wxn9ON5OcM8nwgAIF2B9lzSZ9fknMCBNDk&#xA;9xoexMOHBecRBr1En9PRm/5Q/m15f1exs9FvdSZtelmnhgimB/eCH4k4PSgDx7orGvwt4Zk6bFOA&#xA;JnIyvf3eTxXaGTHPNI4wBC9q6+bMPO03CK2QoriTmPiAIBVkcGh7grtnP+1PaeXTYRCG3iWD39OX&#xA;3NvZunjkkSf4UgNz+jvImq+YTpcl7NPFFSzkUiWeENRU4sGP+7WoKZk+xuDN4RjlJozNe7hAseW2&#xA;3uY9ozjxjh7mVeSvLyeXfLVro6GRltmm+KV1kc+pM8leSLGCPj+H4RtnR5cpyS4jV+TgGr2TvK0O&#xA;xV2KuxVgn5txed/0RZ3flGFri8tZXe6gXg3OExMtDG5/efGQeK75l6Q4+Kp8it0g/Nf5ZPL9Y1TQ&#xA;Ln6hq7CRg/pCWN2dAvxRsaRseCjmu1B8Snamo7Q7N02qo5Y8u4kXXTbn9++zfg1E8f0lf+Wvk2XR&#xA;WW6muW1a8YOk2pz8A6h6Fooz8UoT4VPEmlco0/aU8pjDBH/BY7Wdtx/NjzoDvHyZ5cIiCZn1l6Jm&#xA;zcV2KuxV2KrJoY5omikHJG2IwgkGwrDtP8jeWNH8wXl7pOmB9dvXe5m1G5DMqczV+DNUDkW6IO+/&#xA;SmYnaHaupmRp8Q9VcyKgB7/4j5C/sLkYsUa45H093VObny61zKJzcG3llAW7WGoV17jt1zQ6j2el&#xA;mn4hyeHOW2QQupd/z87cjHrhAcNcQH030TpESNFRAFRAFVR0AGwGdLjhGERGIoDYOASSbLeTQ7FX&#xA;Yq7FXnnkyHVtXs9aLT+i1tql5ZlJUUlmiejEsNmFWNGpXb7hphwXx739zn6/NhmYnEDH0i/f1oft&#xA;+DK5PLytYw2kciQpC4dFWJeKlQOIQArx4kV2zF7SwZc8QMeSWL3dftDjYckYm5DiTG2sbS2C+lEi&#xA;OF4lwo5Ee7dT9+Om0OHDXBGINVdb/Pn9qMmaU+ZKvmW1OxV2KuxVivnvyKnmq3RTcm3kgimWAcQQ&#xA;ZJAOJZuvEFdxT5UwykTjlAfxOVodR4OaOQi+Evnv8xfJXm/yxplldzW0JeC8BhUtFMsy28Es8jCM&#xA;8qp6cJJ5qPClTTNdo9NKEyZcnp+3e2MGp08YYyTKwSKIrY8/2Wm+i/kz54vNd0HVG8vWnl+LSdVt&#xA;Lm7pcgzzRJMHmaP0iyKFUGg29s2ZLxwfSskMUoAkRXANQGAND475RkxQmKkBL37soyI5Gl2WMXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULY6Xptg1w1lbR2xu5mubr0lCepM/&#xA;25Gp1Zu574qisVdirsVdirsVdirsVQuo6TpepwiDUrOG9hBqIriNZVr8mBGKorFXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FV&#xA;skkcUbSSMEjQFndjQBQKkknoBiSmMSTQ5pbonmbRNbR2065Evpu6MjBkesbcSwVwpKnYhhsQQRsc&#xA;PDtfRlkxyhIxkKI700wMHYq7FXYq7FXYqhb7VdOsIBPd3CRRH7JJqW7/AAgVLfRglIR5tuHBPKag&#xA;LKtHdW0kjxxyo8kZ4yIrAsppWhA6ZIxIalTArsVdirsVdiriQASdgNycVQun6pp+oRerZzrMnemx&#xA;HzU0I+nBGQIsNubBPGamKKKwtTsVdirsVdirsVQ9xqFjbzRQzzok0zBYoyfiYk0G3XrtXAZANsMM&#xA;5AkCwOaIwtTsVdirsVdirsVSOXzhpNtqj6bfiWxnDcYXuEKxTLSvKKXdGHtWo7jL/wAvIx4huFRd&#xA;vr+mTD+99MkgAPtUHdTXpQ+OaWPa+CyJHgkDVS2+fd8XIOmn039yOmVWhdWpxKkNXpQjvmzccGng&#xA;OraRdHyhrutaXcy6bqllG9xDBCTFNG0Q5gRceFOnEjhyYdftUFX5vBh1nhbR+m99pcWwqPv50dtn&#xA;bZNVlzYayevnR/iH+dzI8j83vdk7PZwOxqzRozH3Kg5fMUS6lWyKuxV2KuxVh/nqLUL26sdLt7ea&#xA;W3uFla4k9QR2iUXin1hVKyy1Y/DGDxP7VaYy1UcUCQf3n8Iqz+z8U3aeMTMGd8HVBabolppd7Nqu&#xA;sX8Fy1sBFE8vEtGaJwESAhYdyyiNVqRx3rtkdPi4gDIXl69a/HNzdVrpmPBAeHh7h1955y+7yYP5&#xA;2s4fKHmXV9bsZFi1++uorzTvjKvcK/BDbrHWkis3qKwAqKhuwzoNNLxcYifpAo+Xm6p7jbvI9vE8&#xA;g4yMil1HZiNxvmikN2SpgV2KuxV2KsZ1XzxoMWpNo0F0s+pRD1LmGFgTEisoYSEfZLcqUzB7V7QG&#xA;hxDLkiTGR4R76J/Q5Gn0xymglV1oYvdSh1TTL1NNuZfgMkVFkcgOxaRK8ZqkKOJA25Hl0GT02owa&#xA;nGMmM8MpC/2EfAudj1WXEDjyR8TEOh6f1Zc4/czDSXvWsI/rzI92tVmeIEIzKaVAO4rmXRA35uty&#xA;mHEeC+HpfNF4tbsVdirsVYnqHmW+1DWbry7ozCzu7QK13fTJy4o1P7lOjNuPtbZVKZMjCPMO2w6O&#xA;GLFHPmHFCViMQeZH849B7t0r8iLEmr6gbuPneesY4NQuCzTzBQS4DN+zxAYUC1FdtshhMeI7b955&#xA;lye1Bk8KFH01ZhHaMe739xJvfruz9WVlDKQysKqw3BBzIdCRTeKHYq7FXYq4kDqadsVYB5v1/TZv&#xA;MMnlfX9IMui3MUNNTaReAmuC6xx8RwkRiYm4tGSwpXYAkZ+DERDjgfV3e5CR+UdFYWepro1xeX+n&#xA;29831drtneVUlhiJWNnoXjD8qEe/XcnlvbDQ58s8OXHEegHiEee57uvmHY6DNCPFGXV6hqOoWtnG&#xA;PXfh6tVQgV9q/jmXru0sWlo5L9X4Li4sEsl8PR4JrWkXkOsJbPfXOiWqSXEcMET0ikEwQxlgytFN&#xA;E/FtqFaUStRnVYMmOcOKIjPio33/ABaTYNF6/wDlx5hutd8q293dIi3MLy2kzRf3TvbOYmeP/JYp&#xA;UZrtZiEMlDkd/mgMnzFS7FXYq7FWL+e9LvZ7ew1LTntor/Srn143vCywcWikhYOVo3+7aj3y7AYx&#xA;MiRuY15875p8ngWsTfmh5y8x3OmWdjLaSRkpeXFfhRHUijzRj00QqSOMe7j7XMiuXGXQDhH45qZE&#xA;iieT2vyJ5Nv7PSbOPzFd/p+8s5PVtLi7iU/V6gAiFm5SN3ozH5UyuUzGwDzYs6zHS7FXYq7FUPqE&#xA;UMtjPHO7xwujCR42ZHCkblWSjKfcb5GeeOKJnLlHdMYmRoPCLr8qNX8u315r/kqZtStZ0eK6sZmX&#xA;6zHyIflHI4ZXKkVo/buScp1ObS9u6UQJ4eCdjnzA5SAI2IPMfopy8c56ae45hJL784BYaow0jS5L&#xA;LWIKeub8JEJQoYvFcRNV6pRfT9MhiTTYV5ZHs77O5dJpxjzcEvUd4Enn13AXWaoZJXG6L3jyD5gv&#xA;df8ALcGp3mlzaTNOWJtZyGJFdnU0U8T25KD+vMjVYhCfCDxOEGRZjpdirsVdirzrz7caj5X1S881&#xA;2dq91BLZrDcJFG0siuhLB6CihQqfEzGi9aHpkBiJnxCuTs4azGdMMUxImM+IVy3HU+/y+Tyfyvrf&#xA;5i+btft7/T43stBspOMpDiKEqBUxSy8f3nMAc0ROPfita5k4sERsHFz6zJkNk1vdD8fad3vvkjzB&#xA;p+t6Kk+nStcWcBEC3DgqWKorDZgpPwuNyN/fBmweEeEtEpmRJPVkGVMXYq7FXYqwr8y7TT1sYrvU&#xA;Tc3Gn3E9tY3Ngs7Q29JpGRJWClCDzlXkeXT5DLsEBIkHuJ+SpXc/ll5XstXGraJFFZXvqETQBBNC&#xA;7yKykhSeUThWIQoQB/KclpNbCQlCJEq50dx70yiRzUvy78qXFhCsNrevYXtq0RuBG7TJdIqJ631i&#xA;KXo5kLgOlKDj8sxcPtBp9aZCH1R6GgR7q6fjubcumnjonkXpxAPUVp0rhIBabSDVvI+g6vpt5pt+&#xA;jzWV6eTQlgBGa1rFQfBmP2bpY6OcpYiRxG6/hHuHRuzZzkAutuvX4pno+kado+m2+m6bAtvZWyBI&#xA;YlrsB4k7k+5zMyZJTkZS5lpRmQV2KuxV2KqF9ZWt9ayWt1GJYJVKSRsAVZWBBBB2IIPfDGVKp2Ol&#xA;WdnaxW0S1jhXigNBsOlVUKv4YTMqUXkVdirsVdirsVdiqEutLtLmVJXUrKjA80PEsAQeLeI2zX6r&#xA;szDmmJyHqiRuNrroe8fgN+PUSgCByQ1z5V8t3WqQ6rc6bbzajbikF08amRRvsCfmc2ozzEeEE00J&#xA;oAAKDYDoMqV2KuxV2KuxVplVgQwBB6g7jFVCOwtY0MaIFj34oKcVr4D575IyKoTy95a0fy/ZNZ6V&#xA;CYYHKM4Z3clo4Y7dTVyaUihRdttsM8kpmzzVM8grsVdirsVWyRRSoUlRXQ0JVgCNjUbH3xVAz6Qo&#xA;dZbGT6nNz5SOo5B1ofhKEhe/0ZqsnZURISwHwp3vXIjfYx5fZt0cmOpNVMcQ/HVda6LY2t/JewKy&#xA;SSqVdAfg+IhiaHvVfHDpux8GDPLNjBEpCiOm5v8AR315Lk1U5wEJcgjs2jjOxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuBBFQ&#xA;aj2xV2KuxV2KuxV2KuxVZPcQW8Lz3EiwwxjlJLIwVVHiWOwwEgbllCEpGoiye5eCCKjcHocLF2Ku&#xA;xV2KuxV2KtPIiU5sF5HitTSpPYYpAJWiaFpWhDqZUAZ4wRyCtXiSOoBoaYaQvwK7FXYq7FXYqskm&#xA;hi4+rIqc2CJyIHJj0UV6k+GEC1X4FdirsVdirsVdirsVdirsVY/r/mK2tb6LTXmjg9ZHMzSiRWC8&#xA;aq8R48HVSKSfF8NRXLI1EcR5fjn3NmPFLIajz/HL9SS/p3UdOk1Mj98beFb22i5qwaHfmqMlWYEL&#xA;VajqchGcpEgbnpv+Phz83NOnjUTP0wvhMgDz8x3jr39E/wDLPmuw16AtArRTx7TQSCjKQaH2O46j&#xA;Ig30IPcWjVaSWIjcSieUhyP6j5FO8LiuxV2KuxV2KvFNU/M3UdSt7nSdXsGbSuJS+urNSJ0ZJ0Kf&#xA;uyW+0oaoUHfwBqM7U6HGY8PFwmXK/wBbndn5MmLJ4sI8XB+ovVfKcsL+XbBYphcLDCsRkFdzGOO9&#xA;S/h4nNfCPCALtr1sjLNKRiY2bo+abZJxXYq7FXYq7FXnXmvW7y6lu9KvY4jZJMXhuIy5ljWM0LPE&#xA;COQTmGqHU7dKkZVK6vb8fe7vR4YxMZR4uKuXf5XW18uo72Ka3F5jtdS+vXEk8dxYIYotSgL8lijZ&#xA;wR+94l1JDmj05dmZRTJY9VlwemcRLGfxz/QXLGi0urjeKXBk7j194H3x27wHoP5c+aNW1uyuI9UE&#xA;bXNn6NLqIFRMkyc1cpQBSRuafcMys0YVGUPpk87mxSxzMJc4mmX5Q1uxV2KuxVgf5sXYNlp+ly2k&#xA;txb3srtJJbEevGYgoUojLxb+85N8QIVTSpOW4shgbHNtwxBO/JIbHzr5p8tyW8F5GdX02VVkSjM0&#xA;/pMpdTBJxqzt2jn4dviA3wcfH9UeGXePpLlZ9NjrixT4h3HaQ9/SvMPR9C8y6NrsDS6dcCRoqCeB&#xA;gUmiJqAJI2oy1oaHo3UEjIEEOAmeBXYq7FXYql+s6nNp0Ucq2ktxCxYTyQ0YwqELeoUO7CoptleW&#xA;RA2cjTYBkNcQB6X135WwyTz/AHUOraDBxSe2v24XVyCVo8jcIwu4TqVJB3p03zT6DUznCHi/3sSR&#xA;L3/duCD7uTuT2SODKeRhyHu3Pn3/AKWXP5ghhv8A6vcwSRW7ryhv6coGI+0rMPsMDX7WbaOeMuXL&#xA;v6OqjozKHFEgy6x/i+XUe5h/5m+YEMllptqsslxa3C3spgRZXCwAh/3TA1VPUDs5HFdu5Wur1PaZ&#xA;lKePT2cuPnseEc9if0dfmRn9l4IiX7yIkMg4Y2etjf4eW7x+bzBrLfX5opXhN48q+lsSYpJyVWgq&#xA;ASCCQvfMeGaYHP1Eb139a8r5Pew0cDjgMkRcP0bA/Lvey/lnpXmOyvNSOvxSLeAxxLM9GEkaKQrB&#xA;x9omu+/gO2djrJwIHA+T2XoGYCuxV2KuxVbL6npP6VBLxPDl9nlTatO2ApjV78nhNzqNp5T1BoZr&#xA;d7rTtYR/rMM8JDK9vI6yogbZgrHkrnqCMddrpVESiDHq9H2T2ZDMJHHMxyxPp93Qnb3vRPJOgrp8&#xA;8d7a3gns7pHVogSwDBiVIkqOfwrT4gf8khdsjDGASYn0/j8buD2hq5TjwZI1kiefKx7unwod4tmm&#xA;TdS7FXYq7FUNqep2Ol2Mt/fzCCzgAM0zAkKCQKmgO1TkoQMjQ5qxBL3yX588stqkHqJDOZUEiqv1&#xA;hXgYr0X1FJ+GqnrQ7UyrJg4wQRTnaTX5NNMSibr5MV0Pz/qHmPT/ADZpsek38s1kZAGdR6ipMGSF&#xA;Xj+FlNI6siioPQU3yGYSjEj6rczRHFPNjlYx8JF3yNHv7/f82c+RdHl0+G5d7U231lYWqaVkNGJd&#xA;qM3xHlvsMu4r8nC1kgaF8RF/sZTi4TsVdirsVYT+al95X07RV1HWr1rGeESRWEsSCWRnkWrRiM7M&#xA;G4Cu69PtDJxvomJo28p/KrztbeZtDtbDzRIqT25aHTdTiAeRCZ2VVuKF/SVlkWNea8CABz5bZfDF&#xA;IxsEUOnXbqz4hWw9T0D8tNA1vTfN+uy3kyzae0MUdiQytTi7cqBVUqCApo3I/wCU3XMXxOLmzy46&#xA;AN29MxaHYq7FXYqxfz7cavDpgNrfQaZZOfTur+YkNG0hCRcW5IqVcgHlWv2e+S8MTiYgEyPd9v2N&#xA;mGQjKzuGA6B590bU7ibSJ2fTdcR1D2N4GUs8TB42iMqpy3AZKqr96DOD7T7D7Q7OEpwkZ45AeuO/&#xA;Llxc+Ejv5DkJO4w6qGQjv7vfz/H2Ml8vfmJ5VtdVfyrqtyLTVCwkjNzQRTeruAsh2517NSvaub/2&#xA;T0uWWg8T6vXK+/4uF2iay7dwTQ+U70/monmgLEumpozWOzESm6e5EhYpTjT0lpyrXt2zcRxxjZAA&#xA;Mufn73CMiRR6Jovk3ysuqDVRpkAvgeSy8dgwNeYT7Aav7VK5HwIcXFW7mntPUHH4RnLg7v2868uS&#xA;c5a4DsVdirsVdiqE1afULfTbibTrVb2+jQm3tXk9FZG/lMlH4/dhFXurE9E8palr/lBbH8xrW1vL&#xA;92ZlEOzxIyqB+8TjxkBrUo305k5MsYzvHy8+9MZGPI0yTy95ftdE0mz0yCWWeKyT04ZJ25PxFQoJ&#xA;2rQGmVZcpnIy70JnlSuxV2KuxVL/ADDp15qWjXVlZXQsrqZCsN00azBG6hvTfY07Y79GUSAdxbEP&#xA;LnkLzDoWmiBL2CaRG9RkjjEUczOxMzOvHZ2LcvtU2A+HdsJyTJ3b5SxdAT9n605tdJ1S4vbO5mtR&#xA;ZtaycpLh5AZnjFf3SpEXARjQtyk+g5GVkrGcYg0Sb6dPv6e75MmwuM7FXYq7FXYqgNW0Sw1SzktL&#xA;uJJYJaepDIqvG9DX4kYEHffJxnSvMYv+cdPLEHmWHVLC5udNs4Tzaxt34gvWv7uUH1EQ7hl677EZ&#xA;PxAr1HT9H07TxSzhEKhAgRSQgUbgBB8C/QMo4RZIHNslllIAE8vxz5ozC1uxV2KuxVKPNvl238x+&#xA;X7rR7inpXPpkhi4BMUqyqKxsjDdBuD9/TLMWSUJcUeaRXVLvOX5b+VvN1p6WrWi/WQpEV5F8M0ZP&#xA;dW+ZrQ7HuDl2n1k8R9J2Y0xnyz+ROhWGqLquu3c2vX0BAtGum5KiJ/d8hSrsvifalMn+aEIGGGIx&#xA;xO5ERW/VlKRlzNv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:d690075f-6522-894e-8b3e-4c2db0ea2ea0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:d690075f-6522-894e-8b3e-4c2db0ea2ea0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:05265a43-5e58-483b-a637-f47ea9136070</stRef:instanceID>
            <stRef:documentID>xmp.did:80419ee9-c7ae-f14e-9eab-8f0d19356d16</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:80fef2d3-8a7f-fb49-8b37-9e7aba5b5acb</stEvt:instanceID>
                  <stEvt:when>2020-07-28T16:27:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47aa5425-7308-fb41-ae58-a3384e44029d</stEvt:instanceID>
                  <stEvt:when>2020-07-30T12:25:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:92f6a377-a2db-5d49-b1f1-0abb0126b000</stEvt:instanceID>
                  <stEvt:when>2020-07-30T22:28:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:43b34548-8e27-d14d-8347-94521aff7776</stEvt:instanceID>
                  <stEvt:when>2020-07-30T22:29:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:80419ee9-c7ae-f14e-9eab-8f0d19356d16</stEvt:instanceID>
                  <stEvt:when>2021-02-25T17:34:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d690075f-6522-894e-8b3e-4c2db0ea2ea0</stEvt:instanceID>
                  <stEvt:when>2021-02-26T00:20:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=243 G=242 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>243</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=218 G=218 B=249</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>218</xmpG:red>
                           <xmpG:green>218</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=211 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=218 G=218 B=249 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>218</xmpG:red>
                           <xmpG:green>218</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=190 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=244 B=250</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>244</xmpG:green>
                           <xmpG:blue>250</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
68.153 345.106 mo
113.461 371.265 li
158.472 345.107 li
113.164 318.948 li
68.153 345.106 li
cp
113.462 371.99 mo
113.305 371.899 li
66.9006 345.108 li
113.163 318.223 li
113.32 318.314 li
159.725 345.105 li
113.462 371.99 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.898039 .196078 .168627 rgb
f
260.653 66.1851 mo
260.653 67.9219 261.116 69.1763 261.829 69.5872 cv
262.63 70.0498 263.013 69.1917 263.013 67.4854 cv
263.013 65.8408 262.648 64.5508 261.837 64.0828 cv
261.152 63.6873 260.653 64.3657 260.653 66.1851 cv
cp
263.796 67.8965 mo
263.796 70.168 263.066 71.001 261.784 70.2605 cv
260.653 69.6077 259.888 67.9426 259.87 65.7224 cv
259.87 63.4819 260.707 62.7314 261.882 63.4099 cv
263.101 64.1138 263.796 65.7686 263.796 67.8965 cv
cp
.227451 .172549 .6 rgb
f
266.218 66.8689 mo
265.194 66.905 li
265.043 66.1292 li
266.307 66.0776 li
266.974 66.4631 li
266.974 73.144 li
266.218 72.7073 li
266.218 66.8689 li
cp
f
269.788 71.4587 mo
269.788 73.196 270.251 74.4502 270.963 74.8613 cv
271.765 75.324 272.147 74.4653 272.147 72.7595 cv
272.147 71.115 271.782 69.8245 270.972 69.3569 cv
270.287 68.9612 269.788 69.6394 269.788 71.4587 cv
cp
272.931 73.1704 mo
272.931 75.4421 272.201 76.2747 270.919 75.5344 cv
269.788 74.8816 269.023 73.2166 269.005 70.9963 cv
269.005 68.7556 269.842 68.0051 271.017 68.6836 cv
272.236 69.3877 272.931 71.0425 272.931 73.1704 cv
cp
f
275.353 72.1426 mo
274.329 72.1787 li
274.178 71.4031 li
275.442 71.3516 li
276.109 71.7368 li
276.109 78.418 li
275.353 77.9812 li
275.353 72.1426 li
cp
f
279.92 74.7798 mo
278.896 74.8157 li
278.745 74.0398 li
280.009 73.9885 li
280.677 74.3738 li
280.677 81.0552 li
279.92 80.6179 li
279.92 74.7798 li
cp
f
283.49 79.3694 mo
283.49 81.1067 283.954 82.3611 284.665 82.772 cv
285.467 83.2346 285.85 82.3762 285.85 80.6702 cv
285.85 79.0256 285.484 77.7354 284.674 77.2676 cv
283.989 76.8718 283.49 77.5505 283.49 79.3694 cv
cp
286.633 81.0811 mo
286.633 83.3528 285.903 84.1853 284.621 83.4451 cv
283.49 82.7925 282.725 81.1274 282.707 78.907 cv
282.707 76.6663 283.544 75.916 284.719 76.5945 cv
285.938 77.2986 286.633 78.9534 286.633 81.0811 cv
cp
f
289.055 80.0537 mo
288.031 80.0896 li
287.88 79.314 li
289.144 79.2622 li
289.812 79.6475 li
289.811 86.3289 li
289.055 85.8921 li
289.055 80.0537 li
cp
f
292.625 84.6433 mo
292.625 86.3806 293.088 87.6348 293.8 88.0459 cv
294.602 88.5085 294.984 87.6499 294.984 85.9438 cv
294.984 84.2993 294.62 83.0093 293.809 82.5415 cv
293.124 82.1458 292.625 82.8242 292.625 84.6433 cv
cp
295.768 86.3552 mo
295.768 88.6265 295.038 89.4592 293.756 88.7188 cv
292.625 88.0664 291.86 86.4014 291.842 84.1812 cv
291.842 81.9404 292.679 81.1897 293.854 81.8684 cv
295.073 82.5725 295.768 84.2273 295.768 86.3552 cv
cp
f
298.19 85.3274 mo
297.166 85.3633 li
297.015 84.5879 li
298.279 84.5364 li
298.946 84.9214 li
298.946 91.6028 li
298.19 91.1658 li
298.19 85.3274 li
cp
f
301.76 89.9175 mo
301.76 91.6548 302.224 92.9089 302.936 93.3201 cv
303.737 93.7825 304.12 92.9243 304.12 91.2183 cv
304.12 89.5735 303.755 88.2832 302.944 87.8157 cv
302.259 87.4199 301.761 88.0984 301.76 89.9175 cv
cp
304.903 91.6292 mo
304.903 93.9009 304.173 94.7332 302.891 93.9932 cv
301.76 93.3403 300.995 91.6753 300.977 89.4551 cv
300.977 87.2144 301.814 86.4641 302.989 87.1423 cv
304.209 87.8464 304.903 89.5012 304.903 91.6292 cv
cp
f
306.328 92.5544 mo
306.328 94.2917 306.791 95.5459 307.503 95.957 cv
308.304 96.4197 308.687 95.561 308.687 93.8552 cv
308.687 92.2107 308.322 90.9202 307.512 90.4526 cv
306.826 90.0569 306.328 90.7351 306.328 92.5544 cv
cp
309.47 94.2661 mo
309.47 96.5378 308.741 97.3704 307.459 96.6301 cv
306.328 95.9773 305.562 94.3123 305.545 92.092 cv
305.545 89.8513 306.382 89.1008 307.557 89.7793 cv
308.776 90.4834 309.47 92.1382 309.47 94.2661 cv
cp
f
311.893 93.2383 mo
310.869 93.2744 li
310.718 92.4988 li
311.982 92.4473 li
312.649 92.8325 li
312.649 99.5137 li
311.892 99.0769 li
311.893 93.2383 li
cp
f
315.463 97.8284 mo
315.463 99.5654 315.926 100.82 316.638 101.231 cv
317.439 101.693 317.822 100.835 317.822 99.1289 cv
317.822 97.4844 317.457 96.1943 316.647 95.7263 cv
315.961 95.3306 315.463 96.0093 315.463 97.8284 cv
cp
318.605 99.5398 mo
318.605 101.812 317.875 102.644 316.593 101.904 cv
315.463 101.251 314.697 99.5862 314.68 97.3657 cv
314.68 95.1255 315.516 94.3748 316.691 95.0535 cv
317.911 95.7571 318.605 97.4119 318.605 99.5398 cv
cp
f
321.027 98.5125 mo
320.004 98.5483 li
319.852 97.7725 li
321.117 97.7209 li
321.784 98.1064 li
321.784 104.787 li
321.027 104.351 li
321.027 98.5125 li
cp
f
324.598 103.102 mo
324.598 104.839 325.061 106.094 325.773 106.505 cv
326.574 106.967 326.957 106.109 326.957 104.403 cv
326.957 102.758 326.592 101.468 325.782 101 cv
325.096 100.604 324.598 101.283 324.598 103.102 cv
cp
327.74 104.814 mo
327.74 107.085 327.01 107.918 325.728 107.178 cv
324.598 106.525 323.832 104.86 323.814 102.64 cv
323.815 100.399 324.651 99.6487 325.826 100.327 cv
327.046 101.031 327.74 102.686 327.74 104.814 cv
cp
f
330.162 103.786 mo
329.139 103.822 li
328.987 103.047 li
330.251 102.995 li
330.919 103.38 li
330.919 110.062 li
330.162 109.625 li
330.162 103.786 li
cp
f
333.733 108.376 mo
333.732 110.113 334.195 111.367 334.908 111.778 cv
335.709 112.241 336.092 111.383 336.092 109.677 cv
336.092 108.032 335.727 106.742 334.916 106.274 cv
334.231 105.878 333.733 106.557 333.733 108.376 cv
cp
336.875 110.088 mo
336.875 112.359 336.145 113.192 334.863 112.452 cv
333.732 111.799 332.967 110.134 332.949 107.914 cv
332.949 105.673 333.786 104.922 334.961 105.601 cv
336.181 106.305 336.875 107.96 336.875 110.088 cv
cp
f
339.297 109.06 mo
338.273 109.096 li
338.122 108.32 li
339.386 108.269 li
340.054 108.654 li
340.054 115.335 li
339.297 114.898 li
339.297 109.06 li
cp
f
342.867 113.65 mo
342.867 115.387 343.33 116.641 344.042 117.052 cv
344.844 117.515 345.226 116.657 345.226 114.951 cv
345.226 113.306 344.861 112.016 344.051 111.548 cv
343.366 111.152 342.867 111.831 342.867 113.65 cv
cp
346.01 115.362 mo
346.01 117.633 345.28 118.466 343.998 117.726 cv
342.867 117.073 342.102 115.408 342.084 113.188 cv
342.084 110.947 342.921 110.197 344.096 110.875 cv
345.315 111.579 346.01 113.234 346.01 115.362 cv
cp
f
348.432 114.334 mo
347.408 114.37 li
347.257 113.594 li
348.521 113.543 li
349.189 113.928 li
349.188 120.609 li
348.432 120.172 li
348.432 114.334 li
cp
f
352.002 118.924 mo
352.002 120.661 352.465 121.915 353.177 122.326 cv
353.979 122.789 354.361 121.93 354.361 120.224 cv
354.361 118.58 353.996 117.29 353.186 116.822 cv
352.501 116.426 352.002 117.104 352.002 118.924 cv
cp
355.144 120.635 mo
355.144 122.907 354.415 123.74 353.133 122.999 cv
352.002 122.346 351.237 120.681 351.219 118.461 cv
351.219 116.221 352.056 115.47 353.231 116.149 cv
354.45 116.853 355.144 118.507 355.144 120.635 cv
cp
f
357.567 119.608 mo
356.543 119.644 li
356.392 118.868 li
357.656 118.816 li
358.323 119.202 li
358.323 125.883 li
357.567 125.446 li
357.567 119.608 li
cp
f
361.137 124.198 mo
361.137 125.935 361.6 127.189 362.312 127.6 cv
363.113 128.063 363.496 127.204 363.496 125.498 cv
363.496 123.854 363.131 122.563 362.321 122.096 cv
361.635 121.7 361.137 122.379 361.137 124.198 cv
cp
364.279 125.909 mo
364.279 128.181 363.55 129.013 362.267 128.273 cv
361.137 127.62 360.371 125.956 360.354 123.735 cv
360.354 121.494 361.19 120.744 362.366 121.422 cv
363.585 122.126 364.279 123.781 364.279 125.909 cv
cp
f
366.701 124.882 mo
365.678 124.918 li
365.527 124.142 li
366.791 124.09 li
367.458 124.476 li
367.458 131.157 li
366.701 130.72 li
366.701 124.882 li
cp
f
370.272 129.471 mo
370.272 131.209 370.735 132.463 371.447 132.874 cv
372.248 133.336 372.631 132.478 372.631 130.772 cv
372.631 129.127 372.266 127.837 371.456 127.37 cv
370.77 126.974 370.272 127.652 370.272 129.471 cv
cp
373.414 131.183 mo
373.414 133.455 372.685 134.287 371.402 133.547 cv
370.272 132.894 369.506 131.229 369.489 129.009 cv
369.489 126.769 370.325 126.018 371.5 126.697 cv
372.72 127.4 373.414 129.055 373.414 131.183 cv
cp
f
375.836 130.156 mo
374.813 130.191 li
374.661 129.416 li
375.926 129.364 li
376.593 129.75 li
376.593 136.431 li
375.836 135.994 li
375.836 130.156 li
cp
f
379.407 134.745 mo
379.407 136.483 379.87 137.737 380.582 138.148 cv
381.384 138.611 381.766 137.752 381.766 136.046 cv
381.766 134.402 381.401 133.111 380.591 132.644 cv
379.906 132.248 379.407 132.927 379.407 134.745 cv
cp
382.549 136.457 mo
382.549 138.729 381.82 139.561 380.538 138.821 cv
379.407 138.168 378.642 136.503 378.624 134.283 cv
378.624 132.042 379.461 131.292 380.636 131.97 cv
381.855 132.675 382.549 134.329 382.549 136.457 cv
cp
f
260.653 78.5222 mo
260.653 80.2595 261.116 81.5134 261.828 81.9246 cv
262.63 82.387 263.012 81.5288 263.012 79.8228 cv
263.012 78.178 262.647 76.8882 261.837 76.4204 cv
261.152 76.0244 260.653 76.7029 260.653 78.5222 cv
cp
263.796 80.2336 mo
263.796 82.5054 263.066 83.3381 261.784 82.5977 cv
260.653 81.9448 259.888 80.2798 259.87 78.0598 cv
259.87 75.8191 260.707 75.0686 261.882 75.7471 cv
263.101 76.4509 263.796 78.1057 263.796 80.2336 cv
cp
f
266.218 79.2061 mo
265.194 79.2422 li
265.043 78.4663 li
266.307 78.4148 li
266.974 78.8003 li
266.974 85.4812 li
266.218 85.0444 li
266.218 79.2061 li
cp
f
269.788 83.7959 mo
269.788 85.5332 270.251 86.7874 270.963 87.1985 cv
271.765 87.6611 272.147 86.8027 272.147 85.0967 cv
272.147 83.4521 271.782 82.1619 270.972 81.6941 cv
270.286 81.2983 269.788 81.9771 269.788 83.7959 cv
cp
272.93 85.5076 mo
272.93 87.7793 272.201 88.6118 270.919 87.8716 cv
269.788 87.2188 269.023 85.554 269.005 83.3335 cv
269.005 81.0928 269.842 80.3425 271.017 81.0208 cv
272.236 81.7249 272.93 83.3799 272.93 85.5076 cv
cp
f
275.353 84.4802 mo
274.329 84.5161 li
274.178 83.7405 li
275.442 83.6887 li
276.109 84.074 li
276.109 90.7554 li
275.353 90.3184 li
275.353 84.4802 li
cp
f
278.923 89.0698 mo
278.923 90.8071 279.386 92.0613 280.098 92.4722 cv
280.899 92.9348 281.282 92.0764 281.282 90.3704 cv
281.282 88.7258 280.917 87.4358 280.107 86.968 cv
279.422 86.572 278.923 87.2507 278.923 89.0698 cv
cp
282.065 90.7813 mo
282.065 93.053 281.335 93.8857 280.053 93.1453 cv
278.923 92.4927 278.157 90.8279 278.14 88.6077 cv
278.14 86.3669 278.976 85.6162 280.152 86.2949 cv
281.371 86.9988 282.065 88.6536 282.065 90.7813 cv
cp
f
284.487 89.7539 mo
283.464 89.7898 li
283.313 89.0142 li
284.577 88.9629 li
285.244 89.3479 li
285.244 96.0291 li
284.487 95.5923 li
284.487 89.7539 li
cp
f
288.058 94.3435 mo
288.058 96.0808 288.521 97.3352 289.233 97.7461 cv
290.034 98.2087 290.417 97.3506 290.417 95.6443 cv
290.417 93.9998 290.052 92.7095 289.242 92.2417 cv
288.556 91.8462 288.058 92.5247 288.058 94.3435 cv
cp
291.2 96.0554 mo
291.2 98.3269 290.47 99.1594 289.188 98.4194 cv
288.058 97.7666 287.292 96.1016 287.275 93.8813 cv
287.275 91.6406 288.111 90.8904 289.286 91.5686 cv
290.506 92.2727 291.2 93.9275 291.2 96.0554 cv
cp
f
293.622 95.0278 mo
292.599 95.064 li
292.448 94.2881 li
293.711 94.2366 li
294.379 94.6216 li
294.379 101.303 li
293.622 100.866 li
293.622 95.0278 li
cp
f
298.189 97.6646 mo
297.166 97.7007 li
297.015 96.925 li
298.279 96.8735 li
298.946 97.2588 li
298.946 103.94 li
298.189 103.503 li
298.189 97.6646 li
cp
f
301.76 102.255 mo
301.76 103.992 302.224 105.246 302.935 105.657 cv
303.737 106.12 304.12 105.261 304.12 103.555 cv
304.12 101.911 303.755 100.62 302.944 100.153 cv
302.259 99.7571 301.76 100.436 301.76 102.255 cv
cp
304.903 103.966 mo
304.903 106.238 304.173 107.071 302.891 106.33 cv
301.76 105.677 300.995 104.012 300.977 101.792 cv
300.977 99.5515 301.814 98.8013 302.989 99.48 cv
304.208 100.184 304.903 101.838 304.903 103.966 cv
cp
f
307.325 102.939 mo
306.301 102.975 li
306.15 102.199 li
307.414 102.147 li
308.082 102.533 li
308.081 109.214 li
307.325 108.777 li
307.325 102.939 li
cp
f
310.895 107.529 mo
310.895 109.266 311.358 110.52 312.07 110.931 cv
312.872 111.394 313.255 110.535 313.255 108.829 cv
313.255 107.185 312.889 105.895 312.079 105.427 cv
311.394 105.031 310.895 105.709 310.895 107.529 cv
cp
314.038 109.24 mo
314.038 111.512 313.308 112.344 312.026 111.604 cv
310.895 110.952 310.13 109.287 310.112 107.066 cv
310.112 104.826 310.949 104.075 312.124 104.754 cv
313.343 105.458 314.038 107.113 314.038 109.24 cv
cp
f
316.46 108.213 mo
315.436 108.249 li
315.285 107.473 li
316.549 107.421 li
317.216 107.807 li
317.216 114.488 li
316.46 114.051 li
316.46 108.213 li
cp
f
320.03 112.802 mo
320.03 114.54 320.493 115.794 321.205 116.205 cv
322.006 116.667 322.389 115.809 322.389 114.103 cv
322.389 112.458 322.024 111.168 321.214 110.7 cv
320.529 110.305 320.03 110.983 320.03 112.802 cv
cp
323.173 114.514 mo
323.173 116.786 322.443 117.618 321.16 116.878 cv
320.03 116.225 319.264 114.56 319.247 112.34 cv
319.247 110.1 320.083 109.349 321.259 110.028 cv
322.478 110.731 323.173 112.386 323.173 114.514 cv
cp
f
325.594 113.487 mo
324.571 113.522 li
324.42 112.747 li
325.684 112.695 li
326.351 113.081 li
326.351 119.762 li
325.594 119.325 li
325.594 113.487 li
cp
f
329.165 118.076 mo
329.165 119.813 329.628 121.068 330.34 121.479 cv
331.141 121.941 331.524 121.083 331.524 119.377 cv
331.524 117.732 331.159 116.442 330.349 115.974 cv
329.663 115.579 329.165 116.257 329.165 118.076 cv
cp
332.307 119.788 mo
332.307 122.06 331.578 122.892 330.295 122.152 cv
329.165 121.499 328.399 119.834 328.382 117.614 cv
328.382 115.373 329.219 114.623 330.394 115.301 cv
331.613 116.005 332.307 117.66 332.307 119.788 cv
cp
f
334.729 118.76 mo
333.706 118.796 li
333.555 118.021 li
334.819 117.969 li
335.486 118.354 li
335.486 125.036 li
334.729 124.599 li
334.729 118.76 li
cp
f
339.297 121.397 mo
338.273 121.433 li
338.122 120.657 li
339.386 120.606 li
340.054 120.991 li
340.054 127.673 li
339.297 127.236 li
339.297 121.397 li
cp
f
342.867 125.987 mo
342.867 127.724 343.33 128.979 344.042 129.39 cv
344.844 129.852 345.226 128.994 345.226 127.288 cv
345.226 125.643 344.861 124.353 344.051 123.885 cv
343.366 123.49 342.867 124.168 342.867 125.987 cv
cp
346.009 127.699 mo
346.009 129.97 345.28 130.803 343.998 130.063 cv
342.867 129.41 342.102 127.745 342.084 125.525 cv
342.084 123.284 342.921 122.534 344.096 123.212 cv
345.315 123.916 346.009 125.571 346.009 127.699 cv
cp
f
348.432 126.671 mo
347.408 126.707 li
347.257 125.931 li
348.521 125.88 li
349.188 126.265 li
349.188 132.946 li
348.432 132.51 li
348.432 126.671 li
cp
f
352.002 131.261 mo
352.002 132.998 352.465 134.252 353.177 134.664 cv
353.978 135.126 354.361 134.268 354.361 132.562 cv
354.361 130.917 353.996 129.627 353.186 129.159 cv
352.501 128.763 352.002 129.442 352.002 131.261 cv
cp
355.144 132.973 mo
355.144 135.244 354.415 136.077 353.132 135.336 cv
352.002 134.684 351.236 133.019 351.219 130.799 cv
351.219 128.558 352.055 127.807 353.231 128.486 cv
354.45 129.19 355.144 130.845 355.144 132.973 cv
cp
f
357.566 131.945 mo
356.543 131.981 li
356.392 131.205 li
357.656 131.154 li
358.323 131.539 li
358.323 138.22 li
357.566 137.783 li
357.566 131.945 li
cp
f
361.137 136.535 mo
361.137 138.272 361.6 139.526 362.312 139.937 cv
363.113 140.4 363.496 139.542 363.496 137.835 cv
363.496 136.191 363.131 134.901 362.321 134.433 cv
361.635 134.037 361.137 134.716 361.137 136.535 cv
cp
364.279 138.247 mo
364.279 140.518 363.55 141.351 362.267 140.61 cv
361.137 139.958 360.371 138.293 360.354 136.072 cv
360.354 133.832 361.19 133.081 362.365 133.76 cv
363.585 134.464 364.279 136.119 364.279 138.247 cv
cp
f
366.701 137.219 mo
365.678 137.255 li
365.527 136.479 li
366.791 136.427 li
367.458 136.813 li
367.458 143.494 li
366.701 143.057 li
366.701 137.219 li
cp
f
370.272 141.809 mo
370.272 143.546 370.735 144.8 371.447 145.211 cv
372.248 145.674 372.631 144.815 372.631 143.109 cv
372.631 141.465 372.266 140.175 371.456 139.707 cv
370.77 139.311 370.272 139.99 370.272 141.809 cv
cp
373.414 143.521 mo
373.414 145.792 372.684 146.625 371.402 145.884 cv
370.272 145.232 369.506 143.567 369.488 141.346 cv
369.488 139.106 370.325 138.355 371.5 139.034 cv
372.72 139.738 373.414 141.393 373.414 143.521 cv
cp
f
375.836 142.493 mo
374.813 142.529 li
374.661 141.753 li
375.925 141.702 li
376.593 142.087 li
376.593 148.768 li
375.836 148.331 li
375.836 142.493 li
cp
f
379.407 147.083 mo
379.407 148.82 379.87 150.074 380.582 150.485 cv
381.383 150.948 381.766 150.09 381.766 148.384 cv
381.766 146.739 381.401 145.448 380.591 144.981 cv
379.906 144.585 379.407 145.264 379.407 147.083 cv
cp
382.549 148.794 mo
382.549 151.066 381.82 151.899 380.537 151.158 cv
379.407 150.506 378.641 148.841 378.624 146.62 cv
378.624 144.38 379.46 143.629 380.636 144.308 cv
381.855 145.012 382.549 146.667 382.549 148.794 cv
cp
f
261.65 88.9063 mo
260.626 88.9424 li
260.475 88.167 li
261.74 88.1152 li
262.407 88.5005 li
262.407 95.1819 li
261.65 94.7449 li
261.65 88.9063 li
cp
f
265.22 93.4963 mo
265.22 95.2334 265.684 96.4878 266.396 96.8987 cv
267.197 97.3613 267.58 96.5029 267.58 94.7969 cv
267.58 93.1523 267.215 91.8623 266.404 91.3943 cv
265.719 90.9985 265.22 91.6772 265.22 93.4963 cv
cp
268.363 95.2078 mo
268.363 97.4795 267.633 98.3123 266.351 97.5718 cv
265.22 96.9192 264.455 95.2542 264.437 93.0342 cv
264.437 90.7935 265.274 90.0427 266.449 90.7214 cv
267.669 91.4253 268.363 93.0801 268.363 95.2078 cv
cp
f
270.785 94.1804 mo
269.761 94.2163 li
269.61 93.4407 li
270.874 93.3889 li
271.542 93.7744 li
271.542 100.456 li
270.785 100.019 li
270.785 94.1804 li
cp
f
274.355 98.77 mo
274.355 100.507 274.818 101.762 275.531 102.173 cv
276.332 102.635 276.715 101.777 276.715 100.071 cv
276.715 98.4263 276.349 97.136 275.539 96.6682 cv
274.854 96.2725 274.355 96.9509 274.355 98.77 cv
cp
277.498 100.482 mo
277.498 102.753 276.768 103.586 275.486 102.846 cv
274.355 102.193 273.59 100.528 273.572 98.3079 cv
273.572 96.0671 274.409 95.3167 275.584 95.9951 cv
276.803 96.6992 277.498 98.354 277.498 100.482 cv
cp
f
279.92 99.4541 mo
278.896 99.49 li
278.745 98.7146 li
280.009 98.6631 li
280.676 99.0481 li
280.676 105.729 li
279.92 105.293 li
279.92 99.4541 li
cp
f
283.49 104.044 mo
283.49 105.781 283.953 107.035 284.665 107.446 cv
285.466 107.909 285.849 107.051 285.849 105.344 cv
285.849 103.7 285.484 102.41 284.674 101.942 cv
283.989 101.546 283.49 102.225 283.49 104.044 cv
cp
286.633 105.756 mo
286.633 108.027 285.903 108.86 284.62 108.12 cv
283.49 107.467 282.724 105.802 282.707 103.582 cv
282.707 101.341 283.543 100.591 284.719 101.269 cv
285.938 101.973 286.633 103.628 286.633 105.756 cv
cp
f
289.055 104.728 mo
288.031 104.764 li
287.88 103.988 li
289.144 103.937 li
289.811 104.322 li
289.811 111.003 li
289.054 110.566 li
289.055 104.728 li
cp
f
292.625 109.318 mo
292.625 111.055 293.088 112.309 293.8 112.72 cv
294.601 113.183 294.984 112.325 294.984 110.619 cv
294.984 108.974 294.619 107.684 293.809 107.216 cv
293.123 106.82 292.625 107.499 292.625 109.318 cv
cp
295.767 111.03 mo
295.767 113.301 295.038 114.134 293.755 113.394 cv
292.625 112.741 291.859 111.076 291.842 108.855 cv
291.842 106.615 292.678 105.865 293.854 106.543 cv
295.073 107.247 295.767 108.902 295.767 111.03 cv
cp
f
297.192 111.955 mo
297.192 113.692 297.656 114.946 298.367 115.357 cv
299.169 115.82 299.552 114.961 299.552 113.255 cv
299.552 111.611 299.187 110.321 298.376 109.853 cv
297.691 109.457 297.192 110.135 297.192 111.955 cv
cp
300.335 113.667 mo
300.335 115.938 299.605 116.771 298.323 116.03 cv
297.192 115.378 296.427 113.713 296.409 111.492 cv
296.409 109.252 297.246 108.501 298.421 109.18 cv
299.641 109.884 300.335 111.539 300.335 113.667 cv
cp
f
301.76 114.592 mo
301.76 116.329 302.223 117.583 302.935 117.994 cv
303.737 118.457 304.12 117.599 304.12 115.893 cv
304.12 114.248 303.755 112.958 302.944 112.49 cv
302.259 112.094 301.76 112.773 301.76 114.592 cv
cp
304.903 116.303 mo
304.903 118.575 304.173 119.408 302.891 118.667 cv
301.76 118.015 300.995 116.35 300.977 114.129 cv
300.977 111.889 301.814 111.138 302.989 111.817 cv
304.208 112.521 304.903 114.176 304.903 116.303 cv
cp
f
307.325 115.276 mo
306.301 115.312 li
306.15 114.536 li
307.414 114.485 li
308.081 114.87 li
308.081 121.551 li
307.325 121.114 li
307.325 115.276 li
cp
f
310.895 119.866 mo
310.895 121.603 311.358 122.857 312.07 123.268 cv
312.871 123.731 313.254 122.872 313.254 121.167 cv
313.254 119.522 312.889 118.232 312.079 117.764 cv
311.394 117.368 310.895 118.047 310.895 119.866 cv
cp
314.038 121.578 mo
314.038 123.849 313.308 124.682 312.026 123.942 cv
310.895 123.289 310.13 121.624 310.112 119.404 cv
310.112 117.163 310.948 116.412 312.124 117.091 cv
313.343 117.795 314.038 119.45 314.038 121.578 cv
cp
f
316.459 120.55 mo
315.436 120.586 li
315.285 119.81 li
316.549 119.759 li
317.216 120.144 li
317.216 126.825 li
316.459 126.388 li
316.459 120.55 li
cp
f
320.03 125.14 mo
320.03 126.877 320.493 128.131 321.205 128.542 cv
322.006 129.005 322.389 128.146 322.389 126.44 cv
322.389 124.796 322.024 123.506 321.214 123.038 cv
320.528 122.642 320.03 123.321 320.03 125.14 cv
cp
323.172 126.851 mo
323.172 129.123 322.443 129.956 321.16 129.215 cv
320.03 128.563 319.264 126.897 319.247 124.677 cv
319.247 122.437 320.083 121.686 321.259 122.365 cv
322.478 123.069 323.172 124.723 323.172 126.851 cv
cp
f
325.594 125.824 mo
324.571 125.86 li
324.42 125.084 li
325.684 125.032 li
326.351 125.418 li
326.351 132.099 li
325.594 131.662 li
325.594 125.824 li
cp
f
329.165 130.414 mo
329.165 132.151 329.628 133.405 330.34 133.816 cv
331.141 134.279 331.524 133.42 331.524 131.714 cv
331.524 130.07 331.159 128.779 330.349 128.312 cv
329.663 127.916 329.165 128.594 329.165 130.414 cv
cp
332.307 132.125 mo
332.307 134.397 331.577 135.229 330.295 134.489 cv
329.165 133.836 328.399 132.171 328.381 129.951 cv
328.381 127.71 329.218 126.96 330.394 127.638 cv
331.613 128.343 332.307 129.997 332.307 132.125 cv
cp
f
334.729 131.098 mo
333.706 131.134 li
333.554 130.358 li
334.819 130.306 li
335.486 130.692 li
335.486 137.373 li
334.729 136.936 li
334.729 131.098 li
cp
f
339.297 133.734 mo
338.273 133.771 li
338.122 132.995 li
339.386 132.943 li
340.053 133.329 li
340.053 140.01 li
339.297 139.573 li
339.297 133.734 li
cp
f
342.867 138.324 mo
342.867 140.062 343.33 141.316 344.042 141.727 cv
344.843 142.189 345.226 141.331 345.226 139.625 cv
345.226 137.98 344.861 136.69 344.051 136.222 cv
343.366 135.827 342.867 136.505 342.867 138.324 cv
cp
346.009 140.036 mo
346.009 142.308 345.28 143.14 343.997 142.4 cv
342.867 141.747 342.101 140.082 342.084 137.862 cv
342.084 135.621 342.92 134.871 344.096 135.55 cv
345.315 136.253 346.009 137.908 346.009 140.036 cv
cp
f
348.432 139.009 mo
347.408 139.044 li
347.257 138.269 li
348.521 138.217 li
349.188 138.603 li
349.188 145.284 li
348.431 144.847 li
348.432 139.009 li
cp
f
352.002 143.598 mo
352.002 145.335 352.465 146.589 353.177 147.001 cv
353.978 147.463 354.361 146.605 354.361 144.899 cv
354.361 143.254 353.996 141.964 353.186 141.496 cv
352.5 141.101 352.002 141.779 352.002 143.598 cv
cp
355.144 145.31 mo
355.144 147.581 354.415 148.414 353.132 147.674 cv
352.002 147.021 351.236 145.356 351.219 143.136 cv
351.219 140.895 352.055 140.145 353.23 140.823 cv
354.45 141.527 355.144 143.182 355.144 145.31 cv
cp
f
357.566 144.282 mo
356.543 144.318 li
356.392 143.543 li
357.656 143.491 li
358.323 143.876 li
358.323 150.558 li
357.566 150.121 li
357.566 144.282 li
cp
f
361.137 148.872 mo
361.137 150.609 361.6 151.864 362.312 152.274 cv
363.113 152.737 363.496 151.879 363.496 150.173 cv
363.496 148.528 363.131 147.238 362.321 146.77 cv
361.635 146.374 361.137 147.053 361.137 148.872 cv
cp
364.279 150.584 mo
364.279 152.855 363.549 153.688 362.267 152.948 cv
361.137 152.295 360.371 150.63 360.353 148.41 cv
360.353 146.169 361.19 145.418 362.365 146.097 cv
363.585 146.801 364.279 148.456 364.279 150.584 cv
cp
f
366.701 149.556 mo
365.677 149.592 li
365.527 148.816 li
366.79 148.765 li
367.458 149.15 li
367.458 155.831 li
366.701 155.395 li
366.701 149.556 li
cp
f
370.271 154.146 mo
370.271 155.883 370.734 157.137 371.447 157.549 cv
372.248 158.011 372.631 157.153 372.631 155.446 cv
372.631 153.802 372.266 152.512 371.455 152.044 cv
370.77 151.648 370.271 152.327 370.271 154.146 cv
cp
373.414 155.858 mo
373.414 158.129 372.684 158.962 371.402 158.221 cv
370.271 157.569 369.506 155.904 369.488 153.684 cv
369.488 151.443 370.325 150.692 371.5 151.371 cv
372.72 152.075 373.414 153.73 373.414 155.858 cv
cp
f
375.836 154.83 mo
374.813 154.866 li
374.661 154.09 li
375.925 154.039 li
376.593 154.424 li
376.593 161.105 li
375.836 160.668 li
375.836 154.83 li
cp
f
379.407 159.42 mo
379.407 161.157 379.87 162.411 380.582 162.823 cv
381.383 163.285 381.766 162.427 381.766 160.721 cv
381.766 159.076 381.401 157.786 380.591 157.318 cv
379.905 156.922 379.407 157.601 379.407 159.42 cv
cp
382.549 161.132 mo
382.549 163.403 381.82 164.236 380.537 163.496 cv
379.407 162.843 378.641 161.178 378.624 158.958 cv
378.624 156.717 379.46 155.967 380.635 156.645 cv
381.855 157.349 382.549 159.004 382.549 161.132 cv
cp
f
260.653 103.196 mo
260.653 104.934 261.116 106.188 261.828 106.599 cv
262.629 107.062 263.012 106.203 263.012 104.497 cv
263.012 102.853 262.647 101.562 261.837 101.094 cv
261.151 100.699 260.653 101.377 260.653 103.196 cv
cp
263.795 104.908 mo
263.795 107.18 263.065 108.012 261.783 107.272 cv
260.653 106.619 259.887 104.954 259.87 102.734 cv
259.87 100.493 260.706 99.7427 261.882 100.421 cv
263.101 101.125 263.795 102.78 263.795 104.908 cv
cp
f
266.217 103.88 mo
265.194 103.916 li
265.043 103.141 li
266.307 103.089 li
266.974 103.474 li
266.974 110.156 li
266.217 109.719 li
266.217 103.88 li
cp
f
269.788 108.47 mo
269.788 110.207 270.251 111.462 270.963 111.873 cv
271.764 112.335 272.147 111.477 272.147 109.771 cv
272.147 108.126 271.782 106.836 270.972 106.368 cv
270.286 105.972 269.788 106.651 269.788 108.47 cv
cp
272.93 110.182 mo
272.93 112.453 272.2 113.286 270.918 112.546 cv
269.788 111.893 269.022 110.228 269.005 108.008 cv
269.005 105.767 269.841 105.017 271.016 105.695 cv
272.236 106.399 272.93 108.054 272.93 110.182 cv
cp
f
275.352 109.154 mo
274.329 109.19 li
274.177 108.415 li
275.442 108.363 li
276.109 108.748 li
276.109 115.429 li
275.352 114.993 li
275.352 109.154 li
cp
f
279.92 111.791 mo
278.896 111.827 li
278.745 111.052 li
280.009 111 li
280.676 111.385 li
280.676 118.066 li
279.919 117.63 li
279.92 111.791 li
cp
f
283.49 116.381 mo
283.49 118.118 283.953 119.372 284.665 119.784 cv
285.466 120.246 285.849 119.387 285.849 117.681 cv
285.849 116.037 285.484 114.747 284.674 114.279 cv
283.988 113.884 283.49 114.562 283.49 116.381 cv
cp
286.632 118.093 mo
286.632 120.364 285.903 121.197 284.62 120.457 cv
283.49 119.804 282.724 118.139 282.707 115.919 cv
282.707 113.678 283.543 112.927 284.719 113.606 cv
285.938 114.31 286.632 115.965 286.632 118.093 cv
cp
f
289.054 117.065 mo
288.031 117.101 li
287.88 116.325 li
289.144 116.274 li
289.811 116.659 li
289.811 123.34 li
289.054 122.903 li
289.054 117.065 li
cp
f
292.625 121.655 mo
292.625 123.392 293.088 124.646 293.8 125.057 cv
294.601 125.52 294.984 124.662 294.984 122.956 cv
294.984 121.311 294.619 120.021 293.809 119.553 cv
293.123 119.157 292.625 119.836 292.625 121.655 cv
cp
295.767 123.366 mo
295.767 125.638 295.037 126.47 293.755 125.73 cv
292.625 125.078 291.859 123.413 291.841 121.192 cv
291.842 118.952 292.678 118.201 293.854 118.88 cv
295.073 119.584 295.767 121.239 295.767 123.366 cv
cp
f
298.189 122.339 mo
297.166 122.375 li
297.015 121.599 li
298.279 121.548 li
298.946 121.933 li
298.946 128.614 li
298.189 128.177 li
298.189 122.339 li
cp
f
301.76 126.929 mo
301.76 128.666 302.223 129.92 302.935 130.332 cv
303.736 130.794 304.119 129.936 304.119 128.229 cv
304.119 126.585 303.754 125.295 302.944 124.827 cv
302.259 124.431 301.76 125.11 301.76 126.929 cv
cp
304.903 128.641 mo
304.903 130.912 304.173 131.745 302.891 131.004 cv
301.76 130.352 300.995 128.687 300.977 126.467 cv
300.977 124.226 301.813 123.475 302.989 124.154 cv
304.208 124.858 304.903 126.513 304.903 128.641 cv
cp
f
306.328 129.566 mo
306.328 131.303 306.791 132.557 307.503 132.968 cv
308.304 133.431 308.687 132.573 308.687 130.866 cv
308.687 129.222 308.322 127.932 307.512 127.464 cv
306.826 127.068 306.328 127.747 306.328 129.566 cv
cp
309.47 131.278 mo
309.47 133.549 308.74 134.382 307.458 133.641 cv
306.328 132.989 305.562 131.324 305.544 129.104 cv
305.544 126.863 306.381 126.112 307.556 126.791 cv
308.776 127.495 309.47 129.15 309.47 131.278 cv
cp
f
311.892 130.25 mo
310.868 130.286 li
310.717 129.51 li
311.981 129.458 li
312.649 129.844 li
312.649 136.525 li
311.892 136.088 li
311.892 130.25 li
cp
f
315.462 134.84 mo
315.462 136.577 315.925 137.831 316.637 138.242 cv
317.439 138.705 317.821 137.846 317.821 136.14 cv
317.822 134.496 317.457 133.206 316.646 132.738 cv
315.961 132.342 315.462 133.021 315.462 134.84 cv
cp
318.605 136.552 mo
318.605 138.823 317.875 139.656 316.593 138.916 cv
315.462 138.263 314.697 136.598 314.679 134.377 cv
314.679 132.137 315.516 131.386 316.691 132.065 cv
317.911 132.769 318.605 134.424 318.605 136.552 cv
cp
f
321.027 135.524 mo
320.003 135.56 li
319.852 134.784 li
321.116 134.733 li
321.784 135.118 li
321.784 141.799 li
321.027 141.362 li
321.027 135.524 li
cp
f
324.597 140.114 mo
324.597 141.851 325.06 143.105 325.772 143.516 cv
326.574 143.979 326.956 143.12 326.956 141.414 cv
326.956 139.77 326.591 138.479 325.781 138.012 cv
325.096 137.616 324.597 138.294 324.597 140.114 cv
cp
327.74 141.825 mo
327.74 144.097 327.01 144.93 325.728 144.189 cv
324.597 143.536 323.832 141.871 323.814 139.651 cv
323.814 137.411 324.651 136.66 325.826 137.339 cv
327.045 138.042 327.74 139.697 327.74 141.825 cv
cp
f
330.162 140.798 mo
329.138 140.834 li
328.987 140.058 li
330.251 140.006 li
330.918 140.392 li
330.918 147.073 li
330.162 146.636 li
330.162 140.798 li
cp
f
333.732 145.387 mo
333.732 147.125 334.195 148.379 334.907 148.79 cv
335.708 149.253 336.091 148.394 336.091 146.688 cv
336.091 145.043 335.726 143.753 334.916 143.286 cv
334.231 142.89 333.732 143.568 333.732 145.387 cv
cp
336.875 147.099 mo
336.875 149.371 336.145 150.203 334.863 149.463 cv
333.732 148.81 332.966 147.145 332.949 144.925 cv
332.949 142.684 333.785 141.934 334.961 142.612 cv
336.18 143.316 336.875 144.971 336.875 147.099 cv
cp
f
339.297 146.072 mo
338.273 146.108 li
338.122 145.332 li
339.386 145.28 li
340.053 145.666 li
340.053 152.347 li
339.296 151.91 li
339.297 146.072 li
cp
f
342.867 150.661 mo
342.867 152.399 343.33 153.653 344.042 154.064 cv
344.843 154.526 345.226 153.668 345.226 151.962 cv
345.226 150.317 344.861 149.027 344.051 148.56 cv
343.365 148.164 342.867 148.842 342.867 150.661 cv
cp
346.009 152.373 mo
346.009 154.645 345.28 155.477 343.997 154.737 cv
342.867 154.084 342.101 152.419 342.084 150.199 cv
342.084 147.958 342.92 147.208 344.095 147.886 cv
345.315 148.59 346.009 150.245 346.009 152.373 cv
cp
f
348.431 151.345 mo
347.408 151.381 li
347.257 150.605 li
348.521 150.554 li
349.188 150.939 li
349.188 157.62 li
348.431 157.184 li
348.431 151.345 li
cp
f
352.002 155.935 mo
352.002 157.672 352.465 158.927 353.177 159.338 cv
353.978 159.8 354.361 158.942 354.361 157.236 cv
354.361 155.591 353.996 154.301 353.186 153.833 cv
352.5 153.438 352.002 154.116 352.002 155.935 cv
cp
355.144 157.647 mo
355.144 159.918 354.414 160.751 353.132 160.011 cv
352.002 159.358 351.236 157.693 351.218 155.473 cv
351.218 153.232 352.055 152.482 353.23 153.16 cv
354.45 153.864 355.144 155.519 355.144 157.647 cv
cp
f
357.566 156.619 mo
356.542 156.655 li
356.392 155.88 li
357.656 155.828 li
358.323 156.213 li
358.323 162.895 li
357.566 162.458 li
357.566 156.619 li
cp
f
361.136 161.209 mo
361.136 162.946 361.6 164.2 362.312 164.611 cv
363.113 165.074 363.496 164.216 363.496 162.51 cv
363.496 160.865 363.131 159.575 362.32 159.107 cv
361.635 158.711 361.137 159.39 361.136 161.209 cv
cp
364.279 162.921 mo
364.279 165.192 363.549 166.025 362.267 165.285 cv
361.136 164.632 360.371 162.967 360.353 160.747 cv
360.353 158.506 361.19 157.755 362.365 158.434 cv
363.585 159.138 364.279 160.793 364.279 162.921 cv
cp
f
366.701 161.893 mo
365.677 161.929 li
365.526 161.153 li
366.79 161.102 li
367.458 161.487 li
367.458 168.168 li
366.701 167.731 li
366.701 161.893 li
cp
f
370.271 166.483 mo
370.271 168.22 370.734 169.474 371.446 169.885 cv
372.248 170.348 372.631 169.49 372.631 167.784 cv
372.631 166.139 372.266 164.849 371.455 164.381 cv
370.77 163.985 370.271 164.664 370.271 166.483 cv
cp
373.414 168.195 mo
373.414 170.466 372.684 171.299 371.402 170.559 cv
370.271 169.906 369.506 168.241 369.488 166.021 cv
369.488 163.78 370.325 163.03 371.5 163.708 cv
372.719 164.412 373.414 166.067 373.414 168.195 cv
cp
f
375.836 167.167 mo
374.812 167.203 li
374.661 166.427 li
375.925 166.376 li
376.593 166.761 li
376.592 173.442 li
375.836 173.005 li
375.836 167.167 li
cp
f
379.407 171.757 mo
379.407 173.494 379.87 174.748 380.582 175.159 cv
381.383 175.622 381.766 174.764 381.766 173.058 cv
381.766 171.413 381.401 170.123 380.591 169.655 cv
379.905 169.259 379.407 169.938 379.407 171.757 cv
cp
382.549 173.469 mo
382.549 175.74 381.819 176.573 380.537 175.833 cv
379.407 175.18 378.641 173.515 378.623 171.295 cv
378.623 169.054 379.46 168.303 380.635 168.982 cv
381.855 169.686 382.549 171.341 382.549 173.469 cv
cp
f
260.653 115.533 mo
260.653 117.271 261.116 118.525 261.828 118.936 cv
262.629 119.399 263.012 118.54 263.012 116.834 cv
263.012 115.19 262.647 113.899 261.837 113.432 cv
261.151 113.036 260.653 113.715 260.653 115.533 cv
cp
263.795 117.245 mo
263.795 119.517 263.065 120.349 261.783 119.609 cv
260.653 118.957 259.887 117.292 259.87 115.071 cv
259.87 112.831 260.706 112.08 261.881 112.759 cv
263.101 113.463 263.795 115.117 263.795 117.245 cv
cp
f
266.217 116.218 mo
265.194 116.254 li
265.042 115.478 li
266.307 115.426 li
266.974 115.812 li
266.974 122.493 li
266.217 122.056 li
266.217 116.218 li
cp
f
269.788 120.807 mo
269.788 122.545 270.251 123.799 270.963 124.21 cv
271.764 124.672 272.147 123.814 272.147 122.108 cv
272.147 120.463 271.782 119.173 270.972 118.706 cv
270.286 118.31 269.788 118.988 269.788 120.807 cv
cp
272.93 122.519 mo
272.93 124.791 272.2 125.623 270.918 124.883 cv
269.788 124.23 269.022 122.565 269.004 120.345 cv
269.004 118.104 269.841 117.354 271.016 118.032 cv
272.236 118.736 272.93 120.391 272.93 122.519 cv
cp
f
275.352 121.491 mo
274.328 121.528 li
274.177 120.752 li
275.441 120.7 li
276.109 121.086 li
276.109 127.767 li
275.352 127.33 li
275.352 121.491 li
cp
f
278.922 126.081 mo
278.922 127.818 279.385 129.073 280.098 129.484 cv
280.899 129.946 281.282 129.088 281.282 127.382 cv
281.282 125.737 280.917 124.447 280.106 123.979 cv
279.421 123.584 278.922 124.262 278.922 126.081 cv
cp
282.065 127.793 mo
282.065 130.064 281.335 130.897 280.053 130.157 cv
278.922 129.504 278.157 127.839 278.139 125.619 cv
278.139 123.378 278.976 122.628 280.151 123.306 cv
281.371 124.01 282.065 125.665 282.065 127.793 cv
cp
f
284.487 126.765 mo
283.463 126.802 li
283.312 126.026 li
284.576 125.974 li
285.244 126.359 li
285.244 133.041 li
284.487 132.604 li
284.487 126.765 li
cp
f
288.057 131.355 mo
288.057 133.093 288.521 134.346 289.232 134.758 cv
290.034 135.22 290.417 134.362 290.417 132.656 cv
290.417 131.011 290.051 129.721 289.241 129.253 cv
288.556 128.857 288.057 129.536 288.057 131.355 cv
cp
291.2 133.067 mo
291.2 135.338 290.47 136.171 289.188 135.431 cv
288.057 134.778 287.292 133.113 287.274 130.893 cv
287.274 128.652 288.111 127.902 289.286 128.58 cv
290.505 129.284 291.2 130.939 291.2 133.067 cv
cp
f
293.622 132.039 mo
292.598 132.075 li
292.447 131.299 li
293.711 131.248 li
294.379 131.633 li
294.378 138.314 li
293.622 137.877 li
293.622 132.039 li
cp
f
298.189 134.676 mo
297.166 134.712 li
297.014 133.936 li
298.279 133.885 li
298.946 134.27 li
298.946 140.951 li
298.189 140.514 li
298.189 134.676 li
cp
f
301.76 139.266 mo
301.76 141.003 302.223 142.258 302.935 142.669 cv
303.736 143.131 304.119 142.273 304.119 140.567 cv
304.119 138.922 303.754 137.632 302.944 137.164 cv
302.258 136.769 301.76 137.447 301.76 139.266 cv
cp
304.902 140.978 mo
304.902 143.249 304.173 144.082 302.891 143.342 cv
301.76 142.689 300.995 141.024 300.977 138.804 cv
300.977 136.563 301.813 135.813 302.989 136.491 cv
304.208 137.195 304.902 138.85 304.902 140.978 cv
cp
f
307.324 139.95 mo
306.301 139.986 li
306.15 139.211 li
307.414 139.159 li
308.081 139.544 li
308.081 146.226 li
307.324 145.789 li
307.324 139.95 li
cp
f
310.895 144.54 mo
310.895 146.277 311.358 147.531 312.07 147.942 cv
312.871 148.405 313.254 147.547 313.254 145.841 cv
313.254 144.196 312.889 142.906 312.079 142.438 cv
311.393 142.042 310.895 142.721 310.895 144.54 cv
cp
314.037 146.252 mo
314.037 148.523 313.307 149.356 312.025 148.616 cv
310.895 147.963 310.129 146.298 310.111 144.078 cv
310.111 141.837 310.948 141.087 312.124 141.765 cv
313.343 142.469 314.037 144.124 314.037 146.252 cv
cp
f
316.459 145.224 mo
315.436 145.26 li
315.285 144.484 li
316.549 144.433 li
317.216 144.818 li
317.216 151.499 li
316.459 151.063 li
316.459 145.224 li
cp
f
320.029 149.814 mo
320.029 151.551 320.493 152.805 321.205 153.217 cv
322.006 153.679 322.389 152.821 322.389 151.114 cv
322.389 149.47 322.024 148.18 321.214 147.712 cv
320.528 147.316 320.029 147.995 320.029 149.814 cv
cp
323.172 151.526 mo
323.172 153.797 322.442 154.63 321.16 153.889 cv
320.029 153.237 319.264 151.572 319.246 149.352 cv
319.246 147.111 320.083 146.36 321.258 147.039 cv
322.478 147.743 323.172 149.398 323.172 151.526 cv
cp
f
325.594 150.498 mo
324.571 150.534 li
324.419 149.758 li
325.684 149.707 li
326.351 150.092 li
326.351 156.773 li
325.594 156.336 li
325.594 150.498 li
cp
f
329.164 155.088 mo
329.164 156.825 329.628 158.079 330.34 158.49 cv
331.141 158.953 331.524 158.094 331.524 156.388 cv
331.524 154.744 331.159 153.453 330.349 152.986 cv
329.663 152.59 329.164 153.269 329.164 155.088 cv
cp
332.307 156.799 mo
332.307 159.071 331.577 159.904 330.295 159.163 cv
329.164 158.51 328.399 156.845 328.381 154.625 cv
328.381 152.385 329.218 151.634 330.393 152.313 cv
331.612 153.017 332.307 154.671 332.307 156.799 cv
cp
f
334.729 155.772 mo
333.705 155.808 li
333.554 155.032 li
334.818 154.98 li
335.486 155.366 li
335.485 162.047 li
334.729 161.61 li
334.729 155.772 li
cp
f
339.296 158.409 mo
338.273 158.445 li
338.122 157.669 li
339.386 157.617 li
340.053 158.003 li
340.053 164.684 li
339.296 164.247 li
339.296 158.409 li
cp
f
342.867 162.999 mo
342.867 164.736 343.33 165.99 344.042 166.401 cv
344.843 166.864 345.226 166.005 345.226 164.299 cv
345.226 162.655 344.861 161.365 344.051 160.897 cv
343.365 160.501 342.867 161.179 342.867 162.999 cv
cp
346.009 164.71 mo
346.009 166.982 345.279 167.814 343.997 167.074 cv
342.867 166.422 342.101 164.757 342.083 162.536 cv
342.084 160.296 342.92 159.545 344.095 160.224 cv
345.315 160.928 346.009 162.583 346.009 164.71 cv
cp
f
348.431 163.683 mo
347.407 163.719 li
347.257 162.943 li
348.521 162.891 li
349.188 163.277 li
349.188 169.958 li
348.431 169.521 li
348.431 163.683 li
cp
f
352.001 168.272 mo
352.001 170.01 352.465 171.264 353.177 171.675 cv
353.978 172.137 354.361 171.279 354.361 169.573 cv
354.361 167.928 353.996 166.638 353.185 166.17 cv
352.5 165.775 352.002 166.453 352.001 168.272 cv
cp
355.144 169.984 mo
355.144 172.256 354.414 173.088 353.132 172.348 cv
352.001 171.695 351.236 170.03 351.218 167.81 cv
351.218 165.569 352.055 164.819 353.23 165.497 cv
354.45 166.201 355.144 167.856 355.144 169.984 cv
cp
f
357.566 168.957 mo
356.542 168.993 li
356.391 168.217 li
357.656 168.165 li
358.323 168.55 li
358.323 175.232 li
357.566 174.795 li
357.566 168.957 li
cp
f
361.136 173.546 mo
361.136 175.284 361.6 176.538 362.311 176.949 cv
363.113 177.411 363.496 176.553 363.496 174.847 cv
363.496 173.202 363.13 171.912 362.32 171.445 cv
361.635 171.049 361.136 171.727 361.136 173.546 cv
cp
364.279 175.258 mo
364.279 177.529 363.549 178.362 362.267 177.622 cv
361.136 176.969 360.371 175.304 360.353 173.084 cv
360.353 170.843 361.19 170.093 362.365 170.771 cv
363.584 171.475 364.279 173.13 364.279 175.258 cv
cp
f
366.701 174.23 mo
365.677 174.266 li
365.526 173.491 li
366.79 173.439 li
367.458 173.824 li
367.457 180.506 li
366.701 180.069 li
366.701 174.23 li
cp
f
370.271 178.82 mo
370.271 180.557 370.734 181.812 371.446 182.223 cv
372.248 182.685 372.631 181.827 372.631 180.121 cv
372.631 178.476 372.266 177.186 371.455 176.718 cv
370.77 176.323 370.271 177.001 370.271 178.82 cv
cp
373.414 180.532 mo
373.414 182.803 372.684 183.636 371.402 182.896 cv
370.271 182.243 369.506 180.578 369.488 178.358 cv
369.488 176.117 370.325 175.367 371.5 176.045 cv
372.719 176.749 373.414 178.404 373.414 180.532 cv
cp
f
375.836 179.504 mo
374.812 179.54 li
374.661 178.764 li
375.925 178.713 li
376.592 179.098 li
376.592 185.779 li
375.836 185.343 li
375.836 179.504 li
cp
f
379.406 184.094 mo
379.406 185.832 379.87 187.086 380.582 187.497 cv
381.383 187.959 381.766 187.101 381.766 185.395 cv
381.766 183.75 381.401 182.46 380.59 181.992 cv
379.905 181.596 379.406 182.275 379.406 184.094 cv
cp
382.549 185.806 mo
382.549 188.077 381.819 188.91 380.537 188.17 cv
379.406 187.517 378.641 185.852 378.623 183.632 cv
378.623 181.391 379.46 180.641 380.635 181.319 cv
381.855 182.023 382.549 183.678 382.549 185.806 cv
cp
f
261.65 125.918 mo
260.626 125.954 li
260.475 125.178 li
261.739 125.126 li
262.406 125.512 li
262.406 132.193 li
261.649 131.756 li
261.65 125.918 li
f
265.22 130.508 mo
265.22 132.245 265.683 133.499 266.395 133.91 cv
267.196 134.373 267.579 133.514 267.579 131.809 cv
267.579 130.164 267.214 128.874 266.404 128.406 cv
265.719 128.01 265.22 128.688 265.22 130.508 cv
268.363 132.219 mo
268.362 134.491 267.633 135.324 266.35 134.583 cv
265.22 133.931 264.454 132.266 264.437 130.045 cv
264.437 127.805 265.273 127.054 266.449 127.733 cv
267.668 128.437 268.363 130.092 268.363 132.219 cv
f
270.784 131.192 mo
269.761 131.228 li
269.61 130.452 li
270.874 130.401 li
271.541 130.786 li
271.541 137.467 li
270.784 137.03 li
270.784 131.192 li
f
274.355 135.782 mo
274.355 137.519 274.818 138.773 275.53 139.184 cv
276.331 139.646 276.714 138.788 276.714 137.082 cv
276.714 135.438 276.349 134.147 275.539 133.68 cv
274.853 133.284 274.355 133.962 274.355 135.782 cv
277.497 137.493 mo
277.497 139.765 276.768 140.598 275.485 139.857 cv
274.355 139.204 273.589 137.539 273.572 135.319 cv
273.572 133.079 274.408 132.328 275.584 133.007 cv
276.803 133.71 277.497 135.365 277.497 137.493 cv
f
279.919 136.466 mo
278.896 136.502 li
278.745 135.726 li
280.008 135.674 li
280.676 136.06 li
280.676 142.741 li
279.919 142.304 li
279.919 136.466 li
f
283.49 141.055 mo
283.49 142.793 283.953 144.047 284.665 144.458 cv
285.466 144.921 285.849 144.062 285.849 142.356 cv
285.849 140.712 285.484 139.421 284.674 138.954 cv
283.988 138.558 283.49 139.237 283.49 141.055 cv
286.632 142.767 mo
286.632 145.039 285.902 145.871 284.62 145.131 cv
283.49 144.478 282.724 142.813 282.706 140.593 cv
282.706 138.352 283.543 137.602 284.718 138.28 cv
285.938 138.984 286.632 140.639 286.632 142.767 cv
f
289.054 141.74 mo
288.03 141.776 li
287.879 141 li
289.144 140.948 li
289.811 141.333 li
289.811 148.015 li
289.054 147.578 li
289.054 141.74 li
f
292.624 146.329 mo
292.624 148.067 293.088 149.321 293.8 149.732 cv
294.601 150.194 294.984 149.336 294.984 147.63 cv
294.984 145.985 294.619 144.695 293.809 144.227 cv
293.123 143.832 292.624 144.51 292.624 146.329 cv
295.767 148.041 mo
295.767 150.312 295.037 151.145 293.755 150.405 cv
292.624 149.752 291.859 148.087 291.841 145.867 cv
291.841 143.626 292.678 142.876 293.853 143.554 cv
295.073 144.258 295.767 145.913 295.767 148.041 cv
f
297.192 148.966 mo
297.192 150.703 297.655 151.958 298.367 152.369 cv
299.168 152.831 299.551 151.973 299.551 150.267 cv
299.551 148.622 299.186 147.332 298.376 146.864 cv
297.691 146.468 297.192 147.147 297.192 148.966 cv
300.334 150.678 mo
300.334 152.949 299.605 153.782 298.322 153.042 cv
297.192 152.389 296.426 150.724 296.409 148.504 cv
296.409 146.263 297.245 145.513 298.421 146.191 cv
299.64 146.895 300.334 148.55 300.334 150.678 cv
f
301.76 151.603 mo
301.76 153.341 302.223 154.595 302.935 155.006 cv
303.736 155.468 304.119 154.61 304.119 152.904 cv
304.119 151.26 303.754 149.969 302.944 149.501 cv
302.258 149.106 301.76 149.784 301.76 151.603 cv
304.902 153.315 mo
304.902 155.587 304.172 156.419 302.89 155.679 cv
301.76 155.026 300.994 153.361 300.976 151.141 cv
300.977 148.9 301.813 148.15 302.988 148.828 cv
304.208 149.532 304.902 151.187 304.902 153.315 cv
f
307.324 152.287 mo
306.301 152.324 li
306.15 151.548 li
307.414 151.496 li
308.081 151.882 li
308.081 158.563 li
307.324 158.126 li
307.324 152.287 li
f
310.894 156.877 mo
310.894 158.614 311.358 159.869 312.07 160.28 cv
312.871 160.742 313.254 159.884 313.254 158.178 cv
313.254 156.533 312.889 155.243 312.079 154.776 cv
311.393 154.38 310.895 155.058 310.894 156.877 cv
314.037 158.589 mo
314.037 160.86 313.307 161.693 312.025 160.953 cv
310.894 160.3 310.129 158.635 310.111 156.415 cv
310.111 154.174 310.948 153.424 312.123 154.102 cv
313.343 154.806 314.037 156.461 314.037 158.589 cv
f
316.459 157.561 mo
315.436 157.597 li
315.284 156.822 li
316.549 156.77 li
317.216 157.156 li
317.216 163.836 li
316.459 163.4 li
316.459 157.561 li
f
320.029 162.151 mo
320.029 163.888 320.493 165.143 321.205 165.554 cv
322.006 166.016 322.389 165.158 322.389 163.452 cv
322.389 161.807 322.024 160.517 321.214 160.049 cv
320.528 159.654 320.029 160.332 320.029 162.151 cv
cp
323.172 163.863 mo
323.172 166.135 322.442 166.967 321.16 166.227 cv
320.029 165.574 319.264 163.909 319.246 161.689 cv
319.246 159.448 320.083 158.698 321.258 159.376 cv
322.477 160.08 323.172 161.735 323.172 163.863 cv
cp
f
325.594 162.835 mo
324.57 162.871 li
324.419 162.095 li
325.683 162.044 li
326.351 162.429 li
326.35 169.11 li
325.594 168.674 li
325.594 162.835 li
cp
f
329.164 167.425 mo
329.164 169.162 329.627 170.416 330.34 170.827 cv
331.141 171.29 331.524 170.432 331.524 168.726 cv
331.524 167.081 331.159 165.791 330.348 165.323 cv
329.663 164.927 329.164 165.606 329.164 167.425 cv
cp
332.307 169.136 mo
332.307 171.408 331.577 172.241 330.295 171.5 cv
329.164 170.848 328.399 169.183 328.381 166.963 cv
328.381 164.722 329.218 163.971 330.393 164.65 cv
331.612 165.354 332.307 167.009 332.307 169.136 cv
cp
f
334.729 168.109 mo
333.705 168.145 li
333.554 167.369 li
334.818 167.318 li
335.485 167.703 li
335.485 174.384 li
334.729 173.947 li
334.729 168.109 li
cp
f
339.296 170.746 mo
338.273 170.782 li
338.122 170.006 li
339.385 169.955 li
340.053 170.34 li
340.053 177.021 li
339.296 176.584 li
339.296 170.746 li
cp
f
342.867 175.336 mo
342.866 177.073 343.33 178.327 344.042 178.738 cv
344.843 179.201 345.226 178.342 345.226 176.636 cv
345.226 174.992 344.861 173.702 344.051 173.234 cv
343.365 172.838 342.867 173.517 342.867 175.336 cv
cp
346.009 177.048 mo
346.009 179.319 345.279 180.152 343.997 179.411 cv
342.866 178.759 342.101 177.094 342.083 174.874 cv
342.083 172.633 342.92 171.882 344.095 172.561 cv
345.315 173.265 346.009 174.92 346.009 177.048 cv
cp
f
348.431 176.02 mo
347.407 176.056 li
347.256 175.28 li
348.521 175.229 li
349.188 175.614 li
349.188 182.295 li
348.431 181.858 li
348.431 176.02 li
cp
f
352.001 180.61 mo
352.001 182.347 352.465 183.601 353.177 184.012 cv
353.978 184.475 354.361 183.616 354.361 181.91 cv
354.361 180.266 353.995 178.975 353.185 178.508 cv
352.5 178.112 352.001 178.791 352.001 180.61 cv
cp
355.144 182.321 mo
355.144 184.593 354.414 185.425 353.132 184.685 cv
352.001 184.032 351.236 182.367 351.218 180.147 cv
351.218 177.907 352.055 177.156 353.23 177.835 cv
354.45 178.539 355.144 180.193 355.144 182.321 cv
cp
f
357.566 181.294 mo
356.542 181.33 li
356.391 180.554 li
357.655 180.502 li
358.323 180.888 li
358.323 187.569 li
357.566 187.132 li
357.566 181.294 li
cp
f
361.136 185.884 mo
361.136 187.621 361.599 188.875 362.311 189.286 cv
363.113 189.749 363.496 188.89 363.496 187.184 cv
363.496 185.54 363.13 184.249 362.32 183.782 cv
361.635 183.386 361.136 184.064 361.136 185.884 cv
cp
364.279 187.595 mo
364.279 189.867 363.549 190.699 362.267 189.959 cv
361.136 189.306 360.371 187.641 360.353 185.421 cv
360.353 183.18 361.19 182.43 362.365 183.108 cv
363.584 183.813 364.279 185.467 364.279 187.595 cv
cp
f
366.701 186.567 mo
365.677 186.604 li
365.526 185.828 li
366.79 185.776 li
367.457 186.162 li
367.457 192.843 li
366.701 192.406 li
366.701 186.567 li
cp
f
370.271 191.157 mo
370.271 192.895 370.734 194.149 371.446 194.56 cv
372.247 195.022 372.63 194.164 372.63 192.458 cv
372.63 190.813 372.265 189.523 371.455 189.055 cv
370.77 188.66 370.271 189.338 370.271 191.157 cv
cp
373.414 192.869 mo
373.414 195.141 372.684 195.973 371.401 195.233 cv
370.271 194.58 369.505 192.915 369.488 190.695 cv
369.488 188.455 370.324 187.704 371.5 188.383 cv
372.719 189.086 373.414 190.741 373.414 192.869 cv
cp
f
375.835 191.842 mo
374.812 191.877 li
374.661 191.102 li
375.925 191.05 li
376.592 191.436 li
376.592 198.116 li
375.835 197.68 li
375.835 191.842 li
cp
f
379.406 196.431 mo
379.406 198.169 379.87 199.423 380.581 199.834 cv
381.383 200.297 381.766 199.438 381.766 197.732 cv
381.766 196.087 381.4 194.797 380.59 194.33 cv
379.905 193.934 379.406 194.612 379.406 196.431 cv
cp
382.549 198.143 mo
382.549 200.415 381.819 201.247 380.537 200.507 cv
379.406 199.854 378.641 198.189 378.623 195.969 cv
378.623 193.729 379.46 192.978 380.635 193.656 cv
381.854 194.361 382.549 196.015 382.549 198.143 cv
cp
f
260.652 140.208 mo
260.652 141.945 261.116 143.199 261.828 143.61 cv
262.629 144.073 263.012 143.215 263.012 141.509 cv
263.012 139.864 262.647 138.574 261.836 138.106 cv
261.151 137.71 260.653 138.389 260.652 140.208 cv
263.795 141.92 mo
263.795 144.191 263.065 145.024 261.783 144.284 cv
260.652 143.631 259.887 141.966 259.869 139.746 cv
259.869 137.505 260.706 136.755 261.881 137.433 cv
263.101 138.137 263.795 139.792 263.795 141.92 cv
f
266.217 140.892 mo
265.193 140.928 li
265.042 140.152 li
266.306 140.101 li
266.973 140.486 li
266.973 147.167 li
266.217 146.73 li
266.217 140.892 li
f
269.787 145.482 mo
269.787 147.219 270.25 148.473 270.962 148.885 cv
271.764 149.347 272.146 148.489 272.146 146.782 cv
272.146 145.138 271.781 143.848 270.971 143.38 cv
270.286 142.984 269.787 143.663 269.787 145.482 cv
272.93 147.194 mo
272.93 149.465 272.2 150.298 270.918 149.558 cv
269.787 148.905 269.022 147.24 269.004 145.02 cv
269.004 142.779 269.841 142.028 271.016 142.707 cv
272.235 143.411 272.93 145.066 272.93 147.194 cv
f
275.352 146.166 mo
274.328 146.202 li
274.177 145.426 li
275.441 145.375 li
276.109 145.76 li
276.108 152.441 li
275.352 152.004 li
275.352 146.166 li
f
279.919 148.803 mo
278.896 148.839 li
278.744 148.063 li
280.008 148.012 li
280.676 148.397 li
280.676 155.078 li
279.919 154.641 li
279.919 148.803 li
f
283.49 153.393 mo
283.49 155.13 283.953 156.384 284.665 156.795 cv
285.466 157.258 285.849 156.399 285.849 154.693 cv
285.849 153.049 285.484 151.759 284.674 151.291 cv
283.988 150.895 283.49 151.574 283.49 153.393 cv
286.632 155.105 mo
286.632 157.376 285.902 158.209 284.62 157.468 cv
283.49 156.816 282.724 155.151 282.706 152.93 cv
282.706 150.689 283.543 149.939 284.718 150.618 cv
285.938 151.322 286.632 152.977 286.632 155.105 cv
f
289.054 154.077 mo
288.03 154.113 li
287.879 153.337 li
289.143 153.285 li
289.811 153.671 li
289.811 160.352 li
289.054 159.915 li
289.054 154.077 li
f
292.624 158.667 mo
292.624 160.404 293.087 161.658 293.8 162.069 cv
294.601 162.532 294.984 161.673 294.984 159.967 cv
294.984 158.323 294.619 157.032 293.809 156.565 cv
293.123 156.169 292.624 156.847 292.624 158.667 cv
295.767 160.378 mo
295.767 162.65 295.037 163.482 293.755 162.742 cv
292.624 162.09 291.859 160.425 291.841 158.204 cv
291.841 155.964 292.678 155.213 293.853 155.892 cv
295.073 156.596 295.767 158.25 295.767 160.378 cv
f
298.189 159.351 mo
297.165 159.386 li
297.014 158.611 li
298.278 158.56 li
298.945 158.945 li
298.945 165.626 li
298.189 165.189 li
298.189 159.351 li
f
301.76 163.941 mo
301.759 165.678 302.223 166.932 302.935 167.343 cv
303.736 167.806 304.119 166.948 304.119 165.241 cv
304.119 163.597 303.754 162.306 302.944 161.839 cv
302.258 161.443 301.76 162.122 301.76 163.941 cv
304.902 165.652 mo
304.902 167.924 304.172 168.757 302.89 168.016 cv
301.759 167.363 300.994 165.698 300.976 163.478 cv
300.976 161.238 301.813 160.487 302.988 161.165 cv
304.208 161.87 304.902 163.524 304.902 165.652 cv
f
311.892 167.261 mo
310.868 167.298 li
310.717 166.522 li
311.981 166.47 li
312.648 166.856 li
312.648 173.537 li
311.892 173.1 li
311.892 167.261 li
f
315.462 171.852 mo
315.462 173.589 315.925 174.843 316.637 175.254 cv
317.438 175.717 317.821 174.858 317.821 173.152 cv
317.821 171.508 317.456 170.217 316.646 169.749 cv
315.961 169.354 315.462 170.032 315.462 171.852 cv
318.604 173.563 mo
318.604 175.835 317.875 176.668 316.592 175.927 cv
315.462 175.274 314.696 173.609 314.679 171.389 cv
314.679 169.149 315.515 168.398 316.691 169.077 cv
317.91 169.78 318.604 171.435 318.604 173.563 cv
f
321.026 172.536 mo
320.003 172.572 li
319.852 171.796 li
321.116 171.744 li
321.783 172.13 li
321.783 178.811 li
321.026 178.374 li
321.026 172.536 li
cp
f
324.597 177.125 mo
324.597 178.863 325.06 180.116 325.772 180.528 cv
326.573 180.99 326.956 180.132 326.956 178.426 cv
326.956 176.781 326.591 175.491 325.781 175.023 cv
325.095 174.628 324.597 175.306 324.597 177.125 cv
cp
327.739 178.837 mo
327.739 181.109 327.01 181.941 325.727 181.201 cv
324.597 180.548 323.831 178.883 323.814 176.663 cv
323.814 174.422 324.65 173.672 325.825 174.35 cv
327.045 175.054 327.739 176.709 327.739 178.837 cv
cp
f
330.161 177.809 mo
329.138 177.845 li
328.987 177.07 li
330.25 177.018 li
330.918 177.403 li
330.918 184.085 li
330.161 183.648 li
330.161 177.809 li
cp
f
333.732 182.399 mo
333.732 184.136 334.195 185.391 334.907 185.802 cv
335.708 186.264 336.091 185.406 336.091 183.7 cv
336.091 182.055 335.726 180.765 334.916 180.297 cv
334.23 179.901 333.732 180.58 333.732 182.399 cv
cp
336.874 184.111 mo
336.874 186.382 336.144 187.215 334.862 186.475 cv
333.731 185.822 332.966 184.157 332.948 181.937 cv
332.948 179.696 333.785 178.946 334.96 179.624 cv
336.18 180.328 336.874 181.983 336.874 184.111 cv
cp
f
339.296 183.083 mo
338.272 183.119 li
338.121 182.344 li
339.385 182.292 li
340.053 182.677 li
340.053 189.358 li
339.296 188.922 li
339.296 183.083 li
cp
f
342.866 187.673 mo
342.866 189.41 343.33 190.665 344.042 191.076 cv
344.843 191.538 345.226 190.68 345.226 188.974 cv
345.226 187.329 344.861 186.039 344.05 185.571 cv
343.365 185.176 342.866 185.854 342.866 187.673 cv
cp
346.009 189.385 mo
346.009 191.656 345.279 192.489 343.997 191.749 cv
342.866 191.096 342.101 189.431 342.083 187.211 cv
342.083 184.97 342.92 184.22 344.095 184.898 cv
345.315 185.602 346.009 187.257 346.009 189.385 cv
cp
f
348.431 188.357 mo
347.407 188.393 li
347.256 187.617 li
348.52 187.566 li
349.188 187.951 li
349.188 194.632 li
348.431 194.196 li
348.431 188.357 li
cp
f
352.001 192.947 mo
352.001 194.684 352.464 195.938 353.177 196.349 cv
353.978 196.812 354.361 195.954 354.361 194.248 cv
354.361 192.603 353.995 191.313 353.185 190.845 cv
352.5 190.449 352.001 191.128 352.001 192.947 cv
cp
355.144 194.658 mo
355.144 196.93 354.414 197.763 353.132 197.022 cv
352.001 196.37 351.236 194.705 351.218 192.485 cv
351.218 190.244 352.055 189.493 353.23 190.172 cv
354.449 190.876 355.144 192.531 355.144 194.658 cv
cp
f
357.566 193.631 mo
356.542 193.667 li
356.391 192.891 li
357.655 192.84 li
358.322 193.225 li
358.322 199.906 li
357.566 199.469 li
357.566 193.631 li
cp
f
361.136 198.221 mo
361.136 199.958 361.599 201.212 362.311 201.623 cv
363.112 202.086 363.495 201.228 363.495 199.521 cv
363.495 197.877 363.13 196.587 362.32 196.119 cv
361.635 195.723 361.136 196.402 361.136 198.221 cv
cp
364.279 199.932 mo
364.279 202.204 363.549 203.037 362.266 202.296 cv
361.136 201.644 360.37 199.979 360.353 197.758 cv
360.353 195.518 361.189 194.767 362.365 195.446 cv
363.584 196.15 364.279 197.805 364.279 199.932 cv
cp
f
366.7 198.905 mo
365.677 198.941 li
365.526 198.165 li
366.79 198.114 li
367.457 198.499 li
367.457 205.18 li
366.7 204.743 li
366.7 198.905 li
cp
f
370.271 203.495 mo
370.271 205.232 370.734 206.486 371.446 206.897 cv
372.247 207.36 372.63 206.501 372.63 204.795 cv
372.63 203.151 372.265 201.861 371.455 201.393 cv
370.769 200.997 370.271 201.676 370.271 203.495 cv
cp
373.413 205.206 mo
373.413 207.478 372.684 208.311 371.401 207.57 cv
370.271 206.917 369.505 205.252 369.488 203.032 cv
369.488 200.792 370.324 200.041 371.5 200.72 cv
372.719 201.424 373.413 203.078 373.413 205.206 cv
cp
f
375.835 204.179 mo
374.812 204.215 li
374.661 203.439 li
375.925 203.387 li
376.592 203.773 li
376.592 210.454 li
375.835 210.017 li
375.835 204.179 li
cp
f
379.406 208.769 mo
379.406 210.506 379.869 211.76 380.581 212.171 cv
381.383 212.634 381.766 211.775 381.766 210.07 cv
381.766 208.425 381.4 207.135 380.59 206.667 cv
379.905 206.271 379.406 206.949 379.406 208.769 cv
cp
382.549 210.48 mo
382.549 212.752 381.819 213.584 380.537 212.844 cv
379.406 212.192 378.641 210.527 378.623 208.306 cv
378.623 206.066 379.46 205.315 380.635 205.994 cv
381.854 206.698 382.549 208.353 382.549 210.48 cv
cp
f
155.818 292.464 mo
173.28 277.95 li
198.212 291.917 li
155.818 292.464 li
.792772 .74659 .861453 rgb
f
138.292 305.32 mo
138.646 306.738 li
232.099 360.12 li
231.745 358.702 li
138.292 305.32 li
cp
.670588 .670588 .768627 rgb
f
231.745 358.702 mo
232.099 360.12 li
268.635 330.761 li
268.255 327.256 li
231.745 358.702 li
cp
f
138.292 305.32 mo
231.745 358.702 li
268.255 327.256 li
174.801 273.874 li
138.292 305.32 li
cp
.956863 .956863 .980392 rgb
f
171.37 277.588 mo
171.607 278.534 li
176.595 281.383 li
176.359 280.437 li
171.37 277.588 li
cp
.74902 .745098 .929412 rgb
f
176.359 280.437 mo
176.595 281.383 li
179.243 279.101 li
179.007 278.156 li
176.359 280.437 li
cp
.670588 .670588 .768627 rgb
f
171.37 277.588 mo
176.359 280.437 li
179.007 278.156 li
174.019 275.307 li
171.37 277.588 li
cp
.956863 .956863 .980392 rgb
f
164.697 283.773 mo
164.933 284.719 li
169.922 287.568 li
169.685 286.623 li
164.697 283.773 li
cp
.74902 .745098 .929412 rgb
f
169.685 286.623 mo
169.922 287.568 li
174.775 283.387 li
174.539 282.442 li
169.685 286.623 li
cp
.670588 .670588 .768627 rgb
f
164.697 283.773 mo
169.685 286.623 li
174.539 282.442 li
169.551 279.593 li
164.697 283.773 li
cp
.956863 .956863 .980392 rgb
f
177.661 281.181 mo
177.898 282.127 li
182.886 284.976 li
182.65 284.031 li
177.661 281.181 li
cp
.74902 .745098 .929412 rgb
f
182.65 284.031 mo
182.886 284.976 li
185.534 282.695 li
185.298 281.75 li
182.65 284.031 li
cp
.670588 .670588 .768627 rgb
f
177.661 281.181 mo
182.65 284.031 li
185.298 281.75 li
180.31 278.9 li
177.661 281.181 li
cp
.956863 .956863 .980392 rgb
f
170.743 287.227 mo
170.979 288.172 li
175.967 291.022 li
175.731 290.076 li
170.743 287.227 li
cp
.74902 .745098 .929412 rgb
f
175.731 290.076 mo
175.967 291.022 li
180.82 286.841 li
180.585 285.896 li
175.731 290.076 li
cp
.670588 .670588 .768627 rgb
f
170.743 287.227 mo
175.731 290.076 li
180.585 285.896 li
175.596 283.046 li
170.743 287.227 li
cp
.956863 .956863 .980392 rgb
f
183.953 284.775 mo
184.188 285.72 li
189.177 288.57 li
188.941 287.624 li
183.953 284.775 li
cp
.74902 .745098 .929412 rgb
f
188.941 287.624 mo
189.177 288.57 li
191.825 286.289 li
191.589 285.343 li
188.941 287.624 li
cp
.670588 .670588 .768627 rgb
f
183.953 284.775 mo
188.941 287.624 li
191.589 285.343 li
186.601 282.494 li
183.953 284.775 li
cp
.956863 .956863 .980392 rgb
f
176.789 290.68 mo
177.025 291.626 li
182.013 294.475 li
181.777 293.53 li
176.789 290.68 li
cp
.74902 .745098 .929412 rgb
f
181.777 293.53 mo
182.013 294.475 li
186.866 290.295 li
186.631 289.349 li
181.777 293.53 li
cp
.670588 .670588 .768627 rgb
f
176.789 290.68 mo
181.777 293.53 li
186.631 289.349 li
181.642 286.5 li
176.789 290.68 li
cp
.956863 .956863 .980392 rgb
f
190.244 288.369 mo
190.48 289.314 li
195.468 292.163 li
195.231 291.218 li
190.244 288.369 li
cp
.74902 .745098 .929412 rgb
f
195.231 291.218 mo
195.468 292.163 li
198.116 289.882 li
197.88 288.937 li
195.231 291.218 li
cp
.670588 .670588 .768627 rgb
f
190.244 288.369 mo
195.231 291.218 li
197.88 288.937 li
192.892 286.087 li
190.244 288.369 li
cp
.956863 .956863 .980392 rgb
f
182.835 294.134 mo
183.07 295.08 li
188.059 297.929 li
187.823 296.983 li
182.835 294.134 li
cp
.74902 .745098 .929412 rgb
f
187.823 296.983 mo
188.059 297.929 li
192.912 293.749 li
192.677 292.803 li
187.823 296.983 li
cp
.670588 .670588 .768627 rgb
f
182.835 294.134 mo
187.823 296.983 li
192.677 292.803 li
187.688 289.953 li
182.835 294.134 li
cp
.956863 .956863 .980392 rgb
f
188.881 297.587 mo
189.117 298.532 li
194.104 301.382 li
193.869 300.436 li
188.881 297.587 li
cp
.74902 .745098 .929412 rgb
f
193.869 300.436 mo
194.104 301.382 li
198.958 297.201 li
198.722 296.257 li
193.869 300.436 li
cp
.670588 .670588 .768627 rgb
f
188.881 297.587 mo
193.869 300.436 li
198.722 296.257 li
193.734 293.407 li
188.881 297.587 li
cp
.956863 .956863 .980392 rgb
f
199.678 293.758 mo
199.914 294.703 li
204.902 297.553 li
204.666 296.607 li
199.678 293.758 li
cp
.74902 .745098 .929412 rgb
f
204.666 296.607 mo
204.902 297.553 li
207.55 295.271 li
207.314 294.325 li
204.666 296.607 li
cp
.670588 .670588 .768627 rgb
f
199.678 293.758 mo
204.666 296.607 li
207.314 294.325 li
202.327 291.476 li
199.678 293.758 li
cp
.956863 .956863 .980392 rgb
f
194.927 301.041 mo
195.162 301.987 li
200.151 304.836 li
199.915 303.89 li
194.927 301.041 li
cp
.74902 .745098 .929412 rgb
f
199.915 303.89 mo
200.151 304.836 li
205.004 300.655 li
204.768 299.71 li
199.915 303.89 li
cp
.670588 .670588 .768627 rgb
f
194.927 301.041 mo
199.915 303.89 li
204.768 299.71 li
199.78 296.86 li
194.927 301.041 li
cp
.956863 .956863 .980392 rgb
f
205.969 297.351 mo
206.205 298.296 li
211.193 301.146 li
210.957 300.2 li
205.969 297.351 li
cp
.74902 .745098 .929412 rgb
f
210.957 300.2 mo
211.193 301.146 li
213.841 298.864 li
213.606 297.919 li
210.957 300.2 li
cp
.670588 .670588 .768627 rgb
f
205.969 297.351 mo
210.957 300.2 li
213.606 297.919 li
208.618 295.07 li
205.969 297.351 li
cp
.956863 .956863 .980392 rgb
f
200.972 304.494 mo
201.208 305.44 li
206.196 308.289 li
205.96 307.344 li
200.972 304.494 li
cp
.74902 .745098 .929412 rgb
f
205.96 307.344 mo
206.196 308.289 li
211.05 304.109 li
210.814 303.163 li
205.96 307.344 li
cp
.670588 .670588 .768627 rgb
f
200.972 304.494 mo
205.96 307.344 li
210.814 303.163 li
205.826 300.314 li
200.972 304.494 li
cp
.956863 .956863 .980392 rgb
f
212.26 300.944 mo
212.496 301.89 li
217.484 304.739 li
217.248 303.794 li
212.26 300.944 li
cp
.74902 .745098 .929412 rgb
f
217.248 303.794 mo
217.484 304.739 li
220.132 302.458 li
219.897 301.513 li
217.248 303.794 li
cp
.670588 .670588 .768627 rgb
f
212.26 300.944 mo
217.248 303.794 li
219.897 301.513 li
214.909 298.664 li
212.26 300.944 li
cp
.956863 .956863 .980392 rgb
f
207.018 307.948 mo
207.254 308.893 li
212.242 311.743 li
212.007 310.797 li
207.018 307.948 li
cp
.74902 .745098 .929412 rgb
f
212.007 310.797 mo
212.242 311.743 li
217.096 307.562 li
216.86 306.617 li
212.007 310.797 li
cp
.670588 .670588 .768627 rgb
f
207.018 307.948 mo
212.007 310.797 li
216.86 306.617 li
211.872 303.767 li
207.018 307.948 li
cp
.956863 .956863 .980392 rgb
f
218.551 304.538 mo
218.787 305.484 li
223.774 308.333 li
223.539 307.387 li
218.551 304.538 li
cp
.74902 .745098 .929412 rgb
f
223.539 307.387 mo
223.774 308.333 li
226.423 306.052 li
226.188 305.106 li
223.539 307.387 li
cp
.670588 .670588 .768627 rgb
f
218.551 304.538 mo
223.539 307.387 li
226.188 305.106 li
221.2 302.257 li
218.551 304.538 li
cp
.956863 .956863 .980392 rgb
f
213.064 311.401 mo
213.3 312.347 li
218.288 315.196 li
218.052 314.25 li
213.064 311.401 li
cp
.74902 .745098 .929412 rgb
f
218.052 314.25 mo
218.288 315.196 li
223.141 311.016 li
222.906 310.07 li
218.052 314.25 li
cp
.670588 .670588 .768627 rgb
f
213.064 311.401 mo
218.052 314.25 li
222.906 310.07 li
217.917 307.221 li
213.064 311.401 li
cp
.956863 .956863 .980392 rgb
f
227.985 309.927 mo
228.221 310.873 li
233.209 313.722 li
232.974 312.777 li
227.985 309.927 li
cp
.74902 .745098 .929412 rgb
f
232.974 312.777 mo
233.209 313.722 li
235.858 311.441 li
235.621 310.495 li
232.974 312.777 li
cp
.670588 .670588 .768627 rgb
f
227.985 309.927 mo
232.974 312.777 li
235.621 310.495 li
230.634 307.646 li
227.985 309.927 li
cp
.956863 .956863 .980392 rgb
f
219.11 314.855 mo
219.346 315.8 li
224.334 318.649 li
224.098 317.704 li
219.11 314.855 li
cp
.74902 .745098 .929412 rgb
f
224.098 317.704 mo
224.334 318.649 li
229.187 314.469 li
228.951 313.524 li
224.098 317.704 li
cp
.670588 .670588 .768627 rgb
f
219.11 314.855 mo
224.098 317.704 li
228.951 313.524 li
223.964 310.675 li
219.11 314.855 li
cp
.956863 .956863 .980392 rgb
f
234.277 313.52 mo
234.512 314.466 li
239.5 317.315 li
239.264 316.37 li
234.277 313.52 li
cp
.74902 .745098 .929412 rgb
f
239.264 316.37 mo
239.5 317.315 li
242.148 315.034 li
241.912 314.088 li
239.264 316.37 li
cp
.670588 .670588 .768627 rgb
f
234.277 313.52 mo
239.264 316.37 li
241.912 314.088 li
236.925 311.239 li
234.277 313.52 li
cp
.956863 .956863 .980392 rgb
f
225.156 318.308 mo
225.391 319.254 li
230.38 322.103 li
230.144 321.157 li
225.156 318.308 li
cp
.74902 .745098 .929412 rgb
f
230.144 321.157 mo
230.38 322.103 li
235.233 317.922 li
234.997 316.977 li
230.144 321.157 li
cp
.670588 .670588 .768627 rgb
f
225.156 318.308 mo
230.144 321.157 li
234.997 316.977 li
230.009 314.128 li
225.156 318.308 li
cp
.956863 .956863 .980392 rgb
f
240.567 317.114 mo
240.803 318.06 li
245.791 320.909 li
245.555 319.963 li
240.567 317.114 li
cp
.74902 .745098 .929412 rgb
f
245.555 319.963 mo
245.791 320.909 li
248.44 318.628 li
248.203 317.682 li
245.555 319.963 li
cp
.670588 .670588 .768627 rgb
f
240.567 317.114 mo
245.555 319.963 li
248.203 317.682 li
243.216 314.833 li
240.567 317.114 li
cp
.956863 .956863 .980392 rgb
f
231.202 321.762 mo
231.438 322.708 li
236.426 325.557 li
236.19 324.611 li
231.202 321.762 li
cp
.74902 .745098 .929412 rgb
f
236.19 324.611 mo
236.426 325.557 li
241.279 321.376 li
241.043 320.431 li
236.19 324.611 li
cp
.670588 .670588 .768627 rgb
f
231.202 321.762 mo
236.19 324.611 li
241.043 320.431 li
236.056 317.581 li
231.202 321.762 li
cp
.956863 .956863 .980392 rgb
f
246.858 320.707 mo
247.094 321.653 li
252.082 324.502 li
251.846 323.557 li
246.858 320.707 li
cp
.74902 .745098 .929412 rgb
f
251.846 323.557 mo
252.082 324.502 li
254.731 322.221 li
254.495 321.276 li
251.846 323.557 li
cp
.670588 .670588 .768627 rgb
f
246.858 320.707 mo
251.846 323.557 li
254.495 321.276 li
249.507 318.427 li
246.858 320.707 li
cp
.956863 .956863 .980392 rgb
f
237.247 325.215 mo
237.484 326.161 li
242.472 329.01 li
242.236 328.064 li
237.247 325.215 li
cp
.74902 .745098 .929412 rgb
f
242.236 328.064 mo
242.472 329.01 li
247.325 324.83 li
247.089 323.884 li
242.236 328.064 li
cp
.670588 .670588 .768627 rgb
f
237.247 325.215 mo
242.236 328.064 li
247.089 323.884 li
242.101 321.035 li
237.247 325.215 li
cp
.956863 .956863 .980392 rgb
f
243.293 328.669 mo
243.529 329.614 li
248.518 332.463 li
248.281 331.518 li
243.293 328.669 li
cp
.74902 .745098 .929412 rgb
f
248.281 331.518 mo
248.518 332.463 li
253.371 328.283 li
253.135 327.338 li
248.281 331.518 li
cp
.670588 .670588 .768627 rgb
f
243.293 328.669 mo
248.281 331.518 li
253.135 327.338 li
248.147 324.489 li
243.293 328.669 li
cp
.956863 .956863 .980392 rgb
f
256.318 326.111 mo
256.555 327.057 li
261.542 329.906 li
261.306 328.961 li
256.318 326.111 li
cp
.74902 .745098 .929412 rgb
f
261.306 328.961 mo
261.542 329.906 li
264.191 327.625 li
263.955 326.68 li
261.306 328.961 li
cp
.670588 .670588 .768627 rgb
f
256.318 326.111 mo
261.306 328.961 li
263.955 326.68 li
258.967 323.83 li
256.318 326.111 li
cp
.956863 .956863 .980392 rgb
f
249.34 332.122 mo
249.575 333.068 li
254.563 335.917 li
254.328 334.971 li
249.34 332.122 li
cp
.74902 .745098 .929412 rgb
f
254.328 334.971 mo
254.563 335.917 li
259.417 331.737 li
259.181 330.791 li
254.328 334.971 li
cp
.670588 .670588 .768627 rgb
f
249.34 332.122 mo
254.328 334.971 li
259.181 330.791 li
254.193 327.942 li
249.34 332.122 li
cp
.956863 .956863 .980392 rgb
f
163.895 291.61 mo
164.131 292.556 li
167.153 294.282 li
166.917 293.337 li
163.895 291.61 li
cp
.74902 .745098 .929412 rgb
f
166.917 293.337 mo
167.153 294.282 li
172.007 290.102 li
171.771 289.156 li
166.917 293.337 li
cp
.670588 .670588 .768627 rgb
f
153.116 293.749 mo
153.352 294.694 li
158.34 297.543 li
158.104 296.597 li
153.116 293.749 li
cp
.74902 .745098 .929412 rgb
f
153.116 293.749 mo
158.104 296.597 li
163.895 291.61 li
166.917 293.337 li
171.771 289.156 li
163.76 284.581 li
162.061 286.043 li
158.907 288.761 li
153.116 293.749 li
cp
.956863 .956863 .980392 rgb
f
158.104 296.597 mo
158.34 297.543 li
164.131 292.556 li
163.895 291.61 li
158.104 296.597 li
cp
.670588 .670588 .768627 rgb
f
172.964 296.791 mo
173.199 297.735 li
178.053 293.556 li
177.817 292.61 li
172.964 296.791 li
cp
f
167.976 293.941 mo
168.211 294.886 li
173.199 297.735 li
172.964 296.791 li
167.976 293.941 li
cp
.74902 .745098 .929412 rgb
f
167.976 293.941 mo
172.964 296.791 li
177.817 292.61 li
172.829 289.76 li
167.976 293.941 li
cp
.956863 .956863 .980392 rgb
f
159.162 297.201 mo
159.398 298.147 li
164.385 300.997 li
164.15 300.051 li
159.162 297.201 li
cp
.74902 .745098 .929412 rgb
f
159.162 297.201 mo
164.15 300.051 li
169.003 295.87 li
164.015 293.021 li
159.162 297.201 li
cp
.956863 .956863 .980392 rgb
f
164.15 300.051 mo
164.385 300.997 li
169.239 296.816 li
169.003 295.87 li
164.15 300.051 li
cp
.670588 .670588 .768627 rgb
f
174.021 297.394 mo
174.257 298.34 li
179.245 301.189 li
179.01 300.244 li
174.021 297.394 li
cp
.74902 .745098 .929412 rgb
f
179.01 300.244 mo
179.245 301.189 li
184.099 297.009 li
183.863 296.063 li
179.01 300.244 li
cp
.670588 .670588 .768627 rgb
f
174.021 297.394 mo
179.01 300.244 li
183.863 296.063 li
178.874 293.214 li
174.021 297.394 li
cp
.956863 .956863 .980392 rgb
f
180.067 300.848 mo
180.303 301.794 li
185.291 304.643 li
185.055 303.697 li
180.067 300.848 li
cp
.74902 .745098 .929412 rgb
f
185.055 303.697 mo
185.291 304.643 li
190.145 300.463 li
189.908 299.517 li
185.055 303.697 li
cp
.670588 .670588 .768627 rgb
f
180.067 300.848 mo
185.055 303.697 li
189.908 299.517 li
184.921 296.668 li
180.067 300.848 li
cp
.956863 .956863 .980392 rgb
f
186.113 304.302 mo
186.349 305.247 li
191.337 308.096 li
191.101 307.15 li
186.113 304.302 li
cp
.74902 .745098 .929412 rgb
f
191.101 307.15 mo
191.337 308.096 li
196.19 303.916 li
195.955 302.97 li
191.101 307.15 li
cp
.670588 .670588 .768627 rgb
f
186.113 304.302 mo
191.101 307.15 li
195.955 302.97 li
190.966 300.121 li
186.113 304.302 li
cp
.956863 .956863 .980392 rgb
f
192.159 307.755 mo
192.395 308.7 li
197.383 311.55 li
197.147 310.604 li
192.159 307.755 li
cp
.74902 .745098 .929412 rgb
f
197.147 310.604 mo
197.383 311.55 li
202.236 307.369 li
202 306.424 li
197.147 310.604 li
cp
.670588 .670588 .768627 rgb
f
192.159 307.755 mo
197.147 310.604 li
202 306.424 li
197.012 303.575 li
192.159 307.755 li
cp
.956863 .956863 .980392 rgb
f
165.208 300.655 mo
165.444 301.601 li
170.432 304.45 li
170.196 303.505 li
165.208 300.655 li
cp
.74902 .745098 .929412 rgb
f
170.196 303.505 mo
170.432 304.45 li
175.285 300.27 li
175.049 299.324 li
170.196 303.505 li
cp
.670588 .670588 .768627 rgb
f
165.208 300.655 mo
170.196 303.505 li
175.049 299.324 li
170.062 296.475 li
165.208 300.655 li
cp
.956863 .956863 .980392 rgb
f
171.254 304.109 mo
171.489 305.054 li
176.478 307.903 li
176.242 306.958 li
171.254 304.109 li
cp
.74902 .745098 .929412 rgb
f
176.242 306.958 mo
176.478 307.903 li
181.331 303.723 li
181.096 302.778 li
176.242 306.958 li
cp
.670588 .670588 .768627 rgb
f
171.254 304.109 mo
176.242 306.958 li
181.096 302.778 li
176.107 299.928 li
171.254 304.109 li
cp
.956863 .956863 .980392 rgb
f
177.3 307.562 mo
177.535 308.508 li
182.524 311.357 li
182.287 310.412 li
177.3 307.562 li
cp
.74902 .745098 .929412 rgb
f
182.287 310.412 mo
182.524 311.357 li
187.377 307.177 li
187.141 306.231 li
182.287 310.412 li
cp
.670588 .670588 .768627 rgb
f
177.3 307.562 mo
182.287 310.412 li
187.141 306.231 li
182.153 303.382 li
177.3 307.562 li
cp
.956863 .956863 .980392 rgb
f
183.346 311.016 mo
183.581 311.961 li
188.569 314.811 li
188.334 313.865 li
183.346 311.016 li
cp
.74902 .745098 .929412 rgb
f
188.334 313.865 mo
188.569 314.811 li
193.423 310.63 li
193.187 309.685 li
188.334 313.865 li
cp
.670588 .670588 .768627 rgb
f
183.346 311.016 mo
188.334 313.865 li
193.187 309.685 li
188.199 306.836 li
183.346 311.016 li
cp
.956863 .956863 .980392 rgb
f
198.205 311.209 mo
198.441 312.154 li
203.429 315.003 li
203.193 314.058 li
198.205 311.209 li
cp
.74902 .745098 .929412 rgb
f
203.193 314.058 mo
203.429 315.003 li
208.282 310.823 li
208.046 309.877 li
203.193 314.058 li
cp
.670588 .670588 .768627 rgb
f
198.205 311.209 mo
203.193 314.058 li
208.046 309.877 li
203.059 307.028 li
198.205 311.209 li
cp
.956863 .956863 .980392 rgb
f
189.391 314.469 mo
189.627 315.415 li
194.615 318.264 li
194.38 317.318 li
189.391 314.469 li
cp
.74902 .745098 .929412 rgb
f
194.38 317.318 mo
194.615 318.264 li
199.469 314.084 li
199.233 313.138 li
194.38 317.318 li
cp
.670588 .670588 .768627 rgb
f
189.391 314.469 mo
194.38 317.318 li
199.233 313.138 li
194.245 310.289 li
189.391 314.469 li
cp
.956863 .956863 .980392 rgb
f
204.251 314.662 mo
204.487 315.608 li
209.475 318.457 li
209.239 317.511 li
204.251 314.662 li
cp
.74902 .745098 .929412 rgb
f
209.239 317.511 mo
209.475 318.457 li
214.328 314.277 li
214.092 313.331 li
209.239 317.511 li
cp
.670588 .670588 .768627 rgb
f
204.251 314.662 mo
209.239 317.511 li
214.092 313.331 li
209.104 310.482 li
204.251 314.662 li
cp
.956863 .956863 .980392 rgb
f
195.437 317.922 mo
195.673 318.868 li
200.661 321.718 li
200.425 320.772 li
195.437 317.922 li
cp
.74902 .745098 .929412 rgb
f
200.425 320.772 mo
200.661 321.718 li
205.514 317.537 li
205.278 316.592 li
200.425 320.772 li
cp
.670588 .670588 .768627 rgb
f
195.437 317.922 mo
200.425 320.772 li
205.278 316.592 li
200.291 313.743 li
195.437 317.922 li
cp
.956863 .956863 .980392 rgb
f
210.297 318.116 mo
210.532 319.061 li
215.52 321.91 li
215.285 320.964 li
210.297 318.116 li
cp
.74902 .745098 .929412 rgb
f
215.285 320.964 mo
215.52 321.91 li
220.374 317.73 li
220.138 316.785 li
215.285 320.964 li
cp
.670588 .670588 .768627 rgb
f
210.297 318.116 mo
215.285 320.964 li
220.138 316.785 li
215.15 313.935 li
210.297 318.116 li
cp
.956863 .956863 .980392 rgb
f
201.483 321.376 mo
201.719 322.322 li
206.707 325.171 li
206.471 324.226 li
201.483 321.376 li
cp
.74902 .745098 .929412 rgb
f
206.471 324.226 mo
206.707 325.171 li
211.561 320.99 li
211.324 320.045 li
206.471 324.226 li
cp
.670588 .670588 .768627 rgb
f
201.483 321.376 mo
206.471 324.226 li
211.324 320.045 li
206.336 317.196 li
201.483 321.376 li
cp
.956863 .956863 .980392 rgb
f
216.342 321.569 mo
216.578 322.515 li
221.566 325.364 li
221.33 324.418 li
216.342 321.569 li
cp
.74902 .745098 .929412 rgb
f
221.33 324.418 mo
221.566 325.364 li
226.42 321.184 li
226.184 320.238 li
221.33 324.418 li
cp
.670588 .670588 .768627 rgb
f
216.342 321.569 mo
221.33 324.418 li
226.184 320.238 li
221.196 317.389 li
216.342 321.569 li
cp
.956863 .956863 .980392 rgb
f
207.529 324.83 mo
207.765 325.776 li
212.753 328.625 li
212.517 327.679 li
207.529 324.83 li
cp
.74902 .745098 .929412 rgb
f
212.517 327.679 mo
212.753 328.625 li
217.606 324.445 li
217.371 323.499 li
212.517 327.679 li
cp
.670588 .670588 .768627 rgb
f
207.529 324.83 mo
212.517 327.679 li
217.371 323.499 li
212.382 320.649 li
207.529 324.83 li
cp
.956863 .956863 .980392 rgb
f
222.388 325.022 mo
222.625 325.968 li
227.612 328.817 li
227.376 327.872 li
222.388 325.022 li
cp
.74902 .745098 .929412 rgb
f
227.376 327.872 mo
227.612 328.817 li
232.465 324.637 li
232.23 323.691 li
227.376 327.872 li
cp
.670588 .670588 .768627 rgb
f
222.388 325.022 mo
227.376 327.872 li
232.23 323.691 li
227.242 320.842 li
222.388 325.022 li
cp
.956863 .956863 .980392 rgb
f
213.575 328.283 mo
213.81 329.229 li
218.799 332.078 li
218.563 331.132 li
213.575 328.283 li
cp
.74902 .745098 .929412 rgb
f
218.563 331.132 mo
218.799 332.078 li
223.652 327.898 li
223.416 326.952 li
218.563 331.132 li
cp
.670588 .670588 .768627 rgb
f
213.575 328.283 mo
218.563 331.132 li
223.416 326.952 li
218.428 324.103 li
213.575 328.283 li
cp
.956863 .956863 .980392 rgb
f
228.435 328.476 mo
228.67 329.421 li
233.658 332.271 li
233.422 331.325 li
228.435 328.476 li
cp
.74902 .745098 .929412 rgb
f
233.422 331.325 mo
233.658 332.271 li
238.511 328.091 li
238.276 327.145 li
233.422 331.325 li
cp
.670588 .670588 .768627 rgb
f
228.435 328.476 mo
233.422 331.325 li
238.276 327.145 li
233.288 324.296 li
228.435 328.476 li
cp
.956863 .956863 .980392 rgb
f
219.62 331.737 mo
219.857 332.682 li
224.844 335.532 li
224.609 334.586 li
219.62 331.737 li
cp
.74902 .745098 .929412 rgb
f
224.609 334.586 mo
224.844 335.532 li
229.698 331.351 li
229.462 330.406 li
224.609 334.586 li
cp
.670588 .670588 .768627 rgb
f
219.62 331.737 mo
224.609 334.586 li
229.462 330.406 li
224.474 327.556 li
219.62 331.737 li
cp
.956863 .956863 .980392 rgb
f
234.48 331.929 mo
234.716 332.875 li
248.773 340.905 li
248.537 339.959 li
234.48 331.929 li
cp
.74902 .745098 .929412 rgb
f
248.537 339.959 mo
248.773 340.905 li
253.626 336.724 li
253.39 335.779 li
248.537 339.959 li
cp
.670588 .670588 .768627 rgb
f
234.48 331.929 mo
248.537 339.959 li
253.39 335.779 li
239.334 327.749 li
234.48 331.929 li
cp
.956863 .956863 .980392 rgb
f
225.667 335.19 mo
225.903 336.136 li
230.89 338.985 li
230.655 338.04 li
225.667 335.19 li
cp
.74902 .745098 .929412 rgb
f
230.655 338.04 mo
230.89 338.985 li
235.744 334.805 li
235.508 333.859 li
230.655 338.04 li
cp
.670588 .670588 .768627 rgb
f
225.667 335.19 mo
230.655 338.04 li
235.508 333.859 li
230.52 331.01 li
225.667 335.19 li
cp
.956863 .956863 .980392 rgb
f
147.325 298.736 mo
147.562 299.681 li
155.573 304.257 li
155.337 303.312 li
147.325 298.736 li
cp
.74902 .745098 .929412 rgb
f
155.337 303.312 mo
155.573 304.257 li
160.426 300.077 li
160.19 299.132 li
155.337 303.312 li
cp
.670588 .670588 .768627 rgb
f
147.325 298.736 mo
155.337 303.312 li
160.19 299.132 li
152.179 294.556 li
147.325 298.736 li
cp
.956863 .956863 .980392 rgb
f
156.394 303.916 mo
156.63 304.861 li
161.618 307.711 li
161.382 306.765 li
156.394 303.916 li
cp
.74902 .745098 .929412 rgb
f
161.382 306.765 mo
161.618 307.711 li
166.471 303.531 li
166.236 302.585 li
161.382 306.765 li
cp
.670588 .670588 .768627 rgb
f
156.394 303.916 mo
161.382 306.765 li
166.236 302.585 li
161.248 299.736 li
156.394 303.916 li
cp
.956863 .956863 .980392 rgb
f
162.44 307.369 mo
162.676 308.315 li
167.664 311.164 li
167.428 310.219 li
162.44 307.369 li
cp
.74902 .745098 .929412 rgb
f
167.428 310.219 mo
167.664 311.164 li
172.518 306.984 li
172.281 306.038 li
167.428 310.219 li
cp
.670588 .670588 .768627 rgb
f
162.44 307.369 mo
167.428 310.219 li
172.281 306.038 li
167.293 303.189 li
162.44 307.369 li
cp
.956863 .956863 .980392 rgb
f
168.486 310.823 mo
168.722 311.769 li
173.71 314.618 li
173.474 313.673 li
168.486 310.823 li
cp
.74902 .745098 .929412 rgb
f
173.474 313.673 mo
173.71 314.618 li
178.564 310.438 li
178.328 309.492 li
173.474 313.673 li
cp
.670588 .670588 .768627 rgb
f
168.486 310.823 mo
173.474 313.673 li
178.328 309.492 li
173.339 306.643 li
168.486 310.823 li
cp
.956863 .956863 .980392 rgb
f
174.532 314.277 mo
174.768 315.222 li
179.756 318.071 li
179.52 317.126 li
174.532 314.277 li
cp
.74902 .745098 .929412 rgb
f
179.52 317.126 mo
179.756 318.071 li
184.609 313.89 li
184.373 312.946 li
179.52 317.126 li
cp
.670588 .670588 .768627 rgb
f
174.532 314.277 mo
179.52 317.126 li
184.373 312.946 li
179.385 310.096 li
174.532 314.277 li
cp
.956863 .956863 .980392 rgb
f
180.578 317.73 mo
180.814 318.676 li
185.802 321.525 li
185.566 320.58 li
180.578 317.73 li
cp
.74902 .745098 .929412 rgb
f
185.566 320.58 mo
185.802 321.525 li
190.655 317.345 li
190.419 316.399 li
185.566 320.58 li
cp
.670588 .670588 .768627 rgb
f
180.578 317.73 mo
185.566 320.58 li
190.419 316.399 li
185.432 313.55 li
180.578 317.73 li
cp
.956863 .956863 .980392 rgb
f
186.624 321.184 mo
186.859 322.129 li
191.848 324.979 li
191.612 324.032 li
186.624 321.184 li
cp
.74902 .745098 .929412 rgb
f
191.612 324.032 mo
191.848 324.979 li
196.701 320.798 li
196.465 319.852 li
191.612 324.032 li
cp
.670588 .670588 .768627 rgb
f
186.624 321.184 mo
191.612 324.032 li
196.465 319.852 li
191.477 317.003 li
186.624 321.184 li
cp
.956863 .956863 .980392 rgb
f
192.67 324.637 mo
192.905 325.583 li
197.893 328.432 li
197.658 327.487 li
192.67 324.637 li
cp
.74902 .745098 .929412 rgb
f
197.658 327.487 mo
197.893 328.432 li
202.747 324.252 li
202.511 323.306 li
197.658 327.487 li
cp
.670588 .670588 .768627 rgb
f
192.67 324.637 mo
197.658 327.487 li
202.511 323.306 li
197.523 320.457 li
192.67 324.637 li
cp
.956863 .956863 .980392 rgb
f
198.715 328.091 mo
198.951 329.036 li
203.939 331.885 li
203.704 330.94 li
198.715 328.091 li
cp
.74902 .745098 .929412 rgb
f
203.704 330.94 mo
203.939 331.885 li
208.793 327.705 li
208.557 326.76 li
203.704 330.94 li
cp
.670588 .670588 .768627 rgb
f
198.715 328.091 mo
203.704 330.94 li
208.557 326.76 li
203.569 323.91 li
198.715 328.091 li
cp
.956863 .956863 .980392 rgb
f
204.761 331.544 mo
204.997 332.49 li
209.985 335.339 li
209.749 334.393 li
204.761 331.544 li
cp
.74902 .745098 .929412 rgb
f
209.749 334.393 mo
209.985 335.339 li
214.839 331.159 li
214.603 330.213 li
209.749 334.393 li
cp
.670588 .670588 .768627 rgb
f
204.761 331.544 mo
209.749 334.393 li
214.603 330.213 li
209.615 327.364 li
204.761 331.544 li
cp
.956863 .956863 .980392 rgb
f
210.807 334.998 mo
211.043 335.943 li
216.031 338.792 li
215.795 337.847 li
210.807 334.998 li
cp
.74902 .745098 .929412 rgb
f
215.795 337.847 mo
216.031 338.792 li
220.885 334.612 li
220.649 333.667 li
215.795 337.847 li
cp
.670588 .670588 .768627 rgb
f
210.807 334.998 mo
215.795 337.847 li
220.649 333.667 li
215.661 330.817 li
210.807 334.998 li
cp
.956863 .956863 .980392 rgb
f
216.853 338.451 mo
217.089 339.396 li
222.077 342.246 li
221.841 341.3 li
216.853 338.451 li
cp
.74902 .745098 .929412 rgb
f
221.841 341.3 mo
222.077 342.246 li
226.93 338.065 li
226.694 337.12 li
221.841 341.3 li
cp
.670588 .670588 .768627 rgb
f
216.853 338.451 mo
221.841 341.3 li
226.694 337.12 li
221.706 334.271 li
216.853 338.451 li
cp
.956863 .956863 .980392 rgb
f
141.535 303.724 mo
141.771 304.669 li
152.805 310.972 li
152.569 310.026 li
141.535 303.724 li
cp
.74902 .745098 .929412 rgb
f
152.569 310.026 mo
152.805 310.972 li
157.658 306.791 li
157.422 305.846 li
152.569 310.026 li
cp
.670588 .670588 .768627 rgb
f
141.535 303.724 mo
152.569 310.026 li
157.422 305.846 li
146.389 299.543 li
141.535 303.724 li
cp
.956863 .956863 .980392 rgb
f
153.627 310.63 mo
153.862 311.576 li
158.851 314.425 li
158.615 313.48 li
153.627 310.63 li
cp
.74902 .745098 .929412 rgb
f
158.615 313.48 mo
158.851 314.425 li
163.704 310.245 li
163.468 309.3 li
158.615 313.48 li
cp
.670588 .670588 .768627 rgb
f
153.627 310.63 mo
158.615 313.48 li
163.468 309.3 li
158.48 306.45 li
153.627 310.63 li
cp
.956863 .956863 .980392 rgb
f
159.672 314.084 mo
159.908 315.029 li
164.896 317.878 li
164.66 316.933 li
159.672 314.084 li
cp
.74902 .745098 .929412 rgb
f
164.66 316.933 mo
164.896 317.878 li
169.75 313.698 li
169.514 312.753 li
164.66 316.933 li
cp
.670588 .670588 .768627 rgb
f
159.672 314.084 mo
164.66 316.933 li
169.514 312.753 li
164.526 309.904 li
159.672 314.084 li
cp
.956863 .956863 .980392 rgb
f
165.719 317.537 mo
165.955 318.483 li
207.217 342.053 li
206.982 341.108 li
165.719 317.537 li
cp
.74902 .745098 .929412 rgb
f
206.982 341.108 mo
207.217 342.053 li
212.071 337.873 li
211.835 336.927 li
206.982 341.108 li
cp
.670588 .670588 .768627 rgb
f
165.719 317.537 mo
206.982 341.108 li
211.835 336.927 li
170.572 313.357 li
165.719 317.537 li
cp
.956863 .956863 .980392 rgb
f
208.04 341.712 mo
208.275 342.657 li
213.264 345.507 li
213.028 344.561 li
208.04 341.712 li
cp
.74902 .745098 .929412 rgb
f
213.028 344.561 mo
213.264 345.507 li
218.117 341.326 li
217.881 340.38 li
213.028 344.561 li
cp
.670588 .670588 .768627 rgb
f
208.04 341.712 mo
213.028 344.561 li
217.881 340.38 li
212.893 337.532 li
208.04 341.712 li
cp
.956863 .956863 .980392 rgb
f
231.712 338.644 mo
231.948 339.589 li
242.982 345.892 li
242.746 344.947 li
231.712 338.644 li
cp
.74902 .745098 .929412 rgb
f
242.746 344.947 mo
242.982 345.892 li
247.835 341.712 li
247.6 340.766 li
242.746 344.947 li
cp
.670588 .670588 .768627 rgb
f
231.712 338.644 mo
242.746 344.947 li
247.6 340.766 li
236.566 334.463 li
231.712 338.644 li
cp
.956863 .956863 .980392 rgb
f
222.899 341.905 mo
223.135 342.85 li
228.123 345.699 li
227.887 344.754 li
222.899 341.905 li
cp
.74902 .745098 .929412 rgb
f
227.887 344.754 mo
228.123 345.699 li
232.976 341.519 li
232.741 340.573 li
227.887 344.754 li
cp
.670588 .670588 .768627 rgb
f
222.899 341.905 mo
227.887 344.754 li
232.741 340.573 li
227.752 337.724 li
222.899 341.905 li
cp
.956863 .956863 .980392 rgb
f
214.085 345.166 mo
214.321 346.111 li
219.309 348.96 li
219.074 348.015 li
214.085 345.166 li
cp
.74902 .745098 .929412 rgb
f
219.074 348.015 mo
219.309 348.96 li
224.163 344.78 li
223.927 343.834 li
219.074 348.015 li
cp
.670588 .670588 .768627 rgb
f
214.085 345.166 mo
219.074 348.015 li
223.927 343.834 li
218.939 340.985 li
214.085 345.166 li
cp
.956863 .956863 .980392 rgb
f
228.945 345.358 mo
229.18 346.304 li
237.192 350.879 li
236.956 349.934 li
228.945 345.358 li
cp
.74902 .745098 .929412 rgb
f
236.956 349.934 mo
237.192 350.879 li
242.045 346.699 li
241.809 345.754 li
236.956 349.934 li
cp
.670588 .670588 .768627 rgb
f
228.945 345.358 mo
236.956 349.934 li
241.809 345.754 li
233.798 341.177 li
228.945 345.358 li
cp
.956863 .956863 .980392 rgb
f
220.131 348.619 mo
220.367 349.564 li
231.401 355.867 li
231.165 354.921 li
220.131 348.619 li
cp
.74902 .745098 .929412 rgb
f
231.165 354.921 mo
231.401 355.867 li
236.255 351.687 li
236.019 350.741 li
231.165 354.921 li
cp
.670588 .670588 .768627 rgb
f
220.131 348.619 mo
231.165 354.921 li
236.019 350.741 li
224.985 344.438 li
220.131 348.619 li
cp
.956863 .956863 .980392 rgb
f
121.301 331.33 mo
93.7761 315.438 li
121.13 299.646 li
148.654 315.537 li
121.301 331.33 li
cp
f
148.654 315.537 mo
121.301 331.33 li
121.301 361.883 li
148.654 346.091 li
148.654 315.537 li
cp
.74902 .745098 .929412 rgb
f
93.7761 315.438 mo
121.301 331.33 li
121.301 361.883 li
93.7761 345.992 li
93.7761 315.438 li
cp
.882353 .870588 .972549 rgb
f
91.3289 348.591 mo
90.9094 348.697 90.5027 348.956 90.106 349.163 cv
89.2537 349.606 88.4133 350.073 87.5814 350.553 cv
85.9167 351.516 84.2865 352.536 82.6569 353.557 cv
81.8485 354.063 81.0653 354.207 80.3445 354.836 cv
79.7572 355.348 78.9431 356.414 78.8821 357.229 cv
78.8015 358.299 80.9579 359.1 81.7844 359.356 cv
82.9391 359.715 84.0513 359.796 85.2365 359.598 cv
86.3912 359.406 87.1536 358.855 87.9191 357.974 cv
88.6053 357.183 89.2809 356.3 90.2657 355.943 cv
91.1879 355.609 92.344 355.785 93.0608 355.015 cv
93.8085 354.212 94.2517 353.157 94.2325 352.052 cv
94.2087 350.681 93.5084 349.424 92.3409 348.726 cv
91.9956 348.52 91.6584 348.508 91.3289 348.591 cv
cp
.0980392 .0705882 .105882 rgb
f
110.598 299.328 mo
111.783 296.136 112.844 291.951 114.349 286.733 cv
114.71 285.483 115.112 283.847 114.886 282.55 cv
114.724 281.619 114.7 280.135 114.065 279.39 cv
113.727 278.993 113.213 278.788 112.702 278.683 cv
107.785 277.667 106.099 283.756 105.581 287.435 cv
105.114 290.746 105.471 294.635 105.375 297.998 cv
105.357 298.635 105.904 304.094 107.92 303.061 cv
108.907 302.555 109.954 301.064 110.598 299.328 cv
cp
f
113.264 298.047 mo
113.252 297.124 112.132 296.644 111.187 295.916 cv
110.473 295.366 107.888 294.238 107.444 294.923 cv
107.201 295.297 100.13 306.379 99.228 308.374 cv
98.3896 310.227 101.968 311.957 102.829 311.002 cv
103.527 310.228 107.181 307.595 109.113 305.298 cv
109.187 305.372 li
111.346 302.756 113.289 299.87 113.264 298.047 cv
cp
f
104.278 353.99 mo
101.715 356.061 99.3806 358.396 97.0524 360.727 cv
96.387 361.393 95.7189 362.067 95.1652 362.831 cv
94.7131 363.455 94.1118 364.3 94.2325 365.098 cv
94.39 366.145 96.6393 366.439 97.4904 366.503 cv
98.6799 366.592 99.7662 366.424 100.862 365.971 cv
101.93 365.53 102.542 364.832 103.083 363.814 cv
103.569 362.901 104.024 361.901 104.892 361.339 cv
105.705 360.813 106.836 360.703 107.364 359.892 cv
107.635 359.476 107.683 358.955 107.693 358.458 cv
107.714 357.526 107.461 356.598 107.478 355.681 cv
107.491 355.008 107.643 354.266 107.442 353.601 cv
107.271 353.033 106.558 352.682 105.996 352.651 cv
105.37 352.615 104.753 352.886 104.278 353.297 cv
104.278 353.99 li
cp
f
129.793 304.597 mo
129.642 305.776 129.526 306.978 129.484 308.164 cv
129.541 306.972 129.643 305.781 129.793 304.597 cv
cp
1 .74902 .635294 rgb
f
129.484 308.164 mo
129.45 308.888 129.432 309.613 129.432 310.337 cv
129.474 310.318 li
129.454 309.601 129.458 308.882 129.484 308.164 cv
cp
f
88.2239 322.141 mo
86.495 323.27 84.5537 330.812 91.2346 331.091 cv
94.6847 331.235 97.8199 329.294 100.921 327.774 cv
105.193 325.678 109.778 324.291 114.101 322.305 cv
115.427 321.695 116.737 321.024 117.874 320.111 cv
120.644 317.887 122.186 314.223 121.841 310.688 cv
121.792 310.19 121.704 309.683 121.46 309.247 cv
120.302 307.176 112.992 307.87 111.288 308.714 cv
104.995 311.829 90.0117 320.974 88.2239 322.141 cv
cp
.0980392 .0705882 .105882 rgb
f
86.1852 327.502 mo
86.2828 329.347 86.4517 331.161 86.7231 332.999 cv
87.0225 335.033 87.3494 337.068 87.452 339.124 cv
87.5627 341.336 87.4138 343.55 87.449 345.763 cv
87.4708 347.143 87.4282 348.558 87.7913 349.903 cv
87.9628 350.538 88.1782 351.233 88.7544 351.587 cv
89.4305 352.003 90.2511 352.249 91.0333 352.355 cv
91.5763 352.429 92.1394 352.431 92.6608 352.262 cv
94.4155 351.693 94.4806 349.241 94.8353 347.731 cv
95.1626 346.338 95.4034 344.925 95.5887 343.506 cv
95.9521 340.72 96.0837 337.916 96.2407 335.114 cv
96.3357 333.252 96.4303 331.387 96.3643 329.523 cv
96.3038 327.82 96.2441 326.066 95.4535 324.549 cv
94.6759 323.055 92.9263 321.97 91.3101 321.641 cv
89.4775 321.269 87.7386 321.976 86.8279 323.646 cv
86.288 324.635 86.1057 325.79 86.1564 326.915 cv
86.1654 327.111 86.1748 327.307 86.1852 327.502 cv
cp
f
99.4451 328.609 mo
97.8793 329.897 96.5212 337.837 102.871 337.66 cv
106.151 337.568 108.999 335.341 111.84 333.551 cv
120.957 327.808 132.312 325.804 130.576 314.412 cv
130.417 313.365 130.141 308.929 129.33 308.425 cv
128.746 308.062 125.467 309.22 124.731 309.342 cv
117.636 310.519 116.717 310.549 115.546 311.352 cv
115.352 316.675 114.496 317.601 111.583 319.35 cv
110.239 320.158 100.626 327.638 99.4451 328.609 cv
cp
f
98.0742 333.9 mo
98.2964 335.734 98.5863 337.532 98.9806 339.348 cv
99.4169 341.358 99.8796 343.366 100.121 345.411 cv
100.38 347.61 100.38 349.829 100.565 352.034 cv
100.679 353.41 100.732 354.824 101.184 356.142 cv
101.398 356.764 101.66 357.443 102.259 357.758 cv
102.961 358.127 103.796 358.317 104.584 358.371 cv
105.131 358.408 105.693 358.372 106.202 358.168 cv
107.914 357.483 107.814 355.031 108.066 353.501 cv
108.299 352.089 108.444 350.663 108.534 349.235 cv
108.709 346.431 108.651 343.624 108.619 340.818 cv
108.589 338.954 108.558 337.087 108.366 335.232 cv
108.191 333.537 108.014 331.79 107.123 330.33 cv
106.246 328.892 104.428 327.927 102.793 327.708 cv
100.94 327.459 99.2524 328.283 98.4558 330.01 cv
97.984 331.032 97.8796 332.197 98.0061 333.317 cv
98.0283 333.511 98.0511 333.706 98.0742 333.9 cv
cp
f
125.597 282.006 mo
123.361 280.891 118.996 279.582 114.784 278.815 cv
108.884 277.741 108.297 279.804 107.124 284.305 cv
106.553 286.494 106.541 288.775 106.759 291.001 cv
106.869 292.125 107.042 293.242 107.245 294.353 cv
107.412 295.274 107.807 296.073 107.987 296.97 cv
108.874 301.388 108.189 306.255 106.469 310.443 cv
106.256 310.962 106.021 311.52 106.162 312.057 cv
106.279 312.504 106.636 312.851 106.984 313.169 cv
112.407 318.133 119.347 321.685 127.173 320.54 cv
128.429 320.356 129.809 319.964 130.437 318.911 cv
130.878 318.172 130.841 317.274 130.784 316.431 cv
130.543 312.871 130.17 309.32 129.668 305.787 cv
129.212 302.582 128.869 299.096 129.256 295.849 cv
129.45 294.214 129.656 292.581 129.874 290.949 cv
129.982 290.133 130.095 289.317 130.209 288.501 cv
130.294 287.898 130.492 287.37 130.391 286.764 cv
130.005 284.416 127.628 283.018 125.597 282.006 cv
cp
.14902 .12549 .156863 rgb
f
109.425 266.88 mo
108.961 268.125 108.605 271.509 108.618 273.734 cv
108.631 275.96 108.988 278.216 109.96 280.218 cv
110.933 282.219 112.566 283.951 114.637 284.765 cv
115.686 285.177 116.949 285.322 117.883 284.693 cv
118.529 284.257 118.907 283.526 119.201 282.804 cv
120.148 280.482 120.5 277.958 120.619 275.452 cv
120.679 274.195 120.682 272.921 120.405 271.692 cv
120.128 270.463 119.551 269.272 118.605 268.441 cv
116.922 266.963 114.453 266.88 112.218 267.036 cv
109.425 266.88 li
cp
.0980392 .0705882 .105882 rgb
f
130.578 304.759 mo
131.225 301.653 131.59 297.645 132.224 292.624 cv
132.394 291.272 132.345 289.869 132.054 288.516 cv
131.759 287.15 131.036 286.08 130.073 284.97 cv
129.637 284.468 129.072 283.947 128.375 283.939 cv
127.739 283.931 127.23 284.356 126.83 284.783 cv
124.421 287.353 123.619 291.05 123.703 294.407 cv
123.783 297.53 123.394 300.644 123.503 303.778 cv
123.523 304.374 123.504 305.013 123.656 305.603 cv
124.377 308.405 126.731 309.773 128.548 308.557 cv
129.438 307.961 130.226 306.448 130.578 304.759 cv
cp
.207843 .207843 .247059 rgb
f
122.005 275.68 mo
122.094 274.632 123.206 273.111 120.256 273.227 cv
119.447 273.259 118.651 273.469 117.89 273.737 cv
116.628 274.183 115.544 274.733 115.135 276.095 cv
114.862 277.005 114.814 277.984 114.774 278.928 cv
114.713 280.331 114.67 281.677 114.968 283.062 cv
115.112 283.731 115.313 284.387 115.569 285.021 cv
115.623 285.153 115.693 285.298 115.827 285.344 cv
115.965 285.391 116.112 285.315 116.237 285.242 cv
117.117 284.73 118.002 284.214 118.781 283.559 cv
120.635 282.002 121.799 279.66 121.945 277.245 cv
121.977 276.723 121.961 276.201 122.005 275.68 cv
cp
.960784 .654902 .513726 rgb
f
110.798 266.709 mo
110.198 267.714 109.857 268.868 109.896 270.084 cv
109.913 270.607 110.01 271.129 110.195 271.62 cv
110.37 272.084 110.674 272.52 110.69 273.031 cv
110.709 273.63 110.291 274.308 110.108 274.876 cv
109.942 275.391 109.855 275.964 110.067 276.461 cv
110.188 276.746 110.399 276.981 110.571 277.24 cv
111.388 278.468 110.679 280.32 112.078 281.185 cv
112.427 281.401 112.835 281.437 113.243 281.449 cv
113.754 281.466 116.042 280.772 116.925 280.36 cv
117.9 279.905 118.836 278.766 119.529 277.944 cv
120.072 277.3 120.988 276.468 121.327 275.702 cv
121.43 275.467 121.168 275.429 121.403 275.31 cv
121.545 275.237 121.7 274.317 121.859 274.296 cv
122.049 274.272 122.301 274.058 122.459 273.947 cv
122.764 273.734 122.927 274.48 123.02 274.122 cv
123.421 272.597 123.937 271.039 123.839 269.443 cv
123.749 267.98 123.755 266.723 122.787 265.499 cv
122.059 264.579 121.034 263.919 119.929 263.525 cv
118.242 262.923 116.344 262.929 114.661 263.542 cv
113.067 264.122 111.663 265.262 110.798 266.709 cv
cp
1 .74902 .635294 rgb
f
123.836 269.44 mo
123.938 271.041 123.422 272.601 123.018 274.12 cv
122.927 274.48 122.766 273.736 122.458 273.948 cv
122.299 274.059 122.052 274.27 121.862 274.297 cv
121.702 274.315 121.546 275.234 121.402 275.306 cv
121.168 275.433 121.429 275.466 121.327 275.704 cv
120.991 276.467 120.07 277.302 119.527 277.947 cv
118.834 278.763 117.897 279.904 116.922 280.36 cv
116.045 280.775 113.755 281.464 113.244 281.451 cv
112.831 281.437 112.426 281.4 112.078 281.186 cv
110.679 280.322 111.388 278.469 110.569 277.242 cv
110.395 276.978 110.192 276.746 110.064 276.458 cv
109.855 275.967 109.943 275.393 110.107 274.878 cv
110.15 274.748 110.201 274.617 110.267 274.478 cv
110.455 274.009 110.704 273.492 110.687 273.035 cv
110.676 272.524 110.369 272.088 110.192 271.618 cv
110.118 271.391 li
109.98 270.966 109.909 270.525 109.892 270.083 cv
109.86 268.87 110.194 267.711 110.799 266.707 cv
111.661 265.261 113.065 264.125 114.663 263.543 cv
116.344 262.928 118.244 262.926 119.927 263.524 cv
121.034 263.921 122.063 264.578 122.785 265.502 cv
123.756 266.725 123.752 267.977 123.836 269.44 cv
cp
f
117.109 274.373 mo
116.887 274.66 116.57 274.857 116.23 274.987 cv
116.032 275.044 li
115.623 275.16 115.18 275.177 114.753 275.17 cv
113.234 275.156 111.74 274.859 110.267 274.478 cv
110.455 274.009 110.704 273.492 110.687 273.035 cv
110.676 272.524 110.369 272.088 110.192 271.618 cv
110.118 271.391 li
110.894 271.626 111.683 271.801 112.499 271.76 cv
113.162 271.731 113.807 271.558 114.462 271.475 cv
115.117 271.393 115.811 271.409 116.398 271.717 cv
116.86 271.959 117.228 272.379 117.376 272.887 cv
117.516 273.388 117.429 273.955 117.109 274.373 cv
cp
.14902 .12549 .156863 rgb
f
124.507 269.17 mo
124.471 268.612 124.39 268.057 124.252 267.511 cv
123.457 264.35 120.392 262.017 117.117 262.242 cv
115.312 262.366 113.555 262.992 112.048 263.977 cv
111.867 264.098 li
110.69 264.899 109.165 266.331 109.283 267.895 cv
109.315 268.327 109.51 268.77 109.882 268.991 cv
110.206 269.185 110.606 269.183 110.983 269.164 cv
112.039 269.111 113.093 268.964 114.15 269.013 cv
115.206 269.062 116.292 269.327 117.106 270.001 cv
117.965 270.712 118.432 271.807 118.602 272.909 cv
118.861 274.599 119.017 277.312 118.686 278.983 cv
118.478 280.034 116.267 285.34 116.087 285.318 cv
117.186 285.457 118.521 285.314 119.535 285.761 cv
121.016 286.414 122.709 286.093 124.216 285.708 cv
124.86 285.543 125.398 285.305 126.055 285.217 cv
126.657 285.136 127.319 284.98 127.564 284.341 cv
127.827 283.654 127.32 282.906 126.73 282.467 cv
126.079 281.983 125.299 281.682 124.694 281.141 cv
123.724 280.273 123.346 278.897 123.365 277.596 cv
123.383 276.295 123.745 275.027 124.032 273.757 cv
124.372 272.255 124.607 270.697 124.507 269.17 cv
cp
f
85.3851 318.247 mo
85.3905 320.187 li
107.815 333.219 li
107.81 331.279 li
85.3851 318.247 li
cp
.831373 .807843 .847059 rgb
f
107.81 331.279 mo
107.815 333.219 li
121.73 325.186 li
121.724 323.245 li
107.81 331.279 li
cp
f
85.3851 318.247 mo
107.81 331.279 li
121.724 323.245 li
99.2994 310.214 li
85.3851 318.247 li
cp
.854902 .854902 .976471 rgb
f
102.891 317.004 mo
108.984 320.522 li
112.308 318.603 li
106.215 315.085 li
102.891 317.004 li
cp
.945098 .945098 .945098 rgb
f
115.619 325.405 mo
95.1383 313.502 li
87.8231 317.734 li
108.304 329.636 li
115.619 325.405 li
cp
f
101.591 313.2 mo
101.414 313.567 100.756 314.533 100.468 314.82 cv
100.179 315.108 100.38 313.904 99.9725 313.92 cv
99.3528 313.944 98.6793 314.339 98.2104 313.933 cv
97.8353 313.608 97.4656 313.27 97.186 312.861 cv
96.9058 312.452 96.7206 311.961 96.7567 311.467 cv
96.7705 311.275 96.8192 311.082 96.928 310.924 cv
97.0021 310.816 97.1007 310.728 97.1991 310.641 cv
97.7501 310.154 98.3008 309.666 98.8522 309.177 cv
98.9723 309.072 99.0941 308.964 99.2344 308.887 cv
99.4243 308.783 99.6417 308.738 99.8578 308.725 cv
100.626 308.681 101.358 309.058 101.871 309.613 cv
102.118 309.88 102.406 310.252 102.487 310.616 cv
102.556 310.922 102.342 311.262 102.246 311.547 cv
102.057 312.108 101.85 312.666 101.591 313.2 cv
cp
.0980392 .0705882 .105882 rgb
f
102.315 311.719 mo
102.354 312.525 102.394 313.33 102.434 314.135 cv
102.449 314.446 102.464 314.762 102.391 315.063 cv
102.334 315.297 102.226 315.516 102.145 315.742 cv
102.071 315.95 102.019 316.166 101.928 316.366 cv
101.652 316.971 101.058 317.357 100.495 317.709 cv
100.265 317.853 100.027 318 99.7599 318.048 cv
99.5897 318.078 99.3746 318.041 99.3129 317.879 cv
99.3129 317.635 li
99.3568 317.402 99.4071 317.16 99.5494 316.969 cv
99.7206 316.738 100.001 316.613 100.192 316.397 cv
100.522 316.028 100.524 315.462 100.371 314.991 cv
100.218 314.521 99.9357 314.104 99.739 313.649 cv
99.5424 313.195 99.437 312.66 99.6501 312.213 cv
99.7252 312.055 99.837 311.916 99.9528 311.785 cv
100.221 311.48 100.526 311.198 100.895 311.03 cv
101.208 310.888 101.578 310.836 101.913 310.932 cv
102.288 311.04 102.297 311.367 102.315 311.719 cv
cp
f
98.5844 312.717 mo
99.0341 312.507 99.9552 313.495 100.036 313.757 cv
100.23 314.393 99.5793 313.86 98.7528 315.136 cv
98.5128 315.507 98.2686 315.887 98.1686 316.317 cv
98.0961 316.631 98.0618 317.021 97.7678 317.153 cv
97.5424 317.254 97.2682 317.121 97.1364 316.911 cv
97.0671 317.358 96.3906 316.997 96.2574 316.546 cv
95.9998 315.675 95.335 316.469 95.235 314.943 cv
94.9836 315.051 li
93.9608 314.21 96.0961 311.761 97.0239 310.806 cv
98.6628 309.119 99.0383 311.765 98.5844 312.717 cv
cp
f
116.062 316.489 mo
115.8 316.208 115.358 315.653 114.925 315.69 cv
114.685 315.711 114.381 315.937 114.171 316.049 cv
114.036 316.121 113.907 316.2 113.775 316.276 cv
113.174 316.268 112.573 316.259 111.972 316.25 cv
111.7 316.247 111.423 316.244 111.16 316.317 cv
110.957 316.374 110.769 316.475 110.573 316.553 cv
110.393 316.624 110.206 316.676 110.033 316.762 cv
109.511 317.022 109.192 317.555 108.9 318.06 cv
108.78 318.266 108.659 318.478 108.626 318.714 cv
108.604 318.864 108.643 319.051 108.787 319.1 cv
109.001 319.093 li
109.204 319.047 109.415 318.995 109.577 318.865 cv
109.775 318.708 109.876 318.458 110.058 318.284 cv
110.372 317.984 110.868 317.965 111.286 318.084 cv
111.324 318.1 li
111.167 318.244 110.998 318.374 110.849 318.525 cv
110.162 319.221 109.31 319.895 108.309 320.05 cv
107.955 320.105 107.518 320.112 107.348 320.427 cv
107.217 320.669 107.342 320.985 107.565 321.149 cv
107.063 321.188 107.408 321.97 107.898 322.155 cv
108.845 322.512 107.908 323.186 109.595 323.422 cv
109.455 323.692 li
110.304 324.898 113.199 322.727 114.337 321.775 cv
114.49 321.631 li
114.535 321.594 li
115.122 321.022 115.709 320.45 116.296 319.878 cv
116.424 319.753 116.553 319.627 116.651 319.477 cv
116.782 319.275 116.85 319.037 116.882 318.798 cv
116.994 317.949 116.635 317.104 116.062 316.489 cv
cp
f
115.874 319.003 mo
116.031 319.091 116.195 319.164 116.368 319.22 cv
117.726 319.661 118.7 318.569 119.66 317.788 cv
120.667 316.969 121.651 316.123 122.615 315.254 cv
124.844 313.248 127.093 311.122 128.812 308.65 cv
129.382 307.829 129.988 306.884 130.119 305.871 cv
130.241 304.917 129.148 304.359 128.273 303.553 cv
127.612 302.946 124.329 303.489 123.766 304.172 cv
122.278 305.976 120.587 307.628 119.027 309.369 cv
117.93 310.595 116.845 311.834 115.806 313.11 cv
115.348 313.674 114.898 314.244 114.469 314.83 cv
114.284 315.082 114.108 315.34 113.929 315.597 cv
113.64 316.009 113.781 316.389 113.983 316.84 cv
114.125 317.156 114.312 317.45 114.517 317.729 cv
114.887 318.231 115.335 318.702 115.874 319.003 cv
cp
.207843 .207843 .247059 rgb
f
79.0544 282.773 mo
79.0544 283.699 79.3015 284.368 79.6813 284.588 cv
80.1088 284.834 80.313 284.376 80.313 283.466 cv
80.313 282.589 80.1182 281.901 79.686 281.651 cv
79.3204 281.44 79.0544 281.802 79.0544 282.773 cv
cp
80.7307 283.686 mo
80.7307 284.897 80.3414 285.342 79.6575 284.947 cv
79.0544 284.598 78.6461 283.71 78.6367 282.526 cv
78.6367 281.331 79.083 280.93 79.7098 281.292 cv
80.3604 281.668 80.7307 282.551 80.7307 283.686 cv
cp
.227451 .172549 .6 rgb
f
82.0227 283.137 mo
81.4767 283.157 li
81.3961 282.743 li
82.0704 282.715 li
82.4264 282.921 li
82.4264 286.485 li
82.0227 286.252 li
82.0227 283.137 li
cp
f
83.9272 285.586 mo
83.9272 286.512 84.1743 287.181 84.5541 287.401 cv
84.9816 287.648 85.1858 287.189 85.1858 286.28 cv
85.1858 285.402 84.9911 284.714 84.5588 284.465 cv
84.1932 284.253 83.9272 284.615 83.9272 285.586 cv
cp
85.6035 286.499 mo
85.6035 287.711 85.2142 288.155 84.5303 287.76 cv
83.9272 287.412 83.5189 286.524 83.5095 285.339 cv
83.5095 284.144 83.9558 283.743 84.5826 284.105 cv
85.2332 284.481 85.6035 285.364 85.6035 286.499 cv
cp
f
86.8955 285.951 mo
86.3495 285.97 li
86.2689 285.556 li
86.9431 285.529 li
87.2992 285.734 li
87.2992 289.298 li
86.8955 289.065 li
86.8955 285.951 li
cp
f
89.3319 287.357 mo
88.7859 287.376 li
88.7053 286.963 li
89.3796 286.935 li
89.7356 287.141 li
89.7356 290.705 li
89.3319 290.472 li
89.3319 287.357 li
cp
f
91.2365 289.806 mo
91.2365 290.732 91.4835 291.401 91.8634 291.621 cv
92.2908 291.867 92.495 291.409 92.495 290.5 cv
92.495 289.622 92.3003 288.934 91.868 288.685 cv
91.5024 288.473 91.2365 288.835 91.2365 289.806 cv
cp
92.9127 290.719 mo
92.9127 291.93 92.5234 292.375 91.8395 291.98 cv
91.2365 291.632 90.8281 290.743 90.8187 289.559 cv
90.8187 288.364 91.265 287.964 91.892 288.325 cv
92.5424 288.701 92.9127 289.583 92.9127 290.719 cv
cp
f
94.2047 290.171 mo
93.6587 290.19 li
93.5781 289.776 li
94.2524 289.749 li
94.6084 289.954 li
94.6084 293.518 li
94.2047 293.285 li
94.2047 290.171 li
cp
f
96.1093 292.619 mo
96.1093 293.546 96.3563 294.215 96.7361 294.434 cv
97.1636 294.681 97.3678 294.223 97.3678 293.313 cv
97.3678 292.435 97.1731 291.747 96.7408 291.498 cv
96.3752 291.287 96.1093 291.648 96.1093 292.619 cv
cp
97.7855 293.532 mo
97.7855 294.744 97.3962 295.188 96.7123 294.793 cv
96.1093 294.445 95.7009 293.557 95.6915 292.372 cv
95.6915 291.177 96.1378 290.777 96.7648 291.139 cv
97.4152 291.514 97.7855 292.397 97.7855 293.532 cv
cp
f
99.0775 292.984 mo
98.5315 293.003 li
98.4509 292.589 li
99.1252 292.562 li
99.4812 292.767 li
99.4812 296.331 li
99.0775 296.098 li
99.0775 292.984 li
cp
f
100.982 295.432 mo
100.982 296.359 101.229 297.028 101.609 297.247 cv
102.037 297.494 102.241 297.036 102.241 296.126 cv
102.241 295.249 102.046 294.561 101.614 294.311 cv
101.248 294.1 100.982 294.462 100.982 295.432 cv
cp
102.659 296.345 mo
102.659 297.557 102.269 298.001 101.585 297.606 cv
100.982 297.258 100.574 296.37 100.565 295.186 cv
100.565 293.99 101.011 293.59 101.638 293.952 cv
102.288 294.327 102.659 295.21 102.659 296.345 cv
cp
f
103.419 296.839 mo
103.419 297.765 103.666 298.435 104.046 298.654 cv
104.473 298.901 104.677 298.443 104.677 297.533 cv
104.677 296.656 104.483 295.967 104.05 295.718 cv
103.685 295.507 103.419 295.869 103.419 296.839 cv
cp
105.095 297.752 mo
105.095 298.964 104.706 299.408 104.022 299.013 cv
103.419 298.665 103.01 297.777 103.001 296.592 cv
103.001 295.397 103.447 294.997 104.074 295.359 cv
104.725 295.734 105.095 296.617 105.095 297.752 cv
cp
f
106.387 297.204 mo
105.841 297.223 li
105.76 296.809 li
106.435 296.782 li
106.791 296.987 li
106.791 300.551 li
106.387 300.318 li
106.387 297.204 li
cp
f
108.292 299.652 mo
108.292 300.579 108.539 301.248 108.918 301.467 cv
109.346 301.714 109.55 301.256 109.55 300.346 cv
109.55 299.469 109.355 298.78 108.923 298.531 cv
108.557 298.32 108.292 298.682 108.292 299.652 cv
cp
109.968 300.565 mo
109.968 301.777 109.579 302.221 108.895 301.826 cv
108.292 301.478 107.883 300.59 107.874 299.406 cv
107.874 298.21 108.32 297.81 108.947 298.172 cv
109.597 298.547 109.968 299.43 109.968 300.565 cv
cp
f
111.26 300.017 mo
110.714 300.036 li
110.633 299.623 li
111.307 299.595 li
111.664 299.8 li
111.664 303.364 li
111.26 303.131 li
111.26 300.017 li
cp
f
113.164 302.465 mo
113.164 303.392 113.411 304.061 113.791 304.28 cv
114.219 304.527 114.423 304.069 114.423 303.159 cv
114.423 302.282 114.228 301.594 113.796 301.344 cv
113.43 301.133 113.164 301.495 113.164 302.465 cv
cp
114.841 303.378 mo
114.841 304.59 114.451 305.034 113.767 304.639 cv
113.164 304.291 112.756 303.403 112.747 302.219 cv
112.747 301.023 113.193 300.623 113.82 300.985 cv
114.47 301.361 114.841 302.243 114.841 303.378 cv
cp
f
116.133 302.83 mo
115.587 302.85 li
115.506 302.436 li
116.18 302.408 li
116.536 302.614 li
116.536 306.178 li
116.133 305.945 li
116.133 302.83 li
cp
f
79.0543 289.354 mo
79.0543 290.28 79.3014 290.949 79.6813 291.168 cv
80.1086 291.415 80.3129 290.958 80.3129 290.047 cv
80.3129 289.17 80.1182 288.482 79.686 288.232 cv
79.3203 288.021 79.0543 288.383 79.0543 289.354 cv
cp
80.7306 290.267 mo
80.7306 291.478 80.3414 291.923 79.6575 291.528 cv
79.0543 291.18 78.646 290.291 78.6366 289.107 cv
78.6366 287.912 79.0829 287.511 79.7098 287.873 cv
80.3602 288.249 80.7307 289.132 80.7306 290.267 cv
cp
f
82.0227 289.719 mo
81.4767 289.738 li
81.396 289.324 li
82.0703 289.296 li
82.4263 289.502 li
82.4263 293.066 li
82.0226 292.833 li
82.0227 289.719 li
cp
f
83.9271 292.167 mo
83.9271 293.094 84.1742 293.762 84.5541 293.982 cv
84.9814 294.229 85.1857 293.771 85.1857 292.861 cv
85.1857 291.983 84.991 291.295 84.5588 291.046 cv
84.1931 290.834 83.9271 291.196 83.9271 292.167 cv
cp
85.6035 293.08 mo
85.6034 294.292 85.2142 294.736 84.5303 294.341 cv
83.9271 293.993 83.5188 293.105 83.5094 291.92 cv
83.5094 290.725 83.9557 290.324 84.5826 290.687 cv
85.233 291.062 85.6035 291.945 85.6035 293.08 cv
cp
f
86.8955 292.532 mo
86.3495 292.551 li
86.2688 292.137 li
86.9431 292.11 li
87.2991 292.315 li
87.2991 295.879 li
86.8954 295.646 li
86.8955 292.532 li
cp
f
88.7999 294.98 mo
88.7999 295.907 89.047 296.576 89.4269 296.795 cv
89.8542 297.042 90.0585 296.584 90.0585 295.674 cv
90.0585 294.797 89.8638 294.108 89.4316 293.859 cv
89.0659 293.648 88.7999 294.01 88.7999 294.98 cv
cp
90.4763 295.893 mo
90.4762 297.105 90.087 297.549 89.4031 297.154 cv
88.7999 296.806 88.3916 295.918 88.3822 294.733 cv
88.3822 293.538 88.8285 293.138 89.4554 293.5 cv
90.1058 293.875 90.4763 294.758 90.4763 295.893 cv
cp
f
91.7683 295.345 mo
91.2223 295.364 li
91.1416 294.951 li
91.8159 294.923 li
92.1719 295.128 li
92.1719 298.692 li
91.7682 298.459 li
91.7683 295.345 li
cp
f
93.6727 297.793 mo
93.6727 298.72 93.9198 299.389 94.2997 299.608 cv
94.7272 299.855 94.9313 299.397 94.9313 298.487 cv
94.9313 297.61 94.7366 296.922 94.3044 296.672 cv
93.9387 296.461 93.6729 296.823 93.6727 297.793 cv
cp
95.349 298.706 mo
95.349 299.918 94.9598 300.362 94.2759 299.968 cv
93.6727 299.619 93.2644 298.731 93.255 297.547 cv
93.255 296.352 93.7013 295.951 94.3282 296.313 cv
94.9786 296.688 95.3491 297.571 95.349 298.706 cv
cp
f
96.6411 298.158 mo
96.0951 298.177 li
96.0144 297.764 li
96.6887 297.736 li
97.0447 297.942 li
97.0447 301.506 li
96.6411 301.273 li
96.6411 298.158 li
cp
f
99.0775 299.565 mo
98.5315 299.584 li
98.4508 299.17 li
99.1251 299.143 li
99.4811 299.348 li
99.4811 302.912 li
99.0774 302.679 li
99.0775 299.565 li
cp
f
100.982 302.013 mo
100.982 302.94 101.229 303.609 101.609 303.828 cv
102.036 304.075 102.241 303.617 102.241 302.707 cv
102.241 301.83 102.046 301.142 101.614 300.892 cv
101.248 300.681 100.982 301.043 100.982 302.013 cv
cp
102.659 302.926 mo
102.659 304.138 102.269 304.582 101.585 304.187 cv
100.982 303.839 100.574 302.951 100.564 301.767 cv
100.564 300.571 101.011 300.171 101.638 300.533 cv
102.288 300.909 102.659 301.792 102.659 302.926 cv
cp
f
103.951 302.378 mo
103.405 302.397 li
103.324 301.984 li
103.998 301.956 li
104.354 302.162 li
104.354 305.726 li
103.95 305.493 li
103.951 302.378 li
cp
f
105.855 304.827 mo
105.855 305.753 106.102 306.422 106.482 306.642 cv
106.909 306.888 107.114 306.43 107.114 305.521 cv
107.114 304.643 106.919 303.955 106.487 303.706 cv
106.121 303.494 105.855 303.856 105.855 304.827 cv
cp
107.531 305.74 mo
107.531 306.951 107.142 307.396 106.458 307.001 cv
105.855 306.652 105.447 305.764 105.437 304.58 cv
105.437 303.385 105.884 302.984 106.51 303.346 cv
107.161 303.722 107.531 304.604 107.531 305.74 cv
cp
f
108.823 305.191 mo
108.277 305.211 li
108.197 304.797 li
108.871 304.769 li
109.227 304.975 li
109.227 308.539 li
108.823 308.306 li
108.823 305.191 li
cp
f
110.728 307.64 mo
110.728 308.567 110.975 309.236 111.355 309.455 cv
111.782 309.702 111.986 309.244 111.986 308.333 cv
111.986 307.456 111.792 306.768 111.359 306.519 cv
110.994 306.307 110.728 306.669 110.728 307.64 cv
cp
112.404 308.553 mo
112.404 309.765 112.015 310.209 111.331 309.814 cv
110.728 309.466 110.319 308.577 110.31 307.393 cv
110.31 306.198 110.756 305.798 111.383 306.159 cv
112.034 306.535 112.404 307.418 112.404 308.553 cv
cp
f
113.696 308.005 mo
113.15 308.024 li
113.069 307.61 li
113.744 307.583 li
114.1 307.788 li
114.1 311.352 li
113.696 311.119 li
113.696 308.005 li
cp
f
115.601 310.453 mo
115.601 311.38 115.848 312.049 116.227 312.268 cv
116.655 312.515 116.859 312.057 116.859 311.147 cv
116.859 310.27 116.665 309.581 116.232 309.332 cv
115.867 309.121 115.601 309.483 115.601 310.453 cv
cp
117.277 311.366 mo
117.277 312.578 116.888 313.022 116.204 312.627 cv
115.601 312.279 115.192 311.391 115.183 310.207 cv
115.183 309.011 115.629 308.611 116.256 308.973 cv
116.907 309.348 117.277 310.231 117.277 311.366 cv
cp
f
79.5862 294.893 mo
79.0402 294.912 li
78.9595 294.499 li
79.6338 294.471 li
79.9899 294.676 li
79.9897 298.24 li
79.5862 298.007 li
79.5862 294.893 li
cp
f
81.4907 297.341 mo
81.4907 298.268 81.7378 298.937 82.1176 299.156 cv
82.545 299.403 82.7491 298.945 82.7491 298.035 cv
82.7493 297.158 82.5544 296.469 82.1223 296.22 cv
81.7566 296.009 81.4907 296.371 81.4907 297.341 cv
cp
83.167 298.254 mo
83.167 299.466 82.7777 299.91 82.0938 299.515 cv
81.4907 299.167 81.0823 298.279 81.0729 297.095 cv
81.0729 295.899 81.5193 295.499 82.1461 295.861 cv
82.7966 296.237 83.167 297.119 83.167 298.254 cv
cp
f
84.459 297.706 mo
83.913 297.726 li
83.8324 297.312 li
84.5066 297.284 li
84.8625 297.49 li
84.8625 301.054 li
84.459 300.821 li
84.459 297.706 li
cp
f
86.3635 300.155 mo
86.3635 301.081 86.6106 301.75 86.9904 301.97 cv
87.4178 302.216 87.6219 301.759 87.6219 300.848 cv
87.6219 299.971 87.4272 299.283 86.9951 299.033 cv
86.6295 298.822 86.3635 299.184 86.3635 300.155 cv
cp
88.0398 301.068 mo
88.0398 302.279 87.6505 302.724 86.9666 302.328 cv
86.3635 301.98 85.9552 301.092 85.9457 299.908 cv
85.9457 298.713 86.3921 298.312 87.0189 298.674 cv
87.6694 299.05 88.0398 299.933 88.0398 301.068 cv
cp
f
89.3318 300.52 mo
88.7858 300.539 li
88.7051 300.125 li
89.3794 300.097 li
89.7355 300.303 li
89.7354 303.867 li
89.3318 303.634 li
89.3318 300.52 li
cp
f
91.2363 302.968 mo
91.2363 303.895 91.4834 304.563 91.8632 304.783 cv
92.2906 305.03 92.4948 304.572 92.4949 303.662 cv
92.4949 302.784 92.3 302.096 91.8679 301.847 cv
91.5023 301.635 91.2363 301.998 91.2363 302.968 cv
cp
92.9126 303.881 mo
92.9126 305.093 92.5233 305.537 91.8394 305.142 cv
91.2363 304.793 90.8279 303.906 90.8185 302.721 cv
90.8185 301.526 91.2649 301.125 91.8917 301.488 cv
92.5422 301.863 92.9126 302.746 92.9126 303.881 cv
cp
f
94.2046 303.333 mo
93.6586 303.352 li
93.5779 302.938 li
94.2522 302.91 li
94.6083 303.116 li
94.6082 306.68 li
94.2046 306.447 li
94.2046 303.333 li
cp
f
96.1091 305.781 mo
96.1091 306.708 96.3562 307.377 96.736 307.596 cv
97.1635 307.843 97.3676 307.385 97.3677 306.475 cv
97.3677 305.598 97.1729 304.909 96.7407 304.66 cv
96.3751 304.449 96.1091 304.811 96.1091 305.781 cv
cp
97.7854 306.694 mo
97.7854 307.906 97.3961 308.35 96.7122 307.955 cv
96.109 307.607 95.7007 306.719 95.6914 305.534 cv
95.6914 304.339 96.1377 303.939 96.7645 304.301 cv
97.415 304.676 97.7854 305.559 97.7854 306.694 cv
cp
f
98.5455 307.188 mo
98.5455 308.114 98.7926 308.783 99.1724 309.003 cv
99.5999 309.25 99.8041 308.791 99.8041 307.882 cv
99.8041 307.004 99.6093 306.316 99.1771 306.066 cv
98.8115 305.855 98.5455 306.217 98.5455 307.188 cv
cp
100.222 308.101 mo
100.222 309.313 99.8325 309.757 99.1486 309.362 cv
98.5455 309.014 98.1372 308.125 98.1277 306.941 cv
98.1277 305.746 98.5741 305.345 99.2009 305.707 cv
99.8514 306.083 100.222 306.966 100.222 308.101 cv
cp
f
100.982 308.594 mo
100.982 309.521 101.229 310.19 101.609 310.409 cv
102.036 310.656 102.241 310.198 102.241 309.288 cv
102.241 308.411 102.046 307.723 101.614 307.473 cv
101.248 307.262 100.982 307.624 100.982 308.594 cv
cp
102.658 309.508 mo
102.658 310.719 102.269 311.164 101.585 310.768 cv
100.982 310.42 100.574 309.532 100.564 308.348 cv
100.564 307.153 101.011 306.752 101.638 307.114 cv
102.288 307.49 102.658 308.372 102.658 309.508 cv
cp
f
103.95 308.959 mo
103.404 308.979 li
103.324 308.565 li
103.998 308.537 li
104.354 308.743 li
104.354 312.307 li
103.95 312.074 li
103.95 308.959 li
cp
f
105.855 311.408 mo
105.855 312.334 106.102 313.003 106.482 313.223 cv
106.909 313.469 107.113 313.011 107.114 312.102 cv
107.114 311.224 106.919 310.536 106.487 310.287 cv
106.121 310.075 105.855 310.437 105.855 311.408 cv
cp
107.531 312.321 mo
107.531 313.532 107.142 313.977 106.458 313.582 cv
105.855 313.233 105.447 312.345 105.437 311.161 cv
105.437 309.966 105.884 309.565 106.51 309.927 cv
107.161 310.303 107.531 311.186 107.531 312.321 cv
cp
f
108.823 311.772 mo
108.277 311.792 li
108.197 311.378 li
108.871 311.35 li
109.227 311.556 li
109.227 315.12 li
108.823 314.887 li
108.823 311.772 li
cp
f
110.728 314.221 mo
110.728 315.147 110.975 315.816 111.355 316.036 cv
111.782 316.283 111.986 315.825 111.986 314.915 cv
111.986 314.037 111.792 313.349 111.359 313.1 cv
110.994 312.888 110.728 313.25 110.728 314.221 cv
cp
112.404 315.134 mo
112.404 316.346 112.015 316.79 111.331 316.395 cv
110.728 316.047 110.319 315.159 110.31 313.974 cv
110.31 312.779 110.756 312.379 111.383 312.74 cv
112.034 313.116 112.404 313.999 112.404 315.134 cv
cp
f
113.696 314.586 mo
113.15 314.605 li
113.069 314.191 li
113.744 314.164 li
114.1 314.369 li
114.1 317.933 li
113.696 317.7 li
113.696 314.586 li
cp
f
115.6 317.034 mo
115.6 317.961 115.848 318.63 116.227 318.849 cv
116.655 319.096 116.859 318.638 116.859 317.728 cv
116.859 316.851 116.664 316.162 116.232 315.913 cv
115.867 315.702 115.6 316.064 115.6 317.034 cv
cp
117.277 317.947 mo
117.277 319.159 116.887 319.603 116.204 319.208 cv
115.6 318.86 115.192 317.972 115.183 316.788 cv
115.183 315.592 115.629 315.192 116.256 315.554 cv
116.906 315.929 117.277 316.812 117.277 317.947 cv
cp
f
79.0542 302.516 mo
79.0542 303.442 79.3013 304.111 79.681 304.331 cv
80.1085 304.577 80.3127 304.119 80.3127 303.209 cv
80.3127 302.332 80.118 301.644 79.6858 301.395 cv
79.3202 301.183 79.0542 301.545 79.0542 302.516 cv
cp
80.7305 303.428 mo
80.7305 304.64 80.3412 305.084 79.6572 304.69 cv
79.0542 304.342 78.6459 303.453 78.6365 302.269 cv
78.6365 301.074 79.0828 300.673 79.7096 301.035 cv
80.3601 301.411 80.7305 302.294 80.7305 303.428 cv
cp
f
82.0225 302.88 mo
81.4764 302.9 li
81.3959 302.486 li
82.0702 302.458 li
82.4261 302.664 li
82.4261 306.228 li
82.0225 305.995 li
82.0225 302.88 li
cp
f
83.927 305.329 mo
83.927 306.255 84.1741 306.925 84.554 307.144 cv
84.9813 307.391 85.1855 306.933 85.1855 306.023 cv
85.1855 305.146 84.9908 304.457 84.5586 304.208 cv
84.193 303.997 83.927 304.359 83.927 305.329 cv
cp
85.6033 306.242 mo
85.6033 307.454 85.214 307.898 84.53 307.503 cv
83.927 307.155 83.5187 306.267 83.5093 305.082 cv
83.5093 303.887 83.9556 303.487 84.5825 303.849 cv
85.2329 304.224 85.6033 305.107 85.6033 306.242 cv
cp
f
86.8953 305.694 mo
86.3492 305.713 li
86.2687 305.299 li
86.943 305.272 li
87.299 305.477 li
87.299 309.041 li
86.8953 308.808 li
86.8953 305.694 li
cp
f
89.3317 307.1 mo
88.7856 307.119 li
88.7051 306.706 li
89.3794 306.678 li
89.7354 306.884 li
89.7354 310.448 li
89.3317 310.215 li
89.3317 307.1 li
cp
f
91.2362 309.549 mo
91.2362 310.475 91.4833 311.145 91.8632 311.364 cv
92.2905 311.61 92.4948 311.153 92.4948 310.242 cv
92.4948 309.365 92.3 308.677 91.8678 308.427 cv
91.5022 308.216 91.2362 308.578 91.2362 309.549 cv
cp
92.9125 310.462 mo
92.9125 311.674 92.5232 312.118 91.8392 311.723 cv
91.2362 311.375 90.8279 310.486 90.8185 309.302 cv
90.8185 308.107 91.2648 307.707 91.8917 308.068 cv
92.5421 308.444 92.9125 309.327 92.9125 310.462 cv
cp
f
94.2045 309.914 mo
93.6584 309.933 li
93.5779 309.519 li
94.2522 309.491 li
94.6082 309.697 li
94.6082 313.261 li
94.2045 313.028 li
94.2045 309.914 li
cp
f
96.109 312.362 mo
96.109 313.289 96.3561 313.958 96.736 314.177 cv
97.1633 314.424 97.3676 313.966 97.3676 313.056 cv
97.3676 312.178 97.1729 311.49 96.7406 311.241 cv
96.375 311.03 96.109 311.391 96.109 312.362 cv
cp
97.7853 313.275 mo
97.7853 314.487 97.396 314.931 96.7122 314.536 cv
96.109 314.188 95.7007 313.3 95.6913 312.115 cv
95.6913 310.92 96.1376 310.52 96.7645 310.882 cv
97.4149 311.257 97.7853 312.14 97.7853 313.275 cv
cp
f
99.0773 312.727 mo
98.5313 312.746 li
98.4507 312.332 li
99.125 312.305 li
99.481 312.51 li
99.481 316.074 li
99.0773 315.841 li
99.0773 312.727 li
cp
f
100.982 315.175 mo
100.982 316.102 101.229 316.771 101.609 316.99 cv
102.036 317.237 102.241 316.779 102.241 315.869 cv
102.241 314.992 102.046 314.303 101.614 314.054 cv
101.248 313.843 100.982 314.205 100.982 315.175 cv
cp
102.658 316.088 mo
102.658 317.3 102.269 317.744 101.585 317.349 cv
100.982 317.001 100.574 316.113 100.564 314.929 cv
100.564 313.734 101.011 313.333 101.638 313.695 cv
102.288 314.071 102.658 314.953 102.658 316.088 cv
cp
f
103.418 316.582 mo
103.418 317.509 103.666 318.178 104.045 318.397 cv
104.473 318.644 104.677 318.186 104.677 317.276 cv
104.677 316.398 104.482 315.71 104.05 315.461 cv
103.684 315.25 103.418 315.612 103.418 316.582 cv
cp
105.095 317.495 mo
105.095 318.707 104.706 319.151 104.021 318.756 cv
103.418 318.408 103.01 317.52 103.001 316.335 cv
103.001 315.14 103.447 314.74 104.074 315.102 cv
104.724 315.477 105.095 316.36 105.095 317.495 cv
cp
f
106.387 316.947 mo
105.841 316.966 li
105.76 316.552 li
106.434 316.525 li
106.79 316.73 li
106.79 320.294 li
106.387 320.061 li
106.387 316.947 li
cp
f
108.291 319.395 mo
108.291 320.322 108.538 320.991 108.918 321.21 cv
109.346 321.457 109.55 320.999 109.55 320.089 cv
109.55 319.212 109.355 318.523 108.923 318.274 cv
108.557 318.063 108.291 318.425 108.291 319.395 cv
cp
109.968 320.308 mo
109.968 321.52 109.578 321.964 108.894 321.569 cv
108.291 321.221 107.883 320.333 107.874 319.149 cv
107.874 317.953 108.32 317.553 108.947 317.915 cv
109.597 318.291 109.968 319.173 109.968 320.308 cv
cp
f
111.259 319.76 mo
110.714 319.78 li
110.633 319.365 li
111.307 319.338 li
111.663 319.544 li
111.663 323.107 li
111.259 322.875 li
111.259 319.76 li
cp
f
113.164 322.208 mo
113.164 323.135 113.411 323.804 113.791 324.024 cv
114.218 324.27 114.423 323.812 114.423 322.902 cv
114.423 322.025 114.228 321.337 113.796 321.087 cv
113.43 320.876 113.164 321.238 113.164 322.208 cv
cp
114.84 323.122 mo
114.84 324.333 114.451 324.778 113.767 324.382 cv
113.164 324.034 112.756 323.146 112.746 321.962 cv
112.746 320.766 113.193 320.366 113.82 320.728 cv
114.47 321.104 114.84 321.987 114.84 323.122 cv
cp
f
116.132 322.573 mo
115.586 322.593 li
115.506 322.179 li
116.18 322.151 li
116.536 322.357 li
116.536 325.921 li
116.132 325.688 li
116.132 322.573 li
cp
f
79.0541 309.097 mo
79.0541 310.023 79.3011 310.692 79.681 310.912 cv
80.1084 311.158 80.3126 310.701 80.3126 309.79 cv
80.3126 308.913 80.1179 308.225 79.6858 307.975 cv
79.3201 307.764 79.0541 308.126 79.0541 309.097 cv
cp
80.7305 310.01 mo
80.7303 311.221 80.3412 311.666 79.6572 311.271 cv
79.0541 310.923 78.6458 310.034 78.6364 308.85 cv
78.6364 307.655 79.0826 307.254 79.7096 307.616 cv
80.36 307.992 80.7305 308.875 80.7305 310.01 cv
cp
f
82.0225 309.462 mo
81.4764 309.481 li
81.3958 309.067 li
82.0701 309.04 li
82.426 309.245 li
82.426 312.809 li
82.0223 312.576 li
82.0225 309.462 li
cp
f
83.9269 311.91 mo
83.9269 312.837 84.1741 313.506 84.5538 313.725 cv
84.9812 313.972 85.1854 313.514 85.1854 312.604 cv
85.1854 311.727 84.9907 311.038 84.5586 310.789 cv
84.1929 310.578 83.9269 310.94 83.9269 311.91 cv
cp
85.6033 312.823 mo
85.6031 314.035 85.214 314.479 84.53 314.084 cv
83.9269 313.736 83.5186 312.848 83.5092 311.663 cv
83.5092 310.468 83.9554 310.068 84.5824 310.43 cv
85.2328 310.805 85.6033 311.688 85.6033 312.823 cv
cp
f
86.8953 312.275 mo
86.3492 312.294 li
86.2686 311.88 li
86.9429 311.853 li
87.2988 312.058 li
87.2988 315.622 li
86.8951 315.389 li
86.8953 312.275 li
cp
f
88.7998 314.723 mo
88.7997 315.65 89.0468 316.319 89.4266 316.538 cv
89.8541 316.785 90.0582 316.327 90.0582 315.417 cv
90.0582 314.54 89.8635 313.852 89.4314 313.602 cv
89.0657 313.391 88.7998 313.753 88.7998 314.723 cv
cp
90.4761 315.636 mo
90.476 316.848 90.0868 317.292 89.4028 316.897 cv
88.7997 316.549 88.3914 315.661 88.382 314.477 cv
88.382 313.281 88.8282 312.881 89.4552 313.243 cv
90.1056 313.618 90.4761 314.501 90.4761 315.636 cv
cp
f
91.7681 315.088 mo
91.222 315.107 li
91.1414 314.694 li
91.8157 314.666 li
92.1716 314.872 li
92.1716 318.436 li
91.7681 318.202 li
91.7681 315.088 li
cp
f
93.6726 317.536 mo
93.6725 318.463 93.9196 319.132 94.2994 319.351 cv
94.7269 319.598 94.931 319.14 94.931 318.23 cv
94.931 317.353 94.7363 316.665 94.3042 316.415 cv
93.9385 316.204 93.6726 316.566 93.6726 317.536 cv
cp
95.3489 318.449 mo
95.3488 319.661 94.9596 320.105 94.2756 319.71 cv
93.6725 319.362 93.2642 318.474 93.2548 317.29 cv
93.2548 316.094 93.701 315.694 94.328 316.056 cv
94.9785 316.432 95.3489 317.314 95.3489 318.449 cv
cp
f
96.6409 317.901 mo
96.0948 317.921 li
96.0142 317.507 li
96.6885 317.479 li
97.0446 317.685 li
97.0444 321.249 li
96.6409 321.016 li
96.6409 317.901 li
cp
f
99.0773 319.308 mo
98.5313 319.327 li
98.4506 318.913 li
99.1249 318.886 li
99.4808 319.091 li
99.4808 322.655 li
99.0771 322.422 li
99.0773 319.308 li
cp
f
100.982 321.757 mo
100.982 322.683 101.229 323.352 101.609 323.572 cv
102.036 323.818 102.24 323.36 102.24 322.45 cv
102.24 321.573 102.046 320.885 101.614 320.635 cv
101.248 320.424 100.982 320.786 100.982 321.757 cv
cp
102.658 322.669 mo
102.658 323.881 102.269 324.325 101.585 323.931 cv
100.982 323.582 100.574 322.694 100.564 321.51 cv
100.564 320.315 101.01 319.914 101.637 320.276 cv
102.288 320.652 102.658 321.534 102.658 322.669 cv
cp
f
103.95 322.121 mo
103.404 322.14 li
103.324 321.727 li
103.998 321.699 li
104.354 321.905 li
104.354 325.469 li
103.95 325.236 li
103.95 322.121 li
cp
f
105.855 324.57 mo
105.855 325.496 106.102 326.165 106.482 326.385 cv
106.909 326.632 107.113 326.173 107.113 325.263 cv
107.113 324.386 106.919 323.698 106.486 323.448 cv
106.121 323.237 105.855 323.599 105.855 324.57 cv
cp
107.531 325.483 mo
107.531 326.695 107.142 327.138 106.458 326.744 cv
105.855 326.396 105.446 325.507 105.437 324.323 cv
105.437 323.128 105.883 322.728 106.51 323.089 cv
107.161 323.465 107.531 324.348 107.531 325.483 cv
cp
f
108.823 324.935 mo
108.277 324.954 li
108.196 324.54 li
108.871 324.512 li
109.227 324.718 li
109.227 328.282 li
108.823 328.049 li
108.823 324.935 li
cp
f
110.728 327.383 mo
110.728 328.31 110.975 328.979 111.355 329.198 cv
111.782 329.445 111.986 328.987 111.986 328.077 cv
111.986 327.199 111.791 326.511 111.359 326.261 cv
110.994 326.051 110.728 326.412 110.728 327.383 cv
cp
112.404 328.296 mo
112.404 329.508 112.015 329.952 111.331 329.557 cv
110.728 329.209 110.319 328.321 110.31 327.136 cv
110.31 325.941 110.756 325.541 111.383 325.903 cv
112.033 326.278 112.404 327.161 112.404 328.296 cv
cp
f
113.696 327.748 mo
113.15 327.767 li
113.069 327.353 li
113.743 327.326 li
114.1 327.531 li
114.1 331.095 li
113.696 330.862 li
113.696 327.748 li
cp
f
115.6 330.196 mo
115.6 331.123 115.847 331.792 116.227 332.011 cv
116.655 332.258 116.859 331.8 116.859 330.89 cv
116.859 330.013 116.664 329.324 116.232 329.075 cv
115.866 328.864 115.6 329.226 115.6 330.196 cv
cp
117.277 331.109 mo
117.277 332.321 116.887 332.765 116.203 332.37 cv
115.6 332.022 115.192 331.134 115.183 329.949 cv
115.183 328.754 115.629 328.354 116.256 328.716 cv
116.906 329.092 117.277 329.974 117.277 331.109 cv
cp
f
82.1589 304.843 mo
80.4817 305.818 li
80.5975 305.75 80.7579 305.76 80.9354 305.863 cv
82.6133 304.888 li
82.4354 304.785 82.2744 304.776 82.1589 304.843 cv
cp
.956863 .956863 .980392 rgb
f
gsave
82.1589 304.843 mo
80.4817 305.818 li
80.5975 305.75 80.7579 305.76 80.9355 305.863 cv
82.6133 304.888 li
82.4354 304.785 82.2745 304.776 82.1589 304.843 cv
clp
80.9354 305.863 mo
82.6133 304.888 li
82.418 304.81 li
80.7408 305.785 li
80.9354 305.863 li
cp
f
80.7408 305.785 mo
82.418 304.81 li
82.3237 304.79 82.2391 304.801 82.1703 304.837 cv
80.4924 305.812 li
80.5619 305.775 80.6465 305.766 80.7408 305.785 cv
cp
f
80.4924 305.812 mo
82.1703 304.837 li
82.1589 304.843 li
80.4817 305.818 li
80.4924 305.812 li
cp
f
grestore
102.086 318.156 mo
103.763 317.181 li
82.6133 304.888 li
80.9354 305.863 li
102.086 318.156 li
cp
f
102.726 319.259 mo
104.403 318.285 li
104.404 317.879 104.117 317.385 103.763 317.181 cv
102.086 318.156 li
102.439 318.359 102.727 318.854 102.726 319.259 cv
cp
f
gsave
102.726 319.259 mo
104.403 318.285 li
104.404 317.879 104.117 317.385 103.763 317.181 cv
102.086 318.156 li
102.439 318.359 102.727 318.854 102.726 319.259 cv
clp
102.398 318.428 mo
104.075 317.454 li
103.983 317.341 103.876 317.246 103.763 317.181 cv
102.086 318.156 li
102.199 318.221 102.306 318.316 102.398 318.428 cv
cp
f
102.614 318.778 mo
104.292 317.804 li
104.236 317.679 104.162 317.559 104.075 317.454 cv
102.398 318.428 li
102.484 318.534 102.558 318.653 102.614 318.778 cv
cp
f
grestore
80.9354 305.863 mo
80.5824 305.659 80.2965 305.822 80.2955 306.228 cv
85.3851 318.247 li
107.816 331.279 li
102.806 319.24 li
102.806 319.24 102.665 318.496 102.086 318.156 cv
80.9354 305.863 li
cp
.831373 .807843 .847059 rgb
f
107.816 331.279 mo
109.493 330.304 li
104.292 317.804 li
102.614 318.778 li
107.816 331.279 li
cp
.854902 .854902 .976471 rgb
f
236.876 386.831 mo
233.352 386.831 229.876 386.548 226.49 385.973 cv
208.015 382.837 191.82 370.535 185.231 354.633 cv
184.517 352.91 183.898 351.123 183.3 349.396 cv
182.428 346.878 181.527 344.275 180.326 341.872 cv
178.012 337.242 174.733 334.061 171.091 332.915 cv
164.23 330.754 157.139 335.568 152.79 340.791 cv
151.099 342.82 149.556 345.056 148.063 347.218 cv
145.442 351.015 142.732 354.942 139.101 357.951 cv
133.149 362.884 123.448 364.314 118.493 358.582 cv
114.856 354.375 115.398 348.374 115.923 342.571 cv
116.387 337.436 116.866 332.126 114.422 328.19 cv
114.239 327.896 114.33 327.508 114.625 327.326 cv
114.918 327.142 115.306 327.233 115.489 327.528 cv
118.155 331.821 117.656 337.343 117.173 342.684 cv
116.649 348.481 116.154 353.957 119.442 357.761 cv
123.917 362.937 132.805 361.538 138.299 356.984 cv
141.797 354.086 144.457 350.232 147.03 346.505 cv
148.539 344.32 150.099 342.06 151.825 339.988 cv
156.435 334.452 164.015 329.373 171.468 331.717 cv
175.437 332.967 178.982 336.373 181.449 341.31 cv
182.687 343.787 183.602 346.43 184.487 348.985 cv
185.079 350.695 185.691 352.464 186.391 354.153 cv
192.818 369.665 208.641 381.67 226.7 384.736 cv
242.993 387.502 261.424 383.37 277.267 373.401 cv
284.089 369.108 289.14 364.586 292.708 359.58 cv
297.036 353.505 299.118 346.628 298.569 340.213 cv
297.801 331.231 292.036 322.515 281.435 314.307 cv
278.653 312.153 275.693 310.102 272.831 308.118 cv
266.884 303.997 260.735 299.735 255.778 294.282 cv
255.616 294.105 255.57 293.852 255.658 293.629 cv
258.92 285.375 li
259.048 285.053 259.412 284.896 259.735 285.022 cv
260.057 285.149 260.215 285.514 260.088 285.837 cv
256.97 293.725 li
261.787 298.937 267.763 303.078 273.546 307.086 cv
276.422 309.079 279.395 311.14 282.203 313.314 cv
293.094 321.746 299.021 330.76 299.82 340.106 cv
300.394 346.817 298.231 353.991 293.73 360.308 cv
290.065 365.451 284.899 370.081 277.936 374.463 cv
265.12 382.528 250.625 386.831 236.876 386.831 cv
cp
.14902 .12549 .156863 rgb
f
146.094 375.594 mo
140.209 375.594 134.519 373.411 130.708 369.498 cv
125.715 364.37 124.046 356.817 122.704 350.749 cv
121.861 346.934 120.617 342.839 119.413 338.88 cv
118.204 334.898 116.952 330.78 116.098 326.918 cv
116.023 326.579 116.237 326.244 116.576 326.169 cv
116.914 326.093 117.25 326.308 117.324 326.647 cv
118.167 330.462 119.411 334.556 120.615 338.515 cv
121.825 342.497 123.076 346.615 123.93 350.478 cv
125.237 356.391 126.864 363.75 131.608 368.622 cv
136.239 373.378 143.854 375.409 151.008 373.793 cv
157.435 372.342 163.513 368.179 168.121 362.071 cv
169.09 360.788 170.019 359.396 170.917 358.051 cv
173.585 354.056 176.344 349.925 180.676 347.686 cv
185.037 345.432 190.858 345.389 196.643 347.566 cv
200.89 349.165 204.735 351.685 208.454 354.122 cv
209.157 354.583 209.86 355.044 210.565 355.498 cv
224.297 364.347 238.024 370.086 251.365 372.554 cv
266.729 375.398 282.163 373.817 294.826 368.104 cv
302.771 364.52 309.026 359.525 312.913 353.661 cv
317.514 346.721 318.808 338.444 316.376 331.521 cv
313.425 323.121 304.546 316.595 294.281 315.28 cv
291.487 314.921 288.568 314.897 285.744 314.874 cv
280.62 314.832 275.322 314.788 270.503 312.76 cv
261.823 309.109 256.515 298.68 258.67 289.513 cv
258.75 289.176 259.089 288.967 259.425 289.046 cv
259.763 289.125 259.972 289.463 259.893 289.801 cv
257.871 298.398 262.849 308.178 270.99 311.603 cv
275.581 313.534 280.522 313.575 285.755 313.618 cv
288.615 313.642 291.573 313.667 294.441 314.034 cv
305.165 315.408 314.456 322.268 317.56 331.104 cv
320.122 338.397 318.776 347.089 313.96 354.355 cv
309.941 360.417 303.503 365.567 295.342 369.249 cv
282.449 375.066 266.749 376.677 251.137 373.789 cv
237.634 371.29 223.755 365.491 209.886 356.554 cv
209.178 356.097 208.472 355.635 207.766 355.172 cv
204.104 352.772 200.318 350.291 196.201 348.741 cv
190.747 346.688 185.298 346.71 181.252 348.801 cv
177.208 350.892 174.541 354.886 171.961 358.748 cv
171.053 360.108 170.114 361.515 169.124 362.827 cv
164.337 369.172 158.001 373.501 151.284 375.018 cv
149.566 375.406 147.821 375.594 146.094 375.594 cv
cp
.996078 .262745 .25098 rgb
f
268.545 290.218 mo
228.04 266.678 li
235.056 252.639 li
275.562 276.177 li
268.545 290.218 li
cp
.207843 .207843 .247059 rgb
f
251.666 299.962 mo
211.16 276.423 li
228.04 266.678 li
268.545 290.218 li
251.666 299.962 li
cp
.266667 .266667 .329412 rgb
f
251.68 304.643 mo
211.174 281.103 li
211.16 276.423 li
251.666 299.962 li
251.68 304.643 li
cp
.207843 .207843 .247059 rgb
f
275.562 276.177 mo
235.056 252.639 li
234.884 191.881 li
275.39 215.42 li
275.562 276.177 li
.14902 .12549 .156863 rgb
f
275.39 215.42 mo
234.884 191.881 li
238.963 189.525 li
279.469 213.065 li
275.39 215.42 li
.266667 .266667 .329412 rgb
f
279.469 213.065 mo
279.646 275.488 li
270.497 293.778 li
251.68 304.643 li
251.666 299.962 li
268.545 290.217 li
275.562 276.177 li
275.39 215.42 li
279.469 213.065 li
.0980392 .0705882 .105882 rgb
f
gsave
185.508 66.9329 mo
191.603 64.2556 li
193.067 63.6125 194.885 63.7595 196.779 64.8531 cv
190.685 67.5303 li
188.79 66.4368 186.973 66.29 185.508 66.9329 cv
clp
185.508 66.9329 mo
191.603 64.2556 li
193.067 63.6125 194.885 63.7595 196.779 64.853 cv
190.685 67.5303 li
188.791 66.4368 186.973 66.29 185.508 66.9329 cv
cp
.956863 .956863 .980392 rgb
f
grestore
342.875 293.915 mo
336.781 296.592 li
338.513 295.831 339.749 293.962 340.028 291.245 cv
346.122 288.568 li
345.843 291.285 344.608 293.154 342.875 293.915 cv
cp
.827451 .827451 .960784 rgb
f
gsave
342.875 293.915 mo
336.781 296.592 li
338.513 295.831 339.749 293.962 340.028 291.245 cv
346.122 288.568 li
345.843 291.285 344.608 293.154 342.875 293.915 cv
clp
340.028 291.245 mo
346.122 288.568 li
345.843 291.285 344.608 293.154 342.875 293.915 cv
336.781 296.592 li
338.513 295.831 339.749 293.962 340.028 291.245 cv
cp
f
grestore
190.685 67.5303 mo
196.779 64.853 li
351.954 154.443 li
345.859 157.12 li
190.685 67.5303 li
cp
.956863 .956863 .980392 rgb
f
352.421 170.52 mo
358.516 167.843 li
346.122 288.568 li
340.028 291.245 li
352.421 170.52 li
.827451 .827451 .960784 rgb
f
gsave
345.859 157.12 mo
351.954 154.443 li
356.094 156.833 359.03 162.835 358.516 167.843 cv
352.421 170.52 li
352.936 165.512 350 159.51 345.859 157.12 cv
clp
345.859 157.12 mo
351.954 154.443 li
356.094 156.833 359.03 162.835 358.516 167.843 cv
352.421 170.521 li
352.936 165.512 350 159.51 345.859 157.12 cv
cp
.956863 .956863 .980392 rgb
f
grestore
345.859 157.12 mo
350 159.51 352.936 165.512 352.421 170.52 cv
340.028 291.245 li
339.513 296.258 335.743 298.383 331.603 295.992 cv
176.428 206.402 li
172.292 204.014 169.351 198.015 169.866 193.002 cv
182.26 72.2773 li
182.774 67.2688 186.549 65.142 190.685 67.5303 cv
345.859 157.12 li
.956863 .956863 .980392 rgb
f
334.915 294.65 mo
334.268 294.65 333.524 294.418 332.764 293.979 cv
177.59 204.39 li
174.235 202.452 171.757 197.346 172.178 193.24 cv
184.572 72.5149 li
184.659 71.6609 185.121 68.8745 187.376 68.8745 cv
188.023 68.8745 188.765 69.1055 189.523 69.5433 cv
344.698 159.133 li
348.053 161.07 350.531 166.176 350.109 170.283 cv
337.716 291.008 li
337.628 291.862 337.167 294.65 334.915 294.65 cv
.996078 .262745 .25098 rgb
f
174.415 70.5015 mo
176.627 69.2158 li
177.437 68.7449 178.56 68.8118 179.8 69.5273 cv
177.587 70.8127 li
176.348 70.0972 175.225 70.0303 174.415 70.5015 cv
cp
.956863 .956863 .980392 rgb
f
gsave
174.415 70.5015 mo
176.627 69.2159 li
177.437 68.7449 178.56 68.8117 179.8 69.5273 cv
177.587 70.8128 li
176.348 70.0972 175.225 70.0302 174.415 70.5015 cv
clp
174.415 70.5015 mo
176.627 69.2158 li
177.437 68.7449 178.56 68.8118 179.8 69.5273 cv
177.587 70.8127 li
176.348 70.0972 175.225 70.0303 174.415 70.5015 cv
cp
f
grestore
237.34 152.375 mo
235.128 153.66 li
235.927 153.196 236.422 152.208 236.426 150.803 cv
238.638 149.518 li
238.634 150.923 238.139 151.911 237.34 152.375 cv
f
gsave
237.34 152.375 mo
235.128 153.66 li
235.927 153.196 236.422 152.208 236.426 150.803 cv
238.638 149.518 li
238.634 150.923 238.139 151.911 237.34 152.375 cv
clp
236.426 150.803 mo
238.638 149.518 li
238.634 150.923 238.139 151.911 237.34 152.375 cv
235.128 153.66 li
235.927 153.196 236.422 152.208 236.426 150.803 cv
f
grestore
236.542 109.974 mo
238.754 108.689 li
238.638 149.518 li
236.426 150.803 li
236.542 109.974 li
f
234.316 101.002 mo
179.8 69.5273 li
177.587 70.8127 li
232.104 102.288 li
234.564 103.708 236.55 107.147 236.542 109.974 cv
238.754 108.689 li
238.762 105.862 236.776 102.423 234.316 101.002 cv
cp
f
236.542 109.974 mo
236.55 107.147 234.564 103.708 232.104 102.288 cv
177.587 70.8128 li
175.127 69.3921 173.125 70.5284 173.116 73.3562 cv
173.109 75.8122 li
236.535 112.432 li
236.542 109.974 li
.898039 .196078 .168627 rgb
f
173.109 75.8122 mo
173.001 114.185 li
172.993 117.012 174.982 120.453 177.443 121.874 cv
231.959 153.349 li
234.42 154.77 236.418 153.631 236.426 150.803 cv
236.535 112.432 li
173.109 75.8122 li
.996078 .262745 .25098 rgb
f
221.763 112.49 mo
232.166 118.496 li
232.166 115.512 li
221.763 109.507 li
221.763 112.49 li
.956863 .956863 .980392 rgb
f
179.535 85.1267 mo
183.195 87.24 li
183.195 90.2236 li
179.535 88.1104 li
179.535 85.1267 li
cp
f
197.613 98.5479 mo
205.132 102.889 li
205.133 99.9053 li
197.613 95.5639 li
197.613 98.5479 li
f
183.689 90.5088 mo
193.406 96.1187 li
193.406 93.1348 li
183.689 87.5249 li
183.689 90.5088 li
cp
f
193.947 96.4309 mo
196.947 98.1631 li
196.947 95.179 li
193.947 93.4473 li
193.947 96.4309 li
cp
.227451 .172549 .6 rgb
f
205.752 103.246 mo
221.217 112.175 li
221.217 109.191 li
205.752 100.262 li
205.752 103.246 li
.74902 .745098 .929412 rgb
f
174.804 114.765 mo
189.308 123.138 li
189.308 120.155 li
174.804 111.781 li
174.804 114.765 li
cp
.956863 .956863 .980392 rgb
f
203.726 131.463 mo
211.245 135.804 li
211.245 132.82 li
203.726 128.479 li
203.726 131.463 li
f
189.802 123.424 mo
199.519 129.034 li
199.519 126.05 li
189.802 120.44 li
189.802 123.424 li
cp
f
200.059 129.346 mo
203.059 131.078 li
203.06 128.094 li
200.06 126.362 li
200.059 129.346 li
.227451 .172549 .6 rgb
f
211.864 136.161 mo
227.33 145.09 li
227.33 142.107 li
211.865 133.178 li
211.864 136.161 li
.956863 .956863 .980392 rgb
f
223.047 109.033 mo
236.038 116.533 li
236.038 113.55 li
223.047 106.05 li
223.047 109.033 li
f
207.761 100.209 mo
221.988 108.422 li
221.988 105.438 li
207.761 97.2244 li
207.761 100.209 li
f
176.316 82.0544 mo
190.543 90.2681 li
190.543 87.2842 li
176.316 79.0703 li
176.316 82.0544 li
cp
f
196.808 93.8845 mo
207.056 99.8015 li
207.056 96.8176 li
196.808 90.9009 li
196.808 93.8845 li
.227451 .172549 .6 rgb
f
191.19 90.6409 mo
196.25 93.5627 li
196.25 90.5789 li
191.19 87.6575 li
191.19 90.6409 li
cp
.956863 .956863 .980392 rgb
f
176.316 119.761 mo
190.543 127.975 li
190.543 124.991 li
176.316 116.778 li
176.316 119.761 li
cp
f
196.808 131.592 mo
207.056 137.509 li
207.056 134.525 li
196.808 128.608 li
196.808 131.592 li
.227451 .172549 .6 rgb
f
191.19 128.348 mo
196.25 131.27 li
196.25 128.286 li
191.19 125.365 li
191.19 128.348 li
cp
.956863 .956863 .980392 rgb
f
223.047 134.122 mo
236.038 141.622 li
236.038 138.639 li
223.047 131.139 li
223.047 134.122 li
f
174.349 103.222 mo
186.675 110.338 li
186.675 113.322 li
174.349 106.206 li
174.349 103.222 li
cp
f
198.183 119.768 mo
207.344 125.057 li
207.344 122.073 li
198.183 116.784 li
198.183 119.768 li
f
193.947 117.322 mo
196.947 119.054 li
196.947 116.07 li
193.947 114.338 li
193.947 117.322 li
cp
.227451 .172549 .6 rgb
f
208.087 125.486 mo
222.314 133.7 li
222.314 130.716 li
208.087 122.502 li
208.087 125.486 li
.74902 .745098 .929412 rgb
f
187.904 114.031 mo
192.964 116.953 li
192.964 113.969 li
187.904 111.047 li
187.904 114.031 li
cp
.956863 .956863 .980392 rgb
f
223.047 121.617 mo
236.038 129.117 li
236.038 126.133 li
223.047 118.634 li
223.047 121.617 li
f
206.078 111.821 mo
222.314 121.195 li
222.314 118.211 li
206.078 108.837 li
206.078 111.821 li
f
176.316 94.6582 mo
190.543 102.872 li
190.543 99.8882 li
176.316 91.6746 li
176.316 94.6582 li
cp
f
196.808 106.488 mo
205.328 111.407 li
205.328 108.424 li
196.808 103.505 li
196.808 106.488 li
f
191.189 103.245 mo
196.25 106.167 li
196.25 103.183 li
191.189 100.261 li
191.189 103.245 li
cp
f
217.939 114.48 mo
232.166 122.695 li
232.166 119.71 li
217.939 111.497 li
217.939 114.48 li
.227451 .172549 .6 rgb
f
192.829 99.9839 mo
207.056 108.198 li
207.056 105.214 li
192.829 97 li
192.829 99.9839 li
.74902 .745098 .929412 rgb
f
207.827 108.643 mo
216.988 113.931 li
216.988 110.948 li
207.827 105.659 li
207.827 108.643 li
f
183.982 94.876 mo
189.043 97.7979 li
189.043 94.814 li
183.982 91.8923 li
183.982 94.876 li
cp
.227451 .172549 .6 rgb
f
217.939 135.47 mo
232.166 143.684 li
232.166 140.7 li
217.939 132.487 li
217.939 135.47 li
.956863 .956863 .980392 rgb
f
191.189 120.027 mo
204.766 127.865 li
204.766 124.882 li
191.189 117.043 li
191.189 120.027 li
f
205.327 128.189 mo
217.477 135.204 li
217.477 132.22 li
205.327 125.206 li
205.327 128.189 li
.227451 .172549 .6 rgb
f
183.982 115.866 mo
190.804 119.804 li
190.804 116.821 li
183.982 112.882 li
183.982 115.866 li
cp
.74902 .745098 .929412 rgb
f
197.545 111.103 mo
211.987 119.44 li
211.987 116.456 li
197.545 108.119 li
197.545 111.103 li
.956863 .956863 .980392 rgb
f
212.543 119.761 mo
225.469 127.224 li
225.469 124.24 li
212.543 116.778 li
212.543 119.761 li
.74902 .745098 .929412 rgb
f
191.375 107.54 mo
196.436 110.462 li
196.436 107.478 li
191.375 104.557 li
191.375 107.54 li
cp
.956863 .956863 .980392 rgb
f
218.519 127.409 mo
227.617 132.662 li
227.617 129.678 li
218.519 124.426 li
218.519 127.409 li
.74902 .745098 .929412 rgb
f
193.118 112.744 mo
217.835 127.015 li
217.835 124.031 li
193.118 109.761 li
193.118 112.744 li
f
184.776 107.928 mo
192.5 112.388 li
192.5 109.404 li
184.776 104.944 li
184.776 107.928 li
cp
f
381.619 277.86 mo
379.407 279.146 li
380.206 278.682 380.701 277.694 380.705 276.289 cv
382.917 275.004 li
382.913 276.408 382.418 277.396 381.619 277.86 cv
cp
.956863 .956863 .980392 rgb
f
gsave
381.619 277.86 mo
379.407 279.146 li
380.206 278.682 380.701 277.694 380.705 276.289 cv
382.917 275.004 li
382.913 276.408 382.418 277.396 381.619 277.86 cv
clp
380.705 276.289 mo
382.917 275.004 li
382.913 276.408 382.418 277.396 381.619 277.86 cv
379.407 279.146 li
380.206 278.682 380.701 277.694 380.705 276.289 cv
cp
f
grestore
329.59 178.701 mo
331.802 177.416 li
332.612 176.945 333.733 177.012 334.97 177.726 cv
332.758 179.011 li
331.521 178.297 330.4 178.231 329.59 178.701 cv
cp
f
gsave
329.59 178.701 mo
331.802 177.416 li
332.612 176.945 333.733 177.012 334.97 177.726 cv
332.758 179.011 li
331.521 178.297 330.4 178.231 329.59 178.701 cv
clp
329.59 178.701 mo
331.802 177.416 li
332.612 176.945 333.733 177.012 334.97 177.726 cv
332.758 179.011 li
331.521 178.297 330.4 178.231 329.59 178.701 cv
cp
f
grestore
380.887 211.924 mo
383.099 210.638 li
382.917 275.004 li
380.705 276.289 li
380.887 211.924 li
cp
f
332.758 179.011 mo
334.97 177.726 li
378.661 202.951 li
376.45 204.237 li
332.758 179.011 li
cp
f
376.45 204.237 mo
378.661 202.951 li
381.122 204.372 383.107 207.811 383.099 210.638 cv
380.887 211.924 li
380.896 209.096 378.91 205.657 376.45 204.237 cv
cp
f
gsave
376.45 204.237 mo
378.662 202.951 li
381.122 204.372 383.107 207.811 383.099 210.638 cv
380.887 211.924 li
380.896 209.096 378.91 205.657 376.45 204.237 cv
clp
376.45 204.237 mo
378.661 202.951 li
381.122 204.372 383.107 207.811 383.099 210.638 cv
380.887 211.924 li
380.896 209.096 378.91 205.657 376.45 204.237 cv
cp
f
grestore
380.887 211.924 mo
380.896 209.096 378.91 205.657 376.45 204.237 cv
332.758 179.011 li
330.301 177.593 328.299 178.729 328.291 181.557 cv
328.277 186.384 li
380.874 216.751 li
380.887 211.924 li
cp
.760784 .101961 .0784314 rgb
f
328.277 186.384 mo
328.108 245.922 li
328.1 248.75 330.09 252.191 332.546 253.609 cv
376.238 278.834 li
378.699 280.255 380.697 279.116 380.705 276.289 cv
380.874 216.751 li
328.277 186.384 li
.996078 .262745 .25098 rgb
f
338.358 201.497 mo
334.59 199.321 li
334.59 196.249 li
338.358 198.425 li
338.358 201.497 li
.960784 .886274 .905882 rgb
f
360.945 214.537 mo
353.203 210.067 li
353.203 206.995 li
360.945 211.465 li
360.945 214.537 li
f
348.871 207.566 mo
338.866 201.79 li
338.866 198.718 li
348.871 204.494 li
348.871 207.566 li
.772549 .694118 .858823 rgb
f
352.517 209.671 mo
349.428 207.888 li
349.428 204.816 li
352.517 206.599 li
352.517 209.671 li
.305882 .180392 .564706 rgb
f
377.507 224.099 mo
361.583 214.906 li
361.583 211.833 li
377.507 221.027 li
377.507 224.099 li
.772549 .694118 .858823 rgb
f
338.358 244.625 mo
334.59 242.45 li
334.59 239.378 li
338.358 241.553 li
338.358 244.625 li
.960784 .886274 .905882 rgb
f
360.945 257.666 mo
353.203 253.196 li
353.203 250.124 li
360.945 254.594 li
360.945 257.666 li
.772549 .694118 .858823 rgb
f
352.471 252.852 mo
342.466 247.075 li
342.466 244.003 li
352.471 249.78 li
352.471 252.852 li
.960784 .886274 .905882 rgb
f
341.955 246.702 mo
338.866 244.919 li
338.866 241.847 li
341.955 243.63 li
341.955 246.702 li
.305882 .180392 .564706 rgb
f
377.507 267.228 mo
361.583 258.034 li
361.583 254.962 li
377.507 264.155 li
377.507 267.228 li
.772549 .694118 .858823 rgb
f
338.358 248.72 mo
334.59 246.545 li
334.59 243.473 li
338.358 245.648 li
338.358 248.72 li
.960784 .886274 .905882 rgb
f
360.945 261.761 mo
353.203 257.291 li
353.203 254.219 li
360.945 258.689 li
360.945 261.761 li
f
348.871 254.79 mo
338.866 249.014 li
338.866 245.942 li
348.871 251.718 li
348.871 254.79 li
f
352.517 256.895 mo
349.428 255.112 li
349.428 252.04 li
352.517 253.823 li
352.517 256.895 li
.305882 .180392 .564706 rgb
f
377.507 271.322 mo
361.583 262.129 li
361.583 259.057 li
377.507 268.25 li
377.507 271.322 li
.772549 .694118 .858823 rgb
f
344.652 235.387 mo
329.718 226.765 li
329.718 223.693 li
344.652 232.315 li
344.652 235.387 li
.960784 .886274 .905882 rgb
f
367.239 248.427 mo
359.497 243.957 li
359.497 240.885 li
367.239 245.355 li
367.239 248.427 li
f
355.165 241.457 mo
345.16 235.68 li
345.16 232.608 li
355.165 238.384 li
355.165 241.457 li
f
358.811 243.562 mo
355.722 241.778 li
355.722 238.706 li
358.811 240.489 li
358.811 243.562 li
.305882 .180392 .564706 rgb
f
378.3 220.234 mo
363.652 211.777 li
363.652 208.705 li
378.3 217.162 li
378.3 220.234 li
.960784 .886274 .905882 rgb
f
345.924 201.542 mo
331.275 193.085 li
331.275 190.013 li
345.924 198.47 li
345.924 201.542 li
f
362.926 211.358 mo
352.373 205.266 li
352.373 202.194 li
362.926 208.286 li
362.926 211.358 li
.305882 .180392 .564706 rgb
f
351.799 204.935 mo
346.589 201.926 li
346.589 198.854 li
351.8 201.863 li
351.799 204.935 li
.772549 .694118 .858823 rgb
f
341.941 225.279 mo
329.25 217.952 li
329.25 214.88 li
341.941 222.207 li
341.941 225.279 li
.960784 .886274 .905882 rgb
f
363.223 237.362 mo
353.79 231.916 li
353.79 228.844 li
363.223 234.29 li
363.223 237.362 li
f
352.517 231.181 mo
349.428 229.398 li
349.428 226.326 li
352.517 228.109 li
352.517 231.181 li
.305882 .180392 .564706 rgb
f
378.636 246.261 mo
363.987 237.803 li
363.987 234.731 li
378.636 243.188 li
378.636 246.261 li
.772549 .694118 .858823 rgb
f
348.417 229.018 mo
343.206 226.009 li
343.206 222.937 li
348.417 225.946 li
348.417 229.018 li
f
341.941 255.37 mo
329.25 248.043 li
329.25 244.971 li
341.941 252.298 li
341.941 255.37 li
f
348.417 259.108 mo
343.206 256.1 li
343.206 253.028 li
348.417 256.036 li
348.417 259.108 li
f
378.636 233.385 mo
361.919 223.734 li
361.919 220.662 li
378.636 230.313 li
378.636 233.385 li
.960784 .886274 .905882 rgb
f
345.923 214.52 mo
331.275 206.063 li
331.275 202.991 li
345.923 211.448 li
345.923 214.52 li
f
361.146 223.308 mo
352.373 218.244 li
352.373 215.171 li
361.146 220.236 li
361.146 223.308 li
.772549 .694118 .858823 rgb
f
351.799 217.912 mo
346.589 214.904 li
346.589 211.832 li
351.799 214.84 li
351.799 217.912 li
.960784 .886274 .905882 rgb
f
362.926 220.003 mo
348.277 211.546 li
348.277 208.474 li
362.926 216.931 li
362.926 220.003 li
.772549 .694118 .858823 rgb
f
373.152 225.907 mo
363.719 220.461 li
363.719 217.389 li
373.152 222.835 li
373.152 225.907 li
.960784 .886274 .905882 rgb
f
344.379 209.295 mo
339.169 206.287 li
339.169 203.215 li
344.379 206.223 li
344.379 209.295 li
.305882 .180392 .564706 rgb
f
360.568 240.253 mo
346.589 232.183 li
346.589 229.111 li
360.568 237.181 li
360.568 240.253 li
.960784 .886274 .905882 rgb
f
373.655 247.81 mo
361.146 240.587 li
361.146 237.515 li
373.655 244.738 li
373.655 247.81 li
.305882 .180392 .564706 rgb
f
346.192 231.954 mo
339.168 227.899 li
339.168 224.826 li
346.192 228.882 li
346.192 231.954 li
f
368.002 231.579 mo
353.133 222.994 li
353.133 219.922 li
368.002 228.507 li
368.002 231.579 li
.960784 .886274 .905882 rgb
f
351.991 222.335 mo
346.78 219.327 li
346.78 216.254 li
351.991 219.263 li
351.991 222.335 li
.772549 .694118 .858823 rgb
f
378.636 259.204 mo
361.919 249.552 li
361.919 246.48 li
378.636 256.132 li
378.636 259.204 li
.960784 .886274 .905882 rgb
f
361.146 249.127 mo
352.373 244.062 li
352.373 240.99 li
361.146 246.055 li
361.146 249.127 li
.772549 .694118 .858823 rgb
f
351.799 243.731 mo
346.589 240.723 li
346.589 237.651 li
351.799 240.659 li
351.799 243.731 li
.960784 .886274 .905882 rgb
f
368.002 257.397 mo
353.133 248.813 li
353.133 245.741 li
368.002 254.325 li
368.002 257.397 li
f
351.991 248.154 mo
346.78 245.146 li
346.78 242.073 li
351.991 245.082 li
351.991 248.154 li
.772549 .694118 .858823 rgb
f
374.024 239.378 mo
348.574 224.685 li
348.574 221.612 li
374.024 236.306 li
374.024 239.378 li
.960784 .886274 .905882 rgb
f
347.938 224.317 mo
339.985 219.726 li
339.985 216.654 li
347.939 221.245 li
347.938 224.317 li
.772549 .694118 .858823 rgb
f
315.074 256.144 mo
315.025 256.144 314.976 256.143 314.927 256.141 cv
315.137 182.317 li
315.158 175.028 li
315.168 170.57 312.037 165.141 308.158 162.904 cv
238.714 122.808 li
238.737 114.553 li
312.199 156.968 li
316.078 159.205 319.209 164.633 319.199 169.092 cv
319.179 176.381 li
318.965 251.167 li
318.958 254.323 317.375 256.144 315.074 256.144 cv
.996078 .411765 .4 rgb
f
238.714 122.808 mo
236.509 121.535 li
236.532 113.28 li
238.737 114.553 li
238.714 122.808 li
.964706 .964706 .984314 rgb
f
236.509 121.535 mo
207.086 104.547 li
206.079 103.967 205.121 103.658 204.254 103.596 cv
204.079 103.495 li
204.081 102.627 li
204.082 102.512 204.084 102.398 204.088 102.286 cv
205.132 102.889 li
205.133 99.9053 li
204.711 99.6618 li
204.88 99.3334 205.079 99.0426 205.307 98.7914 cv
207.056 99.8015 li
207.056 97.7538 li
207.282 97.6999 207.517 97.6664 207.761 97.6541 cv
207.761 100.209 li
221.988 108.422 li
221.988 105.438 li
208.562 97.6865 li
209.357 97.787 210.222 98.0894 211.127 98.6111 cv
236.532 113.28 li
236.509 121.535 li
221.763 109.507 mo
221.763 112.49 li
232.166 118.496 li
232.166 115.512 li
221.763 109.507 li
223.047 106.05 mo
223.047 109.033 li
236.038 116.533 li
236.038 113.55 li
223.047 106.05 li
205.752 100.262 mo
205.752 103.246 li
221.217 112.175 li
221.217 109.191 li
205.752 100.262 li
.996078 .411765 .4 rgb
f
232.166 118.496 mo
221.763 112.49 li
221.763 109.507 li
232.166 115.512 li
232.166 118.496 li
.964706 .964706 .984314 rgb
f
205.132 102.889 mo
204.088 102.286 li
204.13 101.249 204.348 100.369 204.711 99.6618 cv
205.133 99.9053 li
205.132 102.889 li
f
221.217 112.175 mo
205.752 103.246 li
205.752 100.262 li
221.217 109.191 li
221.217 112.175 li
.8 .796078 .945098 rgb
f
236.038 116.533 mo
223.047 109.033 li
223.047 106.05 li
236.038 113.55 li
236.038 116.533 li
.964706 .964706 .984314 rgb
f
221.988 108.422 mo
207.761 100.209 li
207.761 97.6541 li
207.832 97.6506 207.903 97.6488 207.975 97.6488 cv
208.166 97.6488 208.362 97.6613 208.562 97.6865 cv
221.988 105.438 li
221.988 108.422 li
f
207.056 99.8015 mo
205.307 98.7914 li
205.78 98.2687 206.373 97.9171 207.056 97.7538 cv
207.056 99.8015 li
.380392 .337255 .678431 rgb
f
204.254 103.596 mo
204.195 103.592 204.137 103.589 204.079 103.587 cv
204.079 103.495 li
204.254 103.596 li
.8 .796078 .945098 rgb
f
311.033 262.08 mo
310.391 262.08 309.693 261.938 308.958 261.643 cv
309.062 261.158 309.117 260.623 309.118 260.043 cv
309.137 253.572 li
311.92 255.178 li
312.995 255.8 314.014 256.111 314.927 256.141 cv
314.924 257.103 li
314.917 260.259 313.333 262.08 311.033 262.08 cv
.996078 .411765 .4 rgb
f
201.039 108.931 mo
200.695 108.839 200.361 108.783 200.04 108.761 cv
200.04 108.563 li
200.04 108.494 200.041 108.424 200.043 108.356 cv
201.039 108.931 li
204.067 107.696 mo
200.617 105.704 li
200.778 105.369 200.971 105.071 201.191 104.812 cv
204.071 106.474 li
204.067 107.696 li
f
204.06 110.401 mo
202.844 109.7 li
202.22 109.34 201.615 109.085 201.039 108.931 cv
200.043 108.356 li
200.069 107.313 200.271 106.424 200.617 105.704 cv
204.067 107.696 li
204.061 109.921 li
204.06 110.401 li
.964706 .964706 .984314 rgb
f
204.071 106.474 mo
201.191 104.812 li
201.872 104.012 202.819 103.585 203.934 103.585 cv
203.982 103.585 204.03 103.586 204.079 103.587 cv
204.071 106.474 li
.8 .796078 .945098 rgb
f
314.927 256.141 mo
314.014 256.111 312.995 255.8 311.92 255.178 cv
309.137 253.572 li
309.329 186.342 li
309.349 179.158 li
309.359 174.764 306.273 169.414 302.451 167.21 cv
238.692 130.397 li
238.714 122.808 li
308.158 162.904 li
312.037 165.141 315.168 170.57 315.158 175.028 cv
315.137 182.317 li
314.927 256.141 li
.996078 .529412 .521569 rgb
f
238.692 130.397 mo
236.487 129.124 li
236.509 121.535 li
238.714 122.808 li
238.692 130.397 li
.972549 .972549 .988235 rgb
f
236.487 129.124 mo
236.038 128.865 li
236.038 126.133 li
223.047 118.634 li
223.047 121.364 li
222.314 120.941 li
222.314 118.211 li
206.078 108.837 li
206.078 111.567 li
205.328 111.133 li
205.328 108.424 li
204.067 107.696 li
204.071 106.474 li
207.056 108.198 li
207.056 105.214 li
204.254 103.596 li
205.121 103.658 206.079 103.967 207.086 104.547 cv
236.509 121.535 li
236.487 129.124 li
217.939 111.497 mo
217.939 114.48 li
232.166 122.695 li
232.166 119.71 li
217.939 111.497 li
207.827 105.659 mo
207.827 108.643 li
216.988 113.931 li
216.988 110.948 li
207.827 105.659 li
.996078 .529412 .521569 rgb
f
236.038 128.865 mo
223.047 121.364 li
223.047 118.634 li
236.038 126.133 li
236.038 128.865 li
.972549 .972549 .988235 rgb
f
222.314 120.941 mo
206.078 111.567 li
206.078 108.837 li
222.314 118.211 li
222.314 120.941 li
f
205.328 111.133 mo
204.06 110.401 li
204.061 109.921 li
204.067 107.696 li
205.328 108.424 li
205.328 111.133 li
f
232.166 122.695 mo
217.939 114.48 li
217.939 111.497 li
232.166 119.71 li
232.166 122.695 li
.505882 .470588 .741176 rgb
f
207.056 108.198 mo
204.071 106.474 li
204.079 103.587 li
204.137 103.589 204.195 103.592 204.254 103.596 cv
207.056 105.214 li
207.056 108.198 li
.839216 .835294 .956863 rgb
f
216.988 113.931 mo
207.827 108.643 li
207.827 105.659 li
216.988 110.948 li
216.988 113.931 li
f
199.684 108.192 mo
197.918 109.219 li
199.177 108.487 200.92 108.59 202.843 109.7 cv
204.608 108.675 li
202.685 107.564 200.942 107.461 199.684 108.192 cv
cp
.956863 .956863 .980392 rgb
f
gsave
199.684 108.192 mo
197.918 109.219 li
199.177 108.487 200.92 108.59 202.843 109.7 cv
204.608 108.675 li
202.685 107.564 200.942 107.461 199.684 108.192 cv
clp
202.843 109.7 mo
204.608 108.675 li
202.685 107.564 200.942 107.461 199.684 108.192 cv
197.918 109.219 li
199.177 108.487 200.92 108.59 202.843 109.7 cv
cp
1 .4 .380392 rgb
f
grestore
307.102 264.48 mo
308.867 263.454 li
310.109 262.732 310.879 261.198 310.885 259.018 cv
309.119 260.043 li
309.113 262.224 308.343 263.758 307.102 264.48 cv
cp
f
gsave
307.102 264.48 mo
308.867 263.454 li
310.109 262.732 310.879 261.198 310.885 259.018 cv
309.119 260.043 li
309.113 262.224 308.343 263.758 307.102 264.48 cv
clp
307.102 264.48 mo
308.867 263.454 li
310.109 262.732 310.879 261.198 310.885 259.018 cv
309.119 260.043 li
309.113 262.224 308.343 263.758 307.102 264.48 cv
cp
f
grestore
309.349 179.158 mo
311.114 178.132 li
311.094 185.323 li
309.328 186.342 li
309.349 179.158 li
cp
1 .4 .380392 rgb
f
311.094 185.323 mo
310.885 259.018 li
309.119 260.043 li
309.328 186.342 li
311.094 185.323 li
cp
.956863 .956863 .980392 rgb
f
302.45 167.208 mo
304.215 166.182 li
204.608 108.675 li
202.843 109.7 li
302.45 167.208 li
cp
1 .4 .380392 rgb
f
309.349 179.158 mo
311.114 178.132 li
311.127 173.74 308.037 168.389 304.215 166.182 cv
302.45 167.208 li
306.272 169.415 309.361 174.766 309.349 179.158 cv
cp
.956863 .956863 .980392 rgb
f
gsave
309.349 179.158 mo
311.114 178.132 li
311.127 173.74 308.037 168.389 304.215 166.182 cv
302.45 167.208 li
306.272 169.415 309.361 174.766 309.349 179.158 cv
clp
309.349 179.158 mo
311.114 178.132 li
311.127 173.74 308.037 168.389 304.215 166.182 cv
302.45 167.208 li
306.272 169.415 309.361 174.766 309.349 179.158 cv
cp
1 .4 .380392 rgb
f
grestore
195.67 194.542 mo
195.655 198.936 198.746 204.281 202.569 206.49 cv
302.175 263.996 li
305.997 266.205 309.108 264.436 309.118 260.043 cv
309.329 186.342 li
309.349 179.158 li
309.359 174.764 306.273 169.414 302.451 167.21 cv
202.844 109.7 li
199.022 107.495 195.911 109.263 195.901 113.657 cv
195.881 120.846 li
195.67 194.542 li
f
195.881 120.846 mo
309.329 186.342 li
309.349 179.158 li
309.359 174.764 306.273 169.414 302.451 167.21 cv
202.844 109.699 li
199.022 107.495 195.911 109.263 195.901 113.657 cv
195.881 120.846 li
cp
.996078 .262745 .25098 rgb
f
235.316 166.351 mo
235.315 156.584 242.11 152.589 250.491 157.428 cv
258.872 162.267 265.666 174.106 265.666 183.873 cv
265.666 193.64 258.871 197.634 250.49 192.795 cv
242.109 187.957 235.315 176.117 235.316 166.351 cv
cp
.227451 .172549 .6 rgb
f
245.787 162.631 mo
245.787 165.658 247.893 169.327 250.491 170.827 cv
253.089 172.327 255.195 171.089 255.195 168.062 cv
255.195 165.035 253.089 161.365 250.491 159.865 cv
247.893 158.365 245.787 159.604 245.787 162.631 cv
cp
1 1 1 rgb
f
243.128 183.687 mo
243.129 174.64 li
243.128 170.686 245.905 169.053 249.298 171.013 cv
251.683 172.39 li
255.077 174.349 257.853 179.187 257.853 183.141 cv
257.853 192.188 li
243.128 183.687 li
cp
f
249.494 171.126 mo
251.488 172.277 li
249.494 171.126 li
cp
.74902 .745098 .929412 rgb
f
226.824 191.011 mo
274.156 218.338 li
274.156 210.372 li
226.825 183.045 li
226.824 191.011 li
cp
1 1 1 rgb
f
236.476 211.718 mo
259.05 224.75 li
259.05 231.291 li
236.476 218.258 li
236.476 211.718 li
cp
.94902 .168627 .219608 rgb
f
226.824 203.355 mo
274.156 230.681 li
274.156 222.715 li
226.824 195.389 li
226.824 203.355 li
cp
1 1 1 rgb
f
256.194 218.01 mo
255.702 218.139 li
254.994 216.453 li
254.262 217.339 li
253.774 216.631 li
254.553 215.849 li
253.345 214.739 li
253.526 214.154 li
254.695 215.328 li
254.656 213.721 li
255.258 214.069 li
255.222 215.609 li
256.41 215.787 li
256.591 216.576 li
255.403 216.299 li
256.194 218.01 li
cp
.94902 .168627 .219608 rgb
f
252.724 216.006 mo
252.232 216.136 li
251.524 214.45 li
250.792 215.336 li
250.304 214.627 li
251.083 213.846 li
249.876 212.736 li
250.057 212.151 li
251.225 213.324 li
251.186 211.718 li
251.788 212.065 li
251.752 213.606 li
252.94 213.783 li
253.121 214.573 li
251.933 214.296 li
252.724 216.006 li
cp
f
249.254 214.003 mo
248.762 214.132 li
248.054 212.447 li
247.322 213.333 li
246.834 212.624 li
247.613 211.843 li
246.406 210.732 li
246.586 210.147 li
247.755 211.321 li
247.716 209.715 li
248.318 210.062 li
248.282 211.603 li
249.47 211.78 li
249.651 212.57 li
248.463 212.292 li
249.254 214.003 li
cp
f
245.784 211.999 mo
245.292 212.129 li
244.584 210.444 li
243.852 211.33 li
243.365 210.621 li
244.144 209.839 li
242.936 208.729 li
243.117 208.144 li
244.285 209.318 li
244.246 207.711 li
244.848 208.059 li
244.812 209.599 li
246 209.777 li
246.182 210.567 li
244.993 210.289 li
245.784 211.999 li
cp
f
242.314 209.996 mo
241.822 210.125 li
241.114 208.44 li
240.382 209.326 li
239.894 208.617 li
240.673 207.836 li
239.466 206.726 li
239.647 206.141 li
240.815 207.314 li
240.776 205.708 li
241.378 206.055 li
241.342 207.596 li
242.531 207.774 li
242.711 208.563 li
241.523 208.286 li
242.314 209.996 li
cp
f
294.921 170.839 mo
294.921 171.78 294.26 172.161 293.446 171.691 cv
292.631 171.22 291.97 170.076 291.97 169.135 cv
291.97 168.195 292.631 167.813 293.446 168.284 cv
294.261 168.754 294.921 169.898 294.921 170.839 cv
cp
.956863 .956863 .980392 rgb
f
299.568 173.522 mo
299.568 174.462 298.908 174.844 298.093 174.374 cv
297.278 173.903 296.617 172.759 296.617 171.818 cv
296.617 170.877 297.278 170.496 298.093 170.967 cv
298.908 171.437 299.568 172.581 299.568 173.522 cv
cp
f
304.215 176.205 mo
304.215 177.146 303.555 177.527 302.74 177.057 cv
301.925 176.586 301.264 175.442 301.264 174.501 cv
301.264 173.56 301.925 173.179 302.74 173.649 cv
303.555 174.12 304.215 175.264 304.215 176.205 cv
cp
f
123.568 113.257 mo
125.78 111.971 li
126.589 111.501 127.71 111.567 128.948 112.281 cv
126.736 113.567 li
125.498 112.852 124.378 112.786 123.568 113.257 cv
cp
f
gsave
123.568 113.257 mo
125.78 111.971 li
126.589 111.501 127.71 111.567 128.948 112.281 cv
126.736 113.567 li
125.498 112.852 124.378 112.786 123.568 113.257 cv
clp
123.568 113.257 mo
125.78 111.971 li
126.589 111.501 127.71 111.567 128.948 112.281 cv
126.736 113.567 li
125.498 112.852 124.378 112.786 123.568 113.257 cv
cp
f
grestore
215.657 235.543 mo
213.445 236.829 li
214.244 236.365 214.74 235.377 214.744 233.973 cv
216.955 232.688 li
216.952 234.092 216.456 235.079 215.657 235.543 cv
cp
f
gsave
215.657 235.543 mo
213.445 236.829 li
214.244 236.365 214.74 235.377 214.744 233.973 cv
216.955 232.688 li
216.952 234.092 216.456 235.079 215.657 235.543 cv
clp
214.744 233.973 mo
216.955 232.688 li
216.952 234.092 216.456 235.079 215.657 235.543 cv
213.445 236.829 li
214.244 236.365 214.74 235.377 214.744 233.973 cv
cp
f
grestore
214.926 169.608 mo
217.138 168.322 li
216.955 232.688 li
214.744 233.973 li
214.926 169.608 li
cp
f
126.736 113.567 mo
128.948 112.281 li
212.7 160.635 li
210.488 161.921 li
126.736 113.567 li
cp
f
210.488 161.921 mo
212.7 160.635 li
215.157 162.054 217.146 165.5 217.138 168.322 cv
214.926 169.608 li
214.934 166.785 212.945 163.339 210.488 161.921 cv
cp
f
gsave
210.488 161.921 mo
212.7 160.635 li
215.157 162.054 217.146 165.5 217.138 168.322 cv
214.926 169.608 li
214.934 166.785 212.945 163.339 210.488 161.921 cv
clp
210.488 161.921 mo
212.7 160.635 li
215.157 162.054 217.146 165.5 217.138 168.322 cv
214.926 169.608 li
214.934 166.785 212.945 163.339 210.488 161.921 cv
cp
f
grestore
214.926 169.608 mo
214.934 166.785 212.945 163.339 210.488 161.921 cv
126.736 113.567 li
124.275 112.146 122.277 113.29 122.269 116.113 cv
122.26 119.231 li
214.917 172.728 li
214.926 169.608 li
cp
.760784 .101961 .0784314 rgb
f
122.26 119.231 mo
122.086 180.478 li
122.079 183.306 124.064 186.744 126.525 188.165 cv
210.277 236.519 li
212.733 237.937 214.735 236.801 214.744 233.973 cv
214.917 172.728 li
122.26 119.231 li
.996078 .262745 .25098 rgb
f
183.351 165.134 mo
172.639 158.95 li
172.639 155.878 li
183.351 162.062 li
183.351 165.134 li
.960784 .886274 .905882 rgb
f
132.929 136.024 mo
129.161 133.848 li
129.161 130.776 li
132.929 132.952 li
132.929 136.024 li
f
155.516 149.064 mo
147.774 144.595 li
147.774 141.522 li
155.516 145.992 li
155.516 149.064 li
f
143.443 142.094 mo
133.438 136.318 li
133.438 133.245 li
143.443 139.022 li
143.443 142.094 li
f
147.088 144.199 mo
143.999 142.415 li
143.999 139.343 li
147.088 141.126 li
147.088 144.199 li
.305882 .180392 .564706 rgb
f
172.078 158.626 mo
156.154 149.433 li
156.154 146.361 li
172.078 155.554 li
172.078 158.626 li
1 .384314 .368627 rgb
f
139.223 169.914 mo
124.289 161.293 li
124.289 158.221 li
139.223 166.842 li
139.223 169.914 li
.960784 .886274 .905882 rgb
f
161.81 182.955 mo
154.068 178.485 li
154.068 175.413 li
161.81 179.883 li
161.81 182.955 li
f
149.736 175.984 mo
139.731 170.208 li
139.731 167.136 li
149.736 172.912 li
149.736 175.984 li
f
139.223 186.36 mo
130.502 181.326 li
130.502 178.254 li
139.223 183.289 li
139.223 186.36 li
f
129.895 180.976 mo
124.289 177.739 li
124.289 174.667 li
129.895 177.904 li
129.895 180.976 li
f
149.736 192.43 mo
139.731 186.654 li
139.731 183.582 li
149.736 189.358 li
149.736 192.43 li
f
153.382 178.089 mo
150.293 176.306 li
150.293 173.233 li
153.382 175.017 li
153.382 178.089 li
.305882 .180392 .564706 rgb
f
178.372 192.516 mo
162.448 183.323 li
162.448 180.251 li
178.372 189.444 li
178.372 192.516 li
.960784 .886274 .905882 rgb
f
187.337 163.113 mo
173.962 155.391 li
173.962 152.319 li
187.337 160.041 li
187.337 163.113 li
f
172.871 154.762 mo
158.223 146.305 li
158.223 143.232 li
172.871 151.689 li
172.871 154.762 li
f
140.495 136.07 mo
125.846 127.613 li
125.846 124.54 li
140.495 132.998 li
140.495 136.07 li
f
157.497 145.886 mo
146.944 139.793 li
146.944 136.721 li
157.497 142.813 li
157.497 145.886 li
.305882 .180392 .564706 rgb
f
146.371 139.462 mo
141.16 136.454 li
141.16 133.382 li
146.371 136.39 li
146.371 139.462 li
.960784 .886274 .905882 rgb
f
140.495 174.894 mo
125.846 166.437 li
125.846 163.364 li
140.495 171.822 li
140.495 174.894 li
f
157.497 184.71 mo
146.944 178.618 li
146.944 175.546 li
157.497 181.638 li
157.497 184.71 li
.305882 .180392 .564706 rgb
f
159.743 198.099 mo
150.44 192.728 li
150.44 189.656 li
159.743 195.027 li
159.743 198.099 li
f
146.371 178.287 mo
141.16 175.278 li
141.16 172.206 li
146.371 175.214 li
146.371 178.287 li
.960784 .886274 .905882 rgb
f
187.337 188.946 mo
173.961 181.224 li
173.961 178.152 li
187.337 185.874 li
187.337 188.946 li
f
136.512 159.807 mo
123.821 152.479 li
123.821 149.407 li
136.512 156.734 li
136.512 159.807 li
f
157.794 171.889 mo
148.361 166.443 li
148.361 163.371 li
157.794 168.817 li
157.794 171.889 li
f
147.088 165.709 mo
143.999 163.925 li
143.999 160.853 li
147.088 162.636 li
147.088 165.709 li
.305882 .180392 .564706 rgb
f
173.207 180.788 mo
158.558 172.331 li
158.558 169.259 li
173.207 177.716 li
173.207 180.788 li
1 .384314 .368627 rgb
f
142.988 163.545 mo
137.777 160.537 li
137.777 157.465 li
142.988 160.473 li
142.988 163.545 li
.960784 .886274 .905882 rgb
f
136.512 189.37 mo
123.821 182.043 li
123.821 178.971 li
136.512 186.298 li
136.512 189.37 li
.772549 .694118 .858823 rgb
f
157.794 201.453 mo
148.361 196.007 li
148.361 192.935 li
157.794 198.381 li
157.794 201.453 li
.960784 .886274 .905882 rgb
f
147.088 195.272 mo
143.999 193.489 li
143.999 190.417 li
147.088 192.2 li
147.088 195.272 li
.305882 .180392 .564706 rgb
f
142.988 193.108 mo
137.777 190.1 li
137.777 187.028 li
142.988 190.036 li
142.988 193.108 li
.960784 .886274 .905882 rgb
f
196.041 172.392 mo
184.142 165.521 li
184.142 162.449 li
196.041 169.32 li
196.041 172.392 li
.772549 .694118 .858823 rgb
f
202.517 176.13 mo
197.306 173.122 li
197.306 170.05 li
202.517 173.058 li
202.517 176.13 li
.960784 .886274 .905882 rgb
f
187.337 176.07 mo
173.962 168.348 li
173.962 165.276 li
187.337 172.998 li
187.337 176.07 li
f
173.207 167.912 mo
156.49 158.261 li
156.49 155.189 li
173.207 164.84 li
173.207 167.912 li
f
140.495 149.047 mo
125.846 140.59 li
125.846 137.518 li
140.495 145.975 li
140.495 149.047 li
f
155.717 157.836 mo
146.944 152.771 li
146.944 149.699 li
155.717 154.764 li
155.717 157.836 li
f
146.371 152.439 mo
141.16 149.432 li
141.16 146.359 li
146.371 149.367 li
146.371 152.439 li
f
183.351 169.457 mo
168.702 161 li
168.702 157.928 li
183.351 166.384 li
183.351 169.457 li
.305882 .180392 .564706 rgb
f
157.497 154.531 mo
142.849 146.073 li
142.849 143.001 li
157.497 151.458 li
157.497 154.531 li
1 .384314 .368627 rgb
f
167.723 160.435 mo
158.29 154.988 li
158.29 151.916 li
167.723 157.363 li
167.723 160.435 li
.772549 .694118 .858823 rgb
f
138.95 143.822 mo
133.74 140.814 li
133.74 137.742 li
138.95 140.75 li
138.95 143.822 li
.305882 .180392 .564706 rgb
f
183.35 191.068 mo
168.702 182.611 li
168.702 179.539 li
183.35 187.996 li
183.35 191.068 li
.960784 .886274 .905882 rgb
f
155.139 174.781 mo
141.16 166.71 li
141.16 163.638 li
155.139 171.709 li
155.139 174.781 li
f
168.227 182.337 mo
155.717 175.115 li
155.717 172.043 li
168.227 179.265 li
168.227 182.337 li
.305882 .180392 .564706 rgb
f
140.763 166.481 mo
133.739 162.426 li
133.739 159.354 li
140.763 163.409 li
140.763 166.481 li
.772549 .694118 .858823 rgb
f
162.574 166.106 mo
147.704 157.521 li
147.704 154.449 li
162.574 163.034 li
162.574 166.106 li
.960784 .886274 .905882 rgb
f
176.455 174.12 mo
163.147 166.437 li
163.147 163.364 li
176.455 171.048 li
176.455 174.12 li
.772549 .694118 .858823 rgb
f
212.773 195.088 mo
206.549 191.495 li
206.549 188.423 li
212.773 192.016 li
212.773 195.088 li
1 .384314 .368627 rgb
f
205.877 191.107 mo
192.569 183.424 li
192.569 180.351 li
205.877 188.034 li
205.877 191.107 li
.960784 .886274 .905882 rgb
f
146.562 156.862 mo
141.352 153.854 li
141.352 150.782 li
146.562 153.79 li
146.562 156.862 li
f
162.574 191.695 mo
147.704 183.11 li
147.704 180.038 li
162.574 188.623 li
162.574 191.695 li
.772549 .694118 .858823 rgb
f
146.562 182.451 mo
141.352 179.443 li
141.352 176.37 li
146.562 179.379 li
146.562 182.451 li
.960784 .886274 .905882 rgb
f
178.667 179.72 mo
169.299 174.311 li
169.299 171.239 li
178.667 176.647 li
178.667 179.72 li
1 .384314 .368627 rgb
f
168.595 173.905 mo
143.145 159.212 li
143.145 156.14 li
168.595 170.833 li
168.595 173.905 li
.772549 .694118 .858823 rgb
f
213.388 178.141 mo
187.938 163.448 li
187.938 160.376 li
213.388 175.069 li
213.388 178.141 li
f
169.875 208.665 mo
159.163 202.481 li
159.163 199.409 li
169.875 205.593 li
169.875 208.665 li
f
173.861 206.243 mo
160.486 198.521 li
160.486 195.448 li
173.861 203.171 li
173.861 206.243 li
.960784 .886274 .905882 rgb
f
182.565 215.922 mo
170.666 209.052 li
170.666 205.979 li
182.565 212.85 li
182.565 215.922 li
f
189.041 219.661 mo
183.83 216.652 li
183.831 213.58 li
189.041 216.588 li
189.041 219.661 li
f
199.911 221.271 mo
174.462 206.578 li
174.462 203.505 li
199.911 218.198 li
199.911 221.271 li
f
142.51 158.845 mo
134.556 154.253 li
134.556 151.181 li
142.51 155.773 li
142.51 158.845 li
1 .384314 .368627 rgb
f
168.595 199.094 mo
143.145 184.401 li
143.145 181.329 li
168.595 196.022 li
168.595 199.094 li
.960784 .886274 .905882 rgb
f
142.51 184.034 mo
134.556 179.442 li
134.556 176.37 li
142.51 180.962 li
142.51 184.034 li
1 .384314 .368627 rgb
f
191.996 183.092 mo
177.127 174.508 li
177.127 171.436 li
191.996 180.02 li
191.996 183.092 li
.960784 .886274 .905882 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (2007.i039.019.P.m004.c33.cyber security spyware data protection isometric set-18.eps)
%%CreationDate: 2/26/2021 12:20 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kl!#+=mdU,L50s$HVE8W<N'3(^5[+jf-nQ,?FC46n%$6XS=jB%@++A_:.s[P&(1:fO:6muNpU$SQ[O"SP,YRjEH\H(8;5lJ!
%$I-=e/Ac5X>&nHSRh?6\Un26!nXk1&SlZGs::d=AB";!()Vt@8ZQ+*K)pMQmh-%!@IYJ;I2`u^g6L.!<X#9p_$FR*c!T2";HcMst
%/LiX4orr6-3ElKSA+AY>*V^ClJ3OE$45R+BkV2:F@5cKA)#%F=?k*K>nRph06$-/pFPC65g2).^Le[Kq^?k\MC5)3\kR;E^57?tS
%<K'\j?EG`u[$"JZA+u[N>s,Rh=pXAKDtu'u&V"Wi8,bu&%+'Ki#l[&&2Z+6f9J+;*jZ*/773$s&#/4rb*dgZ3(War'#[%_&'GP@B
%>P54KdCFYDYh;lQDq2^B,aUE^?I"2L)8gt$J(7nVjcYTd_K4'G_6,qmEuF!RFW?S9(]pZU^lJNVlAGsq7"874^K.H!;-8\/M@9"B
%mU>e'YhH78LtW2`d&TV&2iVPgd-q2iO:/SQX@+q57.U"K/JKaE:e1Gc=r`7`Z`"8UgoU0frDkIeld&o1l9!tN#e?5!62"JZj/DcS
%9U'cAWSk=i7<:;9hgHW-m5fQ]iAX)_e^sb/-eO.@SDh?Q!se;&X(Tu&b*(pl9>9^Bk2'iS.g^,MC2s'95U4=/rrW.kRP!ISm7%OJ
%I6ruRFq#n*F1[2eoOal(dB)@PFR[l`a@?>#Vq*t/T-h=/c_-2&9Aq&pa01s$Kk^]Oro65HjCeC8^Xe#J\(])5CV+T?r8U!Lq+C6(
%Z=$l'aHE/ZZkgT`qVPO[D*>Poq]Llk(m5@SFL1LM<,8q$Nb,gZ4mpq=7bG/f#B>M\eN`#V&C=%\`.h.`IB#J>D-KlJ.s_eE#5Z*/
%JalU+Tm!GqTe6I!Cj5no[P-Rjm96V>P[:\eMuJa>lgaHglB]a$qc(pLme&0)e80b"=00*!n*g^.JZ@HcC56A.Sssr7+*Pt=hhW29
%:/"dcCU.W`O:mk6QlBJ9<]t5RXn-;\.^XPnF6fdXXMql6pcKV>r(MKkhb;!?.&cOQ?:3^.4K<-M3$9V/q4/rU/cO>"Ol4,[)FY<O
%ZVgr2]gT$,CifAQ#Vrbc4\<VOLHk)Pc!%MRO*`f/q]LaGE\0?Mg$(u*']!2#9PtQ(qEKl%Uqep`d^Vf`ANR"P^eCsBHe!"uaC_d8
%6DN$k4:bYYTTF&:QuqR5_k(K.=\DE>mUjD'+!//P!m@s/#0LuaZaBkL^#.Xk"kJJ(\QCGY0bLjD?LuRE[IACRepn9tJ,o!%8Zs(a
%,$T_Tq0"h>Cf<O$egg'c+^.]XGoQISpd=t[q\.A3%i:%=hg9#g+$ulbZi3FDL:*UfoiJQL4hmdq,HT'h0EK^AEN5-]O/cjUh%\N*
%L6FqO%5NF2^uOnJ7c@te'RideL&CXa^=G=UO3.'n<%BD:_+'VTVCCj\_]uo;Vc0;$KGTmT\\?XQktmd+S_3>;:V_$fPb[QD,JS@Q
%=lR^SL=#Ul[%gC"Q:<OmL6Fs%d6-br_)f.KV2f5E6&.;0gXgaLaO0=YC@pe<j_jj+.\t;.'AE\2[Wal<-XeAP[A+g,OM!Ds_Ee!_
%b2tGfaAj'^Y9]m<l]d,YorH\Q,"mUOolWe`>ENm7;li^AFLlU$[;hVIp$LDaC/Tj-2LFh3ZmDINBeW/5d)>$7pg>-$Q),%Y1!N$%
%/([R)\JUl@X-kIsFi\*rgiT5D/$>D3\T7]hY2!_Q"QQubW`e_"cJ1s$11tK`aJI6>1[*&Z#_Zd'>is4@^0KgDA\QqQ\j,UFq/WHr
%R2K@LM9^Z2QO\l:pZDn2T2G"F4KLC>qPOkfB$oLu)iS`Vs4QdN>0Z5*[o/1aXGSjh<*k./Hr>3[e9[JK<57\7:!sC$$@A==2/EsZ
%a)8KUjqR/_8YZkJ'3'g&E(I;m<@547V%\ohf3Z_Ndn\E+65jH<f(T;b1F_ECZlUrkY:Ss%r]7gLDs?"hIb)rc#$&9,nQ^r]p.hf>
%)O@/9EgR?1^?1hUpan<V>CWi#RG?"qpbmiNNC`eY@=+d&k]F^3)Q\\.1,8^noE]@6h.ejB)^1SrAO[]#--s"uOD*@]@:H-$A'4aY
%E9^Aqn_Y$or-.-Y`dY8JkjG5S$8%9V)M^paGEgo;P=EmR*=:LTcnY2@"0!l)s(r]fG"t&p9`q3D(+q3qk01f[7T4,>?8uY<E$g?-
%RWZ+kLsq-345K4a7cRfK:uR/rCA5@^FjlkucIC-aK:QQ<GJu;.QVT%'e.jnGA=MUt&V&O.esf'RB-jHc2ensR8BI:,G1$cPI'1Ll
%B9?d$r)7bQag-:H_e.n25$eS4VEM#KC.Y9bW0uO,hInf_Km"1/2oS'g<jsdoFW2TmU(4aT<iWhi'[[@;[H*T&?BR6[Icc$SR\df.
%B$Or9XN*Pq#<=\hZe95ej/mn^2Q8-I6S^MWokJ:aPh/%J"/[O>actDlj#tUP5&@71Z"Y$C'^%'S,Ms05dMS=$cYsZd*#?PliiK,G
%oeZm5XN:6CfCl+5[@Y4grY4_nqmHB$.p93an]^b3"de?7QjP!RH,>7#'%/Jao]KB$a4?Z1X_)229S:R=+*AR!3'l:Y%i^M,Fr8cJ
%Wt/nSe:t[m.K&`c%bGTYhsa\o]\=.$SQ7<n8,2`"DV1E"/Z0XVG:AR+B#<"g?>[!&IO'>+?B;>c0o^U])c!e1SGGAu78.QAp8EK9
%)T>;53;G,X<D$`3oinH(R!.^b;bT69pO/in(!M]fVa+kNYLtp1R>c5kXjtj2m*mAkTT*P."Y*rkgoL1P2ukiK1)j!r/akHi`]Ut-
%F&S'72(:@seOC7Ma=Ap![5'p]R0'"Vl(jCJCO_%&;lgMn\o-.qW>0!f8YOXoKTD?aO=HMF^=\fBN8g]J';?0^;_sEJe=7Kg.80qe
%H1^$u`:U6?U]0scCc\,qS+SV-O_?X-f/A=`3/PpYRBijK6p6I4;6?bM1De(hK/pH/D2Dnn-r])tQ00S0,n2W9'#)FB;5Pd+Ru4PL
%?IlGVPSqS28TRDT%&Tcs4)Y<uX_c8)ehc?s-n.j5)9G<=`Dk<YM_ZBDk<.k#Ud6?N7EKRIrf,_\b=.gS?g!j\PkiNl8Ym#sIZKqq
%>a.(db_ehPla\FCemd@0@pX4Rb4CjUOp7=WOnsRuP\(\PC/V1q%CF,#f5e;QcV'P^Q*&!k>u!+9$Sg489QC>YFamhKqm\'BKK9$e
%,=JlJJ#/"sAN0Q]r5,bMH[PXD\'/B/m3[/(ch(BJ&nH;?dqb@XRgHd:f`juZY0E<D(?)!"=tS3<s4^^/1Y1^2=Ne'TVUb[D[@2@b
%F?G-Gm:de:$53:)OmGa^!+o\^F"q-l(o8?@-:XC?p$muR>@*0i5)JntWZ43tmA-g<:_*BQ^SBM3/c9nl%p&j."JP1!TbKn08+l#@
%f.YA%jXo"P,s&.d/q8,P0<M8iL#$4<4&:gDP<s+]n"h1AXuMf"MeP4(]UIu/<3hErZAWGrH*"0T1hQbWQgrja1)Z?iO]?.#`.PgA
%$iX@aTAe[-pqReD=ifYdOIP&#12Wo9I(ee=00$P,aj3]Sd.kg1nY\b;Ikcq466=,GqO,OVQcQ(hQtb0uj^u3Vm""E5f=O^PrMDcJ
%Ua"I<fZg3-8.k4#\1D*$/d=5&R+[l/LWe+rqJ^C#kQRctiNdO04riAB?AC?upL8_(2f)R-kOkdCAd=a?h(c=Z5P9B`br1iTg*=X[
%q;PXqP-]BEEPo2TR:MtldP!]^S\=XPJ+uXMm/2'2eS]R0S"9RSn6BU4c@<0U8[@sFa^LI*s";UBq6."DnH>65X!oXBm*'ZG"$fd+
%0?MLeZSUM*bkK+8BaTd*H@"<26lXATfJALD4>uhk8MSuGW)d^5FZkVilIgG!)D%0D!mVJs%Xqhq/k&sgE1$2CqnCVpZPl`?nm;2-
%Ctl=1of&L`h)F^_XV1(_g6>KF2")/g=bJ>aOA.JsQ9F&n7EDb?fl(q=$>VO-P>+oA9_p3=BC.*^XFc]SXhrpp4_q5"=`)`amV4h`
%X>\gAj3i#9/:KL6.sFlZ1SYldQ87<-[%5hRbZ!F6rjQ)"FYA)=Ytn<^Q4jbW'WWDhZ%IpRU:D^Al"KE3%6]nk&'ARW,:Zjc@B+qj
%SQ8\o0;Uh?b(0kq#,L0<L%u/ZZ,9q:C9^[Ch>Fkgmd5uF9YQYn?F%@>(3mC#G\2Mn/F\f+?F%Ais&S&HKiqsE77CWQr$;``9X+hk
%"^Z'ZGaY'OS=_p9W<j[f.YhZ6,=lm%dDYsIdbZCnP(eiAWL7AqZACCS"AJ]('59(6a=`sL%NMdt-74CJq@("#h]9c4PfJGnp$R92
%]enT;D2qPrd&)54b\gmYNm0;jM.qi+`uDTo;nkVqhb[osDp3*,R]dZtDQp:sm7Z."99Wi6r:][>H!"e[Ps&%:^N)onHr]:+\6CJa
%b+BT9@-5Yc;`kas8b#]XBJ_0h8qY#mR^3N[^Sb@"VI"U,:JX&L(T!fG<DojX=d/YEJ`Hd)&+D*M4.jg6[&qQb5*habBQN@1&_Fa@
%4bs#:Xea+o;XGg=h[q4F1?VNG1oRqCUsN6g?4(f&fMWA>V:$NL`i,H$9q0'UZHJQ?35uAQ!e(p*Qm&)6k2R;+%cS=>E6.#U;sW\n
%R`oDaN%BuDD(Cgh0sWdYN5RHt6gKK+EiUtqC``M\drnj]L:(+-C7;MGq7UPM'6cYQPfj#F2U>oq8.d#5R<rchc,4G,>J;Z\g#kM.
%];'*m<=*eTlU`7dk0fhjYJ(6Np1GkVbf5i5b0HinWTPPn7&>)!UDGf1C#%'dp<tQrfaZ9tL6u7'P[--<O'h:Hh(s-Z51r(dA'oJk
%GgDJB9C^Y3\!b6BDb^e#1e,D'>aCVoSiU^IlY/7]d4D-Q0qP&Y9s+pD=5`8?f08HLJ88aQ.%&h>P/[Np@/3tU2do0B[5TW,ao\DR
%]`*1Kpe$7abTqS46"\9g^!`Q-rQ/Bf(4CR5FanS-0P:Uth<W:j=Z]ADKX+_XCrG=3,TG!9.,Or)@e#Yh:GZ?1oAq=&__Z3`oB%fH
%D@i;]S'/IT6#SB06'?M7oAIm<@<u&<ccqJ7Qf8X:)>*)i@$S9DR6-bGF.#*K/1d2NQbijqk/j/eL!7cNF%^$R*4g5_9YX6pY1]nH
%[DOg??KTSYK0M;5Nu"NFV6^OI-L[b-/>/VtBAdD$?A\#tbj8Ym)8'$[K#l2to(luOaI#XT\d%;sHrYIRU_]7L<\4Vm[_d'mqf=&`
%BW]b^=\BF)<p_6QG:=VpSf'O\M9i8Z;$e+Y-DbDDU78o@n]fPg3R\=/AfXQAX*)@'Q5fFlgLg>r]G.i)W+RM;RLSeYG8`,Cn/IR#
%\A-<fQ+>Mr_r+0hBb;#p_(SIh^XOoQ*L=TBAmA^/8R[l.?`):fT8)GU/R&+t1C*W_cq+*dmEFoiko\WMo8?BA'Y![%2>Ab7Gh?[k
%0brrK:ab4OX7]f!j3>*qV!nt#cNN[s)41.uX9onT-f'@?i]&;0Pe`=5g1Sj&Rs03,ZOE_b1:Y`$]JF%<UbK)3i]$@hL;,Jur).A-
%HFB;m\!i<?7L1>Jac)t<-lSjXPhAJ)pd>UW%*u:X1j:,@GtUuJOkGg66!:F=N0`8<ASoZ1^daMsY8#!t`F[ZAo\n_%2\)29-M69T
%:,`Ys2"/Bd'lVa-G0fJOWWrrEC55J)d%10lESck?CXqj%=M<4<bVmKj<bTsr3MtKfZd!JNeficfB>Hm%JIOC5L6Cq`ZbJHE@K\]<
%CiER;T(2$)fiaB@c=/+\@LhkrRBK]2YIuQ"(=/B2qHfo,I.Jr%B6MudGs-iK;VZ%A'0;Xc[e_fFV\jG;[c5=a6Db^IJtAV29kt-N
%h74^UD5KJ.>-knhQ)m]hR[>boBO7n;(k5!0,\:ZOn&SU'@15m/,oKAIE(e4GU.c4dBCB3-LRk75cgW4oF-g,*/,V:-B-]F?5Gqg6
%i)'P.d*^LKVOi]uOr7AkWFn)OjrrHH[&;0&8l8;BCJm"\#5,VXm.[DT]2WWC0`EeD/)1S0d]Dk16mnt!,/c,GI[`7nf[kGdg8*56
%PRhA(NQ`'"jd9U`o?LrP)4O?hc,ff5Zbf+o6\LAM-,E+=YgGI*o9-s)o).9s5&OV=0_J;(Ri.eR@7SL0R]Ig+Kg%u.N_"H=f4p_/
%o;heXV-&a*`H"X.\D\Z'p[[(W52L*Til@,`bX9bIX(Gi`H4b?0/Lbof3ib0_:]C.8X-WO>bKolt4nsA"]OV'Wb#b#ZO]?)h3p5(3
%fEfft[^F_i^`9QTd#t#=KXG"V9^[D1ku"ci>DBn>jms'+00cgaC-mG=s)c82g*Q>X$ne%.6^9]#?&R@Dp^dC$R4n3Y:Hsr5jkJTY
%]F_^XiqTh,r2Uui6^_3#2jt26;!J/G]E0^J+q"bBcR<\</9ZVOUQRa.[BOWl<Z@?@;GsTO81^f"Mke%1fF?"?2ud'Md0a<[>4*?0
%h7SQHrXos\eFqUrn`#'[#+@B\#>r#<XB?.-b(bd17afocT7?dZ[U-aFhZ<Ee/?Q<qIJRDWPs=3E"8i`0X^M/WIhkTIK$dXNS1lop
%VmX/Z[_!dS.b(1^jVh<-NJ$Gg*sJ);"_6gh(RNJGC,@i;NCpD.]aTVo0E4BjJSY3gPf!tD_X.B;Emu6jG:`N?qLS*+G/uBsYc7EL
%ZNC\%">k'([GH[0iu9Z]).]1\$A.b$q#]b"CZ.u8gAEaAlr>NVcV!e]'7=Han#5$ZaiG"c$\]h51p\tiSS@=^9A`E9s3B>2b'&5Q
%\tQFk!QgRCVJJ&"HZPB1E*P`Vq@,EZbS:>eD;0X-$SrZ:@\@Y"0^?1Lr8;3gEMf[a=]&,PiL-Fc'Qp:ODm$$!FaVp[@1#bG:t.MO
%B>2a<b[HI*G.*[I[^f2%LO.^ks(+5Qe(ML0ZNHZ\lqD&)3rA&#gZLJ;6teT"=hl:EjBRI"9LPQVDEFf+R8!aTA84/(e%`&_M4MUN
%1,YW%l!I99N!?^D$u+V^68NtQ&qWW)?Jn`o$6^AtE+)Z1;aPG8".GbnAkMs0PdZc)m7_5,9)BEh2PH@lGR3s[6R1=p!^]b2]0=<$
%LgLNg>NfhA?"%dNn3<3fm7_6o]$bcW/0L*)m7_5,ViA%!:%O"dbnRSGH'tDP'Qp:OJ&T!BD35s3@u_'l>=:e_@:_7iT<P;3*PJnL
%m;\)@&H"JFLh&RD2fuJ]DS48:G,DT%SXo$3R:<8n_<Js#40u7LSXo$39P;ZkA'GNZ2qH[8a^_3S1S+J;kp!8TdmZf8F8Wja!NL%a
%i!sluNejbb-Rt-N4J2LR)Kr!^InO4^RDR5`G,DK"Kfr@>2*X(V9OWQ`Qdn-/$9M2=^S%g;H^Z]Ar@_mLXDB64d[?EH@b3EW=S%0o
%9m&?#17b!#lqD'L87uRZlXe64=-ThN-$NnB2H.'!?m+3T8%9rg[f_E\Or\S;O;uMWY&3/`f"5HNEMfU_=\X6l(2_@HFJbpb-/'>X
%/rg#SQTIdG=U$ABS?Ijl"!=Sb1Gt`&l/,=d/.4CLC-#;BfqI=4YgWI-F>GKX?5q(pFJblj/U^PL9osZ]l38:AEK@nV*HCB-0^<rC
%5gYc4lbPg0pG+UsWTdbke"3,\MJ$Zb;q"n;`lp0gr8;[,SXgcKAi`$&fi]39CiS#'i,iI_SJ@#p$9M2=R?9XRN&<gZh,%_dj(185
%e(L/7cA_+Xii;gjl"1:W-S115A-tCsfU7jbF,Vt@38I\LB7Z1=B4j7e1U:YOX6'Yb)_::A#/*]=B*p_!fX&Oso7PL$'fPZhHTj3=
%SLNnV%=8k8Bmt$4TpcJHXBHrLe!ZZMD?uX6?CDt+DPj;!j(-__VPZ.,SXhL\*+R5(:,g_VI\sD,Q(=o@?a-VG?usiI2K]jXQ":uW
%W3l@&WpNJQB3P.UZuhT?P,[\>9kTdblnR)hi,iJ"SL&o!3]kgDREhBa`gS!>DQ:%L/$:[nSZ1s,)DV]51d<tU<(glEN1$!WZui1A
%B7ZE3#H&MUl0O.d9M9#%3n)M5_+XBPdg`^lk@LXCR@;FNoZbpnW(jXI)e728FTN1H2%@]r@Y@oL(ZUB>`Crp;>5C1b[%A5bR?l.*
%oIh'1J`@A0Ksf.'1o>?&D$R3s*r9?KLR!gOWN,M_;.kd_2\^DM1.@`_l:b(TC-fE!0r^3ST/r"3R.^+o/p0:F'e3g!qKK;gQKF;Y
%ktF\K8na[*N/=o'D?mlc9lka98,P`iI$]sh94qH)2md[mk)jBB9M9#%H5:a>IW2ldQKHk9Mj]mV[.LP8BgQZ47%lma4"S`^g/EQ_
%pkMO9B3P/@[Bu97ktF`_>5B%M&[RCp1O]5*lg$*I3n)]K^Aat]LW:F/VJXX+7/UHaJ-`m1"\M5(s(88l;q8X`Wj=C%VQ)FPI5=n%
%4):JQgA/SLL:YsZbi2=JB"I[Pb[Sj!`WL5U7m*kU&b`HMV%YQlhds5LU)N$-0XHQk/cD_R)P!kp9JBDoR@=,?BQJ@g?)FqUTsGc/
%A3)g$fpU.2_AJ]H*M9Y9"RrWsl[CRRm:!EZW[5eg?S<Q$&Fi8.mDqfUTJ:`,JBp>-IrMp<4CL#KSemctE"Yc*5D[X_hreog+V8K6
%m":sRqs_1`h[YZ*)jPf_/*>Y"+:gcYYF:IL2LM4P3*TQan3V4tD=!%cW8!:WEr.6$hXPDS">YPS*V"bVWQ9CkM9]A6(-WbSpH.2S
%L]m_J:se>&J!$?$+8kZ$rUMAj/\F0KFsHtUn'Ng']Et'0gn!gDO,?G'*QM[4[1:Qi7aqL1`[)\^PM\TL6=%XcK"n9bG_5pXmct[P
%_QYt<fseoWd$kt"]t(l?$5:g0llb^j=$=Sg"MW-jS+K0<Daa6[rNgRO8DG;0Lb0C5;I<P>U-GN$@JU%b!!u5>G9juGOhf!)*0r.m
%bqDd(bM\7hE5aTbWjhpn_Tjmb-@BWMp`KN]ePbBL519S<"'jM,n&$n*Rp7U),DRMPr:'2grM3T6Y5Y&J6YD%ub=5<l/iLndHIV-o
%__.&4hXRlUTK9qs%5fX9mrrt^2(R'#+0SiUJ(JHFBWr1o]C"lTY8_V;re/;eG!#V']D74O1"qo=X0kP]C8b0@6>cn)ifEW5ma"q0
%5$kbVkT'U?[QCO_o>0>elM%dd1T^9/`qVj_P(jFu0N:+kRnj!e1J]K>7A;V<W\qs9;'csFFOS4.5k(T'W5+'X)C0lH%\rGBJP?J>
%c0#$O;uAgVaON[M7uD&+;N"FE7[fU63$[3`.BNH8?7fR>l!SbSZeXkgS+S4,Iq*';Ptm-I4RSmcLZphlhiJeEd'V&1^-oMQqUZGN
%pC(a+:9@]k+#ONl+pB'S6aMCnXBgDO?e%dC4Oq<LQ;aKk.;(r,gYg:]LYmAV4ZcH9AE'IbJK_Puf:hn^3dI8/KU0DXG&g>c?b^2;
%;^(jU8e<4.6@((E-d=9r)*?5[GHY9U[l+tI_dAiNP="KU_e-)XNX?X#Sdq4k[^rH*7m6-l'em)qJ]S&04deAH'er;!F%0pGZF-VH
%C/Iqr?@6O1*ZkjP[gB>3=07AbGdbk'f/d\+H`a@'<]eQ0fSusG$tmK=L0Fm`.r7XkX&H.pC*K*-+I1TTgC>0n<X=@/s+Fg]'kmU(
%=HcXLEhdX,m[c8QG/YpiCX':V@IRS[Ykl9)<!2%L*:NID#`KhDbBN?pB&dZR2Ptb:a6bjlE,E'U;rTmoM4<d,gIBij1[H).oH\iX
%\_iE.;>\\\3f<q)>+:dl2a"(jWnj:74=Zf?!BdTnHS)9$9A5@DYeHj(Y%<7mm!("thqJGVB>*dcZM'b>PK+rX,+a.pD@:^Y+RF3F
%G4iV%F0(!"poS0_;;YGuUX&[X?PqL'**^aqd]2G/.p%:P`gUle?OtZo/!WCaYD8[,6!.6iFp:OpBf3MZ\E:9&I';:`k8^g`*bqb,
%4:,d.;6*daN'LQ;o`5soVH=?JZ\*c3]`-3!M!s%]'reB_N>#oU2Qfcb6Z%VN[kX9l=uj;i4iXahfui5r^smZ&l;aFhIfD$FpPK.C
%%UQCBDa//:U=!Xt`KGB#*n$0q*]7.KQ6mD(l`euU!<[KrE?8WWr>E"I(m,l5]km!kAm3Q%[;$ql]"n1F990LX\/Xs`h$[(.XI\S$
%W0Xa@N];^D4Kq)&*6jlP\r6K0WE6-7d<HV<EKT5/&cMSrs'_[,[9u%hmb6\UWV3$L<[<hZ[QolpUX%cp]:3UC=0r^4eCSr4Q23(s
%_l38kliI5Mc#QoRg$a_$U[=JZ2%V`^D\r<)R\([q/!!&YA;#OgX9LR<X_I"h+c+bTlGd,^*\YD57Z5S>i1oDY^K\s+(Pg7Z5`Knm
%7R+(ZjDqBV!Zd5^RD2#mT-<M1:WNB&>=eS<T0RBmg`Y3WUHFF'c0r$HG&D&T:0dO)o1XH1a.Y;)?u3M6m(baSC)>PUWpZ6eC?s.C
%6`$$5hob1!/tK.]]n,7s:ujSQ,f`114XD4@M:c)mqa>1b'=2u[Hh/M\2af>Cc3>.qYV#'[1fphoeHQn0G9S$?I8/297C@7>Pds<j
%1U<QR]!/%ha5ts\?rJm:\ZS;Z]b/XhgH(q-^M'3T2boj.+\Q?bSbE=KCNsjlH6)].[-O#/Q<J@tXg@jmmKCM=H$YpC512;F5,i_k
%+UUR9:-OOjrOqqd&I>qo)1'U-V/rYlm>K9:SGMe+7]dPK<$]Om=?`LWf'1b+("nqHG0F-bqo.]tSRLMbdC*&SK>+BDda+Xf\[GQW
%?r'sd=sDUD<P,:I"raI\ofa(73Qf"^$NdHTBGG__Nq7d.f![7$6eiZl[+B%5j==;a9eh(^DGqLQ*[`u&]t/@@QjT`BkL$?bpTkfX
%)[KWd3r*J)gTW??04?s?I\Y6=*Zh(=8B/hWob$\Nc9OQSdIlnP#MT^XK4lUE^2&D:&p:3eNDY/b8<%kg_AQGK.9\W*X0q7O!i]]l
%;?:((\f8Pi:ER`eG-7F(,aUA;2]K!f?$$d`_?6:I2Sk6k)H,X),Fc.m\RrG\k"aRt4cO9'$Cgj:Zi/e"*?!P3ea-7*q-q5DTB36<
%6.JLJ/e\'0Af\*3UU[dK)ub*lVO_b.<rRAuif];DNR!gE%#qjV1n4#r9<a'qX+dYijA6;h69smA;$3rO.hsm!lbocWQa*c.-5F'7
%)HX9LT'o^lM%JdIGNnN&\fWM[!GuqtrdA(IEkC#9Xps)_<A8p*CY(IBrN7.W4c>N.h778$qoo[^[n4uYgDgQU>i+,gCf6WY`_9:;
%:1fZ`YrS"FEcg%!jsmcSoUfsLC7dC'="6FNfBJjE1?ja$XU_"nq!')`Oq--1BYIf\kabs'3Xa>*^:G&jJf''KL52uVCd*hoHE.YE
%08pJ_Xll?ck<&l#-+\t;fIH0\:YC9o-1i&-h`rtU9)&AAb4U+b8ITI/=aSe9pF^0+2UqA^L2)>t68kUi2JFS70\8.8%I`RZ1$0ZH
%/q$?@<6JmSI$M\`/NQrb^M$L/?"*.dMiJ-hrIsdE=ATetm7*@UYAV9A06:BkO)#.>E2boJ[MR?X[+?^5`EBL/$>[T820rl/D285/
%l^M2GGa.NkdC%=]fIC"XRi=NtI"/+[*&mAp<nfGC7kFg"63f(K1L;g;*Q0DYIpQAG8>Bb&HQN'>r>pAn\$u4oA$O)B-)(&2lJGHU
%5AHf[jUm@qp?m.O[El=o<nO@l;h1R?\WGP?CXgLF>?gL!K(c#8QAiI`r@L$3MQbk2gn5`<0tT8%R:fKYAeJOYWXTQm6gHX&-Wk]I
%CQ:c@BJ,&=0oVUjf-t=u7J(gn>]$G,kV/!E=Yh<!Ak)egRqmV*I;O`@8CnMJnj7Y;@I$eOd]>2@ad,q]q_7>\!V;T=$*[./U]s3X
%[Fsh;HM0#QMrol(-U0Aa`)pCORerNka(rkPWXamI%l^r+\Q=a4R,3@c]$L*<IsSd$m`C+3nGV>SkPj=9@D0?S5@6Edgj2i/[CG^6
%UDi8UGPsJH2uPfglYj5'm^g_FG!8.C?#TJ[XL(QCq*!`KGAOlir*DKi[-t0$Ia(#Z?X%>heiPPL1(:M'\oXpS>J959cCVf-=^Q6F
%_i<rFVr_A?pY]k$XI[K=(m#J*pK#qeX`!\+Q\,*SBe`t5mWA$SLY_RB:]3Ag;UN2TY40-ui#N5)4LJOdN9opa$VoC0f:P7iO#D#s
%0-A_\\+4*Ym@s5aIAN..5;"SFl]i6o.]4tZTNCC4nQrDDqW/_JeCJF(=&'.dh2QLLOn;N3g\kTLm/0smHhQBglj+rog%]me[0](R
%s&%RSCu6]nnaC\nLJ)h0EY@iY8e6X_^+VT$DjJ)g$QJ9sn`j<WSoapOiRQqsa6OZThNTpmhP6ue?edYK/XO?_r2KO;o5s/#%Sc<O
%OL;-5^TCJM^8M`\pRXNMC-V^QbO6G-s+(G<>[Mo!m_COUlJ!uXq*t0GrUH*-eR_e]r1qKfEp(ro\'*Oen\kil].=b*FP[)\fRo!n
%F6q%AF^mFb74,WB(7#`26B1Ba,n;#?m]CDDYMFK5\JTQn1f`?1jPP7*2O[tpYJ%&c>+m<f^5.612XUT<:]3e-E*5C#n,1cH,h:A\
%`C#,H1$IB7N_R7Cfe"h3C\LK2*e/"d0KssT<V.K(^bGK(m;5r&o(Zp5:&VHmDY']@^Tk<E:%h%@cu%_!p\*XF:H')(n_)S/e^:uV
%CTE`hYJ,nEN+WRtm1h`H%(%LsLo9_gR0$N9Ee(89=2;IQL#T?[G;8AFF8_1!pN$83q#,4&FSY$ZbqONa\)<mkH+ipaGl0CJFC+Ct
%p[=Dlo1.:r(<Eg8+7?q2.N^V,Is]b)W?dn@O'BA*,e`_OY5MTYg4s;1oPh,\8.,<M%j+$LZhdG"'(uaOC`\e\D[Z"1(T$eJqtuGc
%ZMX'X==*B8gHM^sUW(9-B(0r)Rf01SUt;E*Mi1lW0WU8,oG1'<)Ca;l]G:3WbHB!JT)'hZp!oi*mJP@iDJto2"06-t?EaA*p+:q<
%ThbKIX6'XYeN4&2d_bt6_i8a;i8`sV^%SBA[G-U_[/XYoSr'769TG[Gr:(.=G]%B_>7!alAZiQASV9ZDaAq>W5O'onHX@/mV2`q?
%ga4[M.]&+srI`Im,M$;(;"L<l902gZ4&8$USfcd61,'"O#3HNb't5g`753<Y2,lJoICf!P3BZ38G%LG_Z+JPtI1c[D=5?p[1g/W=
%:O/_hWVSr(/q)HO&+==!:[hPI<pnR*V@O^lPO1P_o&A[;4mL^5ctNu;H>huo<qj+%cQ@U_;-^7f=X_B%:*2Umo1-F;Zh:dtgL4f[
%^O?^2X?F!N5K=IPD([_RdF*GmjZP/B0A%g_r4&q#&;!dfV4,-ul+mknasR_j#IW,-Zeas:3N0e"/iu%BPfpi>E7f\L%#qD/*3UHh
%qg08D5E8:l(@p[<nML:(CYtFs:b!JM]QGh<!<q875d\1fJPS-2@"XBOS]CO%,M6&+R[]4*jX3=7fC(uChqrk[oSN$m:\0@"l]$m=
%olUG#]7it>MD&=#?Ri0pH4Rum!h6Md%GC_oGPtjAp;5,6H@8BgQ18M;8+-6.P@_3&I.r/]I!q3&mbbUf8KZgf\j<b_G1Q2]VnhQX
%M&i.g4<oal)p`!G;])D39<tOIiNEF7O;m2Ki`H/!LVCc(T89\k,A\L(+M5e"/X;^4<'6ho+'Y5eA.:CQ[RWkC*ijgn?6pW6@;s$]
%51\cY5E3F_.[o:;p;NQ?,S1pY-ncs#QqElg>"G;2KWU-gP$pa#K2f]ZNuD$rWelI9*qg7HHta<['o4tFW$r\Glm*_nB</4G+rgrQ
%`l"mGfH`!BoZHi$]bgi%!Q,<sLAV\4/*U:],"U6[OXC46jB'`/4S2Z0#oKOh6(a0H]IT=;:0RQ0j!@2iIT;mrP!)_4"ub=pnOiRf
%OE2-pQdY2V`)T?iVT=r(CM^XBMQR%*$cBnnHnp4d9U:tC5+_FCB-[5TpiKnC]f(]I)LU#CZqh@t'oe=mq%4gW)Gb?;<[3c-'fI@(
%9@7Z]EZ:4PP%b'LOTgi4ET^+fBg[GV/>G.67^4:tBP[,D@[76_-P,si:N?bN>abUMG7*X5];%:$+Q(6^S=[CsKC`Yi@/n:i]m\Q^
%XV5^U_ee/`3X2m7$bg&SoNpEZ.iihp*j)X"qmRVb^4$#dmqk^A%3*3h'F*AAZQ1eXq@1lOJR/)ViOk9Q*1E2trrLc*%mO@bDR%`Q
%4/KT2EVG1V')GIO/DLIIL,WJlCia=\e1JC^p;8bC.3(kRK>ul>r*af]^A3"dH(k8e>%p.0f?uk'_8F2SP9Xmn3r4urgF2Crb=5W?
%ofh)[Ru5d"5H]_E_H+iu%eAuXMhC#Ip7lQ$3llZo^MN(?^3bht[$oa=HP]nW]r8&L_B$Ak>P[GelrrJQFtKlj.tl$<>mp"YYr?$a
%Qc7G*S\sRSr[0D!2h,X7A)*ce5@*Y.?0WoU0W)=D0Ie7o*V&n"]i+Ct]Ann9GCOo2[!qHP9]&>CaR\sB@gA8Gc>G'cS!8VR=Sn8'
%Kab)0RkMh"IhW+tSefY<*^5c4]QTlq!s<H0_8c<2%i`^BVb^@CHM*K%cW.LUma%.2D]*\d\ISM_`=ftbc5hj!lq#u74DN+$18!V+
%;p"Ha*:,nnU#V9F#Q;Af1"G2+HFX&)<?@L@*Bt!j>9DKHGjV!MVH`KV@)&m`4o@G#_^J:7e,t2I>s*Q,GRLm%WCS+32Phf/G8@Z@
%5Us%BC\KJ7P:ou5qW6+qdUo9KNSY'.>dM6"in`]lS<\;)'OL73"#_7dY>cX;pYfHXorH!>V;fCMrZL1qk'`_)oM5,ISX1_+`025N
%:=,%<\2G;hT5UhoI_'ZLXSM0T%[JjDZ>d)G(_$HCdmSF^0Il\%E'^,O8j8%5#51Zc?F+WIH%cD$R)DG?.3()=5<ZA/TO+$Qgrd<Z
%r9S:q6]Z3)elQ4-\.((Qq5sYAp[X)DQ1(q8:YKphc)j74K33dS$U#COj.2&<:o?H<n+=Oj#HpG4_D#=aki8VJH/'Skl`4qFjG]`M
%okLs;:ODuro1*`9%ktjmbq=ENG@3JXQXX5`)!\n]>-6::]o6l#h"4-qZ.W>R0m<DFOB5)\:&Y"gie\Tp?7X%89Mg\oOJ,;XpM6h+
%UA'd6Ier$HUZ!h(6j&BsG762Yll;W*P2b1Xoj@?K\V&&QqT>l-(\+)>jPMRI2H2LF=E(84UKK0$^L(9u,^g4UT1<8'+\=b1G$Dp5
%8tE\Cio/0Y$h_32\?5Fl,Hon>?I/EQj?DdD5(;Rb)I$=\IE57ah)djrqT?Dle^`.3-YM`qmn77o;L_=U5<-J=2"'@=M]_l[U2sg/
%=&&&cE9FiE=Mp3#`Mg2R,A[egcAm5V@C5h#B_Q[*5'pMg3J*gjg"jn_]CD_BH;qf_n`F;%\!Qj?o:IqaqmD1]<g8JRT&%!Ym2Fbl
%S`Npko1(n..$)3mnFY<Jf%Wh`0>E"@r+2`$Q(Ppn^O(WL@otm7IsSC/I'`DMba-Rn9#n!qbCcS<Va'INdV$&?Ilo5OaTo=^]f\Mn
%S`Rra[u1RtbD^VudG5m;V1iONE8WNmZEm8h52n.1-iIeZ:oi?K^bciLrMM/m+4aLt!?"@%[1d<X9c8H:Hus'Qd:B(O3VbDbjPs.c
%%R*')D++@lrhpZs6B0m]2I65X?!l93>n`-..[qSf&uQ[Eb3qQGn.^*<#=n)EL)K&IB;><6\$NeH\ek4hr:aD7Y;Y6$Mp4^uml,'b
%>5hLV/g'Ergip+e[/+.ugk*ehIU--%nSBRtrjgNY#-qFR*3e0jJ+_pZr+Y]fc52hLZuR*n,ZPp4>tK)KHTR4UaEsQ1*o=SSN(gso
%H*[@QeSgbs\acHlG7R?eGO?OSL6"Q;If8+TMm2:s8[l:#-\Y%u0[.]-A*6eikii#J5*gK&*V[1@Jm+$jG,.a]^OEnM9:k#iD</H^
%mC9lidD8_#n]6X+N,lYK7=OhVc[peU_#7<4".BDjdO)IWK]l&l>\Yf2`F^(aBh**6?*(4mD;d3HU"6I:O6@f<>Wh5a.(C@:^Noh>
%Zhkj[Y0-b0lX_76=U]AVr<h>Dc))q?rd#7P`toR8"b]&%%X8O,K;=PC_Jd+;4oDPAc+j0A.`SD_?G<ER/+m;Tn&,=j[K&pLn)>nG
%`_n*A^R]_+aMqj7;Z/e.ebi`9%:7PA-]b;%Jt6iI[8O`i\1M0g"&+=uJ-UZVY;V\2(LOm]>F%/eI=8V)g*ER(V3UtpD7ut<(18@H
%>5"SQnkTYm]p;aT%Vtfn<)IN4+].@F!@lZ*n`BI]%!2qLdb8/Ks$LMVmN09_2bluS*\A#oF5PoB!X]S$HinYA`f5G<7gfj("3QYV
%=+1"SIW+-M:XNUY['3i^#Nq^dh'j*5G7R@@=t]$,GL>*T;u#Q'6E.%2paNJ[`'Ie&*T#Jj_gg"af9UFf7h:6SmVcNqq(oD3FG>M:
%c:-Sq.(n5<ka[#dSO*PFATnnSMF@LO?M\X:0S_^nqXF,jA09mKM[DMr0D!H[]gnr8Fd:#TmZ3pU.g7&UgOBh`#e43J(`mRChR^2h
%K`fe/oSgfGS^J<^Jb?Xl4qU;U_M7d9GDj#Fo/2/GTDFJjd\DSU5$1>C4n(;ZCZ<QY2%%KEeN'6$if/eq)68!O9<3u['0gu6e'+r,
%<B2W_]\Ek<PnkqJqXYa*TU%f)Bq7kOP5;Z6$ME0O]4!t,5B$LV`A?1c`%^YM[?.N)hV6?up>40T%E<0"\*MQSlsk`19X3`H^?sbb
%0"22]<n8tO[BWrh\MJQV[@tEhk&Pb=V"oE&RW_3qhgO/d^MVj\e0!R,p?\0q%%H>2X7rjR<?i#^TJo4<LN(3Ak4BK+o(f%&@#f0?
%MDo7C9Y\%Y]J&+0[A&9-.tB,Q%_:Q0M^J*#%dGm[=Y"n"^;""0Y.X0<?S!amn2thtSil+M@9lu/S)*tr\+J$#n9B)/?+Vo8\5a;^
%qb@=*D__:gd4t!UjZ5,]o8?r,hYsmi2BWbR)_bL=7k:dWT(GY4^=#&_RM2=<Il&&.8Q7Be"-e%%M0ns8-eKs+0,.4N\*j%IQea$c
%j'$?2J!fNQ`A:VYc6Kdgp$j2s-p8VV)s:YI!@,DioBq59c%*HR\X_heSM'%JJ>'Fm^0g=kI"/d'o#6q;`G"Z)m:=V?8+=cWD>U[D
%RcO(G^N-W(5OI(m])d.`c_$Pa]3gjrlOT_brY%G%aGWqSg2GW!h0OM6SATl8>?`3FdHAc<U\qa`R<QD,TZLXhVY+$'ED)RnQ=WuG
%#A-3Y;<GmoVmRVCr;M"XA[g-(p.#dErs&i?MWKieUA1[u>\7csB!hC(FF,eRBo46m+T$p?goJ:S?cq3EW6(@P@$54#+5,&NkKB]2
%0/&>E?\96e@&[7CjEG$&4aL5?=C#-/B$3H+B;"T$HUj>H)+84/e`lDS"n,k+o5$<8/&a;3FfGX9G8-kgq;10CRQKF)V`u5/R#X%e
%\aX!DB63T9i>-g-eru2uTGQt7T;tMiV`u69.%\)4%RBBP52Z3Uh"i?3Ah6E<:d88/'j5ncl?oRQa)A_ArX940B:uJ9r[<R_`?A7X
%HD-7%[H>6WY:P=I^0*#C,7EF8^HPaN^:8<#RlJL//`OPDELI\*7-WP<>8cWeDN()d])V<%;*8]EGq9"k,6Qgqo+sAUQ&iA"\^oC1
%bE!0Z_?-*&n6iTX]D\#`4a2nfBCWrUl$2acariT^7n9&nJZZT"UMh)akG8E.L<fZC*I#m$\+7ccSRkJ4fdhNNI^mjNoUVq4Po&E6
%h1PoZcLu%XNH\#+[dKEPf42Q%4K*IJF2\rVms+!A[I2kqo#Y?0Ua<[KcP3m<q`_1^0cG(JI51:GCjl!B;D3O,_2c>fXahY1]G0Lt
%q5BP%:A3ZujB'r7^Uu#"`qBunIQ@9l0eREI>@5spJa1mkJ07nE!9ZNrFgH1>CT!Gn3ot88&)R0^Ms?^[[.N<%h7U-p=?^Y&_RmY;
%]/E@V3L4P!a@>jRV["V/NusX:'^`M*%C,#A[l,9>E#IrM_&7K=ZA%8gHc5`pVb-l'J%Ao_>gLij"aS`+>OTk<[A_^fru."s)1TBT
%r"D7XmR1]T=?;[@)7M[YLU@ip[)28,Lg3Sf?^Z^c?;r\Aj4XhZES83O27<mb[VN:B-sgVrXad?O($P&Q(JDf[HM35lAR$-iHINF/
%Xm9.'fs4f=`NkW,b$9&KpthI?B.KiufF<Dlg6L1d(<k4M96qAU2cOWa^9-S'E-*.D+tIJ"<qe_^<,&D`M7Rp<El\%B4DIuh&/iCn
%)\t'S6h*=Q<1$j,KcU(Fa\:7:lK#$**RQV>h3$U\lhG,!B=2LDeRl^V.TQC79LEuLL9DCm)tJ?A_&nRN$ljK<!")ia-?`@KXK"g<
%%]rn_^\8Bp!.lN!<Qjq[PtnN1NYC8e'LbT*d[;(XN<]UT_5s-(ab6Z7X4OkslfrPX0W&/BkdfKO[]ZS1dAq:!S_]6c%f2)g0C?7`
%G.R.:PIK*+Y8",5_m=$gYKH4#BcP+R)HZI!jS\;.2[eiX,Ha,=JsU8tFs/;B)d2-@Z^WHtPt61U&)R$-kjHW7$Ih38:#N%PMCrDe
%WcAAtLGpNkDhK]f9i3dnF!"\@Uq>>t2O`b!G-`5)JJ%"'Wg?a-%!6IMh(+h>kF,Ue-l0O(]gbN%"ng^*FERH`YF!d/)F_:lY89GA
%3Z<,gfr,WcY9NnWIKRt!%BCch8Dg.KWs84*?<qdL5sMF/b:e8iad:MQ%dldSUAdL%951ib%Y&@AQ$rq6Y?IPMA:q***M)ri-]P?6
%]7tU,(6\T:A6b+[@NU>a6`fTN[GQ/<O^OPiNNCaDK^jd"lB8`to_3]<8_*gJ:cC4:<O*P/96!*\$'9l^rNBi1,)mmfr=)P(8V0ii
%gPmteZC?]g-!F8`&pfB9+14AgGi_?mU_suThMb.mFtTo)oAt/e,jarP5GNJ4EDpl:BF29h;riZ`&A;+mr^32dg))cs=PFQmhWef4
%Y5:l.L0*.rFg^#u'5L/(Y2,R:0@10.:C!+(HnMJ*b^IIB<-P.Kkg-r*!6Aq7k8%eD!,ILJ"SlZB@e_f^gB4rjKBBt7f$7^m"G^_M
%\d(ctPfe+/"u*'chXl`!s1\@S_-MhWjD&SN%d1'GHl2i#m=NY`L#MS)QWU)o=__VF?n'\gh-@MDMp5X83P4+WYjfc'JSVLN9En,p
%dCgVO7(%h$.l":?&UYpRldg$mh5G`+e(d%\%XhN*"eCq6,o7)<&cFhVpRt'$"(30TkHI,GI^P;[b1CB`&X#'G\5u1^a`pQri$"\=
%pll9n)u_O_!tpJp50cUH>@.(`$S4WT-/P`/4G<-mr:-B_dFocTXdt2K176gp9@Vj8(L[V]lXOT[f>Kk-k&98&kA[09pq2o;7dU(\
%J,H4Bs8T$qh_!%)%d,)K%q#.f(CrL9e?d-C9K$n0US_;2@7nJ];rRgmN_a]On-r=5M3E"/l<6h;THk?C^piS9mauEMi&h:H*<7nQ
%cNUcE".0="No8POW]@oc!UfP!V+qGBW(e#Z+c\57?BA[Hj`*4#M;&Qd#2lDh>"(/.cOnJp^;f0S\iuhQCXdPk2%7gAN$dp02.l.W
%C0H23M8F//HTCqt2h1bg:%AR`D_4)YhS1!=M\i]:Y@uk(KZGOb(mRm4_,B!<GRKJq2oGt8n"\Pr?`YHQXHR.FLG\Z1K-g"mJZT6V
%@c8m>Z[JGO(r=K$OQ75pBOX?o!tUYc#;Cnq:sj9E!s\=i0e<Xo/5W)Bb@r**AP3Q"$tq)90]>9DjB'_\Z[LL/bqW=;3<sq9=#IoT
%eB/+'@M;PQh&IRJZhb8gd<t@b,H4KTM_\HQ(R>V2_YYs"/JRbe:^dTR^2'F,3(hce,Dr*<*1!<_#R@q;M(4':qlZY90Fh*]!^eE0
%#A^G\V)b.PH5SuHoR[[tF:SEB#(R-'lFAXW@^qcbY$>8ren)Q>U$(Ydk72PId"_@p*ali+iG'B\cA:#3R[\AGO'*^lnB]N%Kdi<!
%]UpB<M;gT]#P+hX%MBVgNe.M7MfofiFrd=?7g#LD4t%tZgY7[40g#FB;fL?4L;4LJd</s'SdiD-Tf'ig=mh6&.O8C9'Sam)ba>NN
%hLp59f0tu-(e%Rt(sEO'![&m0,5DcgHB,&:#aDKT7I#J(&sR>8g6DGK1eN-)Pfb(.2Scd*FUoBcG`I'@C<TuC/"ga;.=_mP9S%R$
%C;6iHTT62jO2DjAqXMFL#H;?q,f4f%hOk1s\K:J[pDIoe*u(:l/G4h"#RH_T<Rg^_7oL/3+c.]t?f0D7i)#2%["uob*dj"Y!:_q2
%^l><._bo=$>Z-l-l6m9c)Qu,YJWAnDWQ,=?#pIn$PQ7ub:daX=^i1O_0NP/c5S?kt*MQ+?h&5E"Wl:#Q0'rfF'?7PRT'[r"B2T9d
%f^Xc\Gm9/B%Qjo-NmCD/C_*BDiGgO@A3e+T6AON7P%,1%!4EZ4.)oXGd.H8+ja!<,Lo1QrnU43XF^PS,<&e%sJQ?Oek?\SkREniZ
%fHJlYg]?C*1]`g)37%^ah]Q0"F'KF<54GF["e6G8hQ7=**F']9+l%\j6;YQ#:>nO@\-q&oe;_i%73bG2"c$Gm3tZEC[t(3@_PoFa
%EAZ<`2%\[5OmE^23g(L#@$loAMmcC+EuhF%4V51>B#'432a?KaDC.Gq"qGhl^JSZWp#1UWi>+P=#\-_a##-Ko&3k+JYmjk;=_t?)
%!"c$j.fqcG*@P\"Su8OpGfR>*^9:Uh3^R1n1h)'H#AHAi5k0jhM0mTgMOTm/H>pFK^)9Id]](IH;BJR4^#IsBW+>tXLKj]o1UN`Y
%CEse;WWbE@j!h,5_*t(jZ?(C,R;06PK)cAc0UI0Io-99]q>`)aWo0hX@Q:S#;fEg;'*BkR(!J#I=U^AS"&oe%0FV%S*1,:_B_Y6$
%(8p;?9'f83Qk\K==TW80R<&G^ZiXci^d5kkX+mk2C+g"B$MT@.gJVbg0UKJ'X3k1ABV8!iXA'BNRUGVZ@2#qWYHW"]!T='C;rF7B
%V3^/Zggu0A=K#EpGbB#WI`,L`#,sJC$=f3FP:.P9Y+t(7KZ!T?p*Em#k>KJYcqCMCEjYWV=^_mVY0`_6oJ1r<Jl2tA&5lm0i!.!t
%&/6?=;;FSJ#JpUaFeN"`pGYnr[]PmdX)/mAl4PE;!%69)$;SC:Yr$3A&\ro@ejqi\<U^*N]V5SS_<j_?SUj!Y%:k-e?+H`gb$0Vb
%JS1tC*kJ%=+V&HJXYi4[V0`Pgn6+Qj\4^4X.#[&13WLPA[PC<GF$+IR:(5@qQ9-*^%GeVl+Pafc'=.h'0PPU?YfAf/<s"JX`Zi!*
%i!>_O3#^dSWT1m6.(91E[mhu0%`^[@ACBBOqSZ;Q(gtusLb%22?kZU7#SL.]!)t7E%Dc@m<!U4Q2J3BB<T=3:(sE*^hASt>1!"bb
%9jmI@8H.qQ'o\3WeI/`4Q2A6&(rCHlE-7tF7B-t<fE!t1?\dlG!*@-<lU>=e"FHdo*<6]p.jm'Z1`Qf(Hb1T9eN4<r4kD2*\8o>S
%\rq<S@)?6C^b0G1QH"kt4bYfG82?-$lsW$7.]18p4FmOFqB-ad7>D0r7h]7`Y:]o%aVH9\l(#k]YT%APiAN=K'<[,W.X2Z?J"LI1
%!J<]@?!"35W_M/4!X;PAO,16Cqk\'=5b`oBbpDI,"R#r$/r06XWOlCSX><@CfY@npYf!FtOppC0Ee>dE07\JRaDJ_4B-G"-Q"foB
%[."-NX0f?tWh(<NW&hAG9u/<h\020OLo[Kbcn+SiU/g-6\-IP"\klk:*ZV32b=4upXggl1Wd<0Q(S"Fg(qOCDq:t7*bXSY#=<je!
%<[K2=>Tg^l(G1*=W(q._KsW&%bS>J]!&Gg)H^LB4[]b9mr*S0\#^9i*%cA2tPY)_LTEs=]32d914^:,j8&9')#:@*%RcE,V0Eu-i
%bm(&"c?am=mLa/q!t[:,PE(l_-ja0Nd!_,t*jc>lBd3Wu]dnpB^o:FS!X;?61r?1B,`G;:$?ZYEHKFl1\-L$:fES$JO8-!6?nRX!
%n,qo15YH%sPgj2:SCh$80TV&>#fKt*S."W;)G,Xf8A1fjTEaR9k!&qXj80`r?imkA^n2nA's>ue5b^<J+/A*^JR/Iu%]NVa9&gC$
%2s:L`:kWj1pCP4s^@/'C>^=$a\qC34]qL-,.X5n%EX0=c!s.gL6>Ms5q.LBSCEsM3.eFRgV2FLs.P+#14RfSO$'&tkCT5?;L3dT`
%N)<Bf7A*Rs/dS@u&B"0<(A't1h]7;q?jUk>_"E'TmWc0)"P<5bQdfMM_NhA]%mtQ$P'RcOAj%4+#U!eIWdk*Sg]3.G0-)YFM?'S_
%!t)Jc+MC,Q'SA*EW.VZX&*>AJOdd%7&gpL20B'Y)==4Y)JKBV9'.CcZkaY7X!S^KMFXFda.0[.ILt.P"N5`cu3J%6@&U9KZGcXFN
%SII7]O-2#TZ@-Fd!U8sdnJ.U_4C1C$g9)'5%,/fd)SgpM:bi%eGeWTrfTO_gckZ"@`Z<!:p!1,7<UNdN5M(rt>&AGS35/AoO4+Q6
%9a,;4VQ+;%,6muNchKsA@BB%fi5)bT<BW21I7<`-D*4]2S>n^k".HHn.59+M8\:0+VuV7]\IW.o5\.eCg,n(:6Z=+]Mbi+F:)&tD
%IAuP%?uqLkP'%#iMUFZ(M'9%p5r]$*,]kgB#oI[aLhB@iGB?Yr*S&O0LbeQAFJgAkGa]][a`JqOUDf(NNeY)qeeJ4S5I(@nm_NLr
%6JtCD88\kbFliDXHq:ZoIKe#^gKN-XdEAXUXDf^dCmlS>0G\Ah'Tk32(ctc_2@*l(6@m&]9QNuAcV_cYMp7Wd.-&I3EBjZ'*<Q[7
%?"(E.W$5a`$Te?2fFLAfA%ibC.Y`lVXlr&ehcdEA=0Hb>Z3NL3C9+-N_d&4l"0;N96=#uRqWN3ECD7B#/+!@^8PEQ/CPlWk8ObKJ
%)JGgsm?pkPVhRsjNp=O@$>K:4cW,<n"dC;Q30F]dIC+,Z')/0`ik(Q_jU?b&'ZVNad_t-k>%ioG#N6L>F\pLlI/?]o145,&]uWD^
%32IH'9cP1]5]=Z/V?t%TglMZ#W0;<?cF'&Ag@G"Eo`s25\cWBWa^_>"plVha#Xmk_XEmu$U4=3mI+\NC,kIXih*$^4pEPEAP1VKZ
%:gkolDUQHhs,JOC)fQ<$#p`f17>roWT7mV;<*ed(U3\jG#B9)lH4aNq$Ij)FT,N(GI"),%EpMCb9WT(k\T5RJECC(^X0d[WjFY8h
%e1QMeFd\+2i.QMm8W!'Z9!*Qd0UKiBejqQT<SkPKFrd<2b]-lVFmr@H:,H'5fDq`he(^:G%a9su`1q?C6+As=#<:?A>])b+%k-Hb
%>Th/8ed4n&O.Han=`Ve!>YT6D1(VNpW&Q$I$kF<CK5_6X$It(>+H_43L0@bsNbFS9d_`qgJW@<meRM7Q+2EmF$k&]VfD,34BHTk\
%#uMmbJ70[r,!Ld1H=![.n/PG%J3)-Hp!N]q9&r-ta5SL,QbJ-(Q]Gc<@c&.kKX$>\64uu:`8d?`!2X(FT1D@="qAF?%Q!;oTiJ08
%.8#jO&)_tX9n10:eW,Z`nttsSN]7k0JXDt,pLXMf1gt]5K>?*mL%9Jj\^IVtUa&1<et,R+7CZ!E_D&1t%o:pR_\<rgY_*5eRSNF3
%a9L0/pG&FoBXk,)*UUWbk!e\oA[FfhTJD@Y'48k\YQAA%$MqRuck)^mQmBi7Ie8"UHB18nf$bV*]Rr7rD;.uF#V\_S+,&[rR*a)E
%\&f1""3UejE<K055B'Uq0U!1eTq7U_%V(lsJt`]YYf#PqJ>7C]#(!;G,9sb)!s9%iA)N6ad&TcC!1mc)9B6dpGN$+Z>5>H/QnR&P
%Mr5)rNu7]t@d>""Ks:or5ngWWRG)Hc0W*$L+Jb'RQ:_N=4IT5o&fFV8R`7mM$_Za&qnd=H0tY?Tho>V=!9dkdRDqD.E,hDOH6A7'
%dXZS6YLhL%1!g,[5@/-PP.k*"57iA]""R&miLVoa!+V:<:d2*2\8"-d@0]ACF:Vq*StUeRPe7+RUG?eLo5fbOGO-]]FaG)!Y9[?m
%;)o!O1=%c8#j,gfpcRe19nriBdNPQ\jLD!+Q5;GqW[Gf#+R*=OiC?]-Aqn\b)*Hq%+'`WA-ssD>1.<+K4sn,UKLlQ*j5IA090DR+
%HNjmKC#DUVbLQS+a;D)@+Tq.B7Q`S@(laa,FTC-?GTu;.WB:TDTmC(&4)T82j]u)\-lIj"@%M"j,f3Z:h&m$A;a@(Qh'<_tVr\!$
%*,/#bh!9YaKZ&&qM&I"lks,L9(;!g)!k9\>=tZ(2Kfqt!))+.t<9o1C5c+P(?<(87&5]1Rb:0A(,DN*FJKM'SA($`RQsMCeL5@YQ
%OM]-^6&)Ye4DqB`YD%qn*[AdeEEUFA4O=*dL=prBDecFI3u.\s<+1dnEk8e@Sl/DI#2UJiK>E2Sg!8Md4A=74_f.KTEQL>`1a0E=
%iRH5&W=Qj+#2bPO31eAd0:q4?Ok:[_L>n_0[KJ*Vm2JSK>D%bF=H;et;knoSXas)WTH_e:.L)84f2_ODEYhP3!_VMVHmdLCJ]a(@
%Zh:+-c`,-Dm)Mb0=?G)),)f%S'9]km[B+X,!Q4,+$?oBL`%eBX.8"YM&rs+fN2OQ69kg6P^0E/M9;`cEmtlu.'BiruRDqD.E/`Ka
%eUsp3,;^V(`E'MM85n.1j2DLE\]&Vh59cD3i.\u`@:0P.@(\?S8^.s(fH$MaC;S@;&QuH7FNi2O\rMtRNp-[PENh-!3@8bh77i*4
%*7KbV?o)Pj+6[fYgC&7(3MtaVaq]a`a)nG:XU;i&atZ"!6'Z@fNp3?SE*e1r+u.5Ojk`NXN4X+h@a'IfTuo*0clicKP0,MPTSH":
%XrML>=_V-G,:^an4DE+#)R6dS3XDN`'ghkd=>?=U4[iU7jsU:O5#=.l7&@=EpdrWJ!"LoIdpF7fd7g<d23J7F6J7aO$:c>p/0!&G
%bh(YgW#ERr&)Sc;dq)!N&E:"Sl7e5)Y1/-jr(K&P'JX4[i(3h.A::d(>6Tk^Qu^^k4IbRB&d+.AmD2'D(hQ]VNd+pe(oGb:U6u:&
%K:'r^UI9,r;E'?JH&`*/qCnU8*,hcn%*KIhb5:ME5Wg#dpP"<28NdF3D[][,!M!"GYkh4LiE3msO`VFIjVZIVJth3njd:X0opnJ0
%at]G=.af%-.`X5K'N5VL/&s>:g*chV@X-73;`4Ui#K99&>ms6LL%a,X@4no/Y;k!!p#EV>;)RJb0Z>9&I^IJWn,mGO%K<K00aDl<
%4;T';)T+CFip5m6UhU=9kLtqn2(%]F#E*$dE-W;m"$TR9"NRl1cPs"t"1U_.3s=0a**\[B`Qd/f;o?[NI1Yi)\VI-2+aB%0.3Re_
%QfPU!k)qu]7:g%1@2;\>dg"VnMC01\1S(5\WRt#YkQGm>L98X:9K8tRhcGegSrVf5T?,G&2##OPJAr"&-1s6+FXRXe+Q0uaLDgZc
%M&g[@*QB;r##uX*B+0#iV\`8>#\/ehC*ns'M'AWFb:f"76(IAaW310X9-'h7KP,HFmh5Co:?)hO.!dV!(cp/n[/n=b(TLOq+?K,L
%FYo'0Rb0o2.gdUQ<AauJpHl!2D"3`[P_"c9_0Cm6:kU+?@D9#0n>%teGN(_q*g]-$3kA!:_tiQN#O'1VQ&\rSX(rfm"f85B$BM,k
%?0Wir:7P?TGnB_FVh8]tJ[R7%9QP#-;A^R>M,cMmo_.R&E"&lW*?EdW"semd!&5-f-r8.Bn/.,fRYT6hB0&gfGXnLnN%45Xb?Go2
%N4CurQ?-@)Cr0URECD`E\o$Y%.H(P#h)%fVo!fIS6^qEumF^WiBY?d$\;.r>9Um!3ejqQTV`<*I$>_OA77ic9L;Wdk>en/&peA'f
%0lSdc<@Sc*id;B6C-/S)"VLBilUC`]"'M!>J8oHe9Z)^6LuERo'rW0i:FA\cqG[hth)Lm-r2:Feo2O.%f!kHU5@3:Gd35/,_K[T,
%?t7cun/g_.o!gI"$b/rk[=)<^)2K8P:X+r@%>K:<<B;=+7BAltRDZNe!UqQ.LYs4i53Ubf,h!?59OlZi`e[cX:$>"tQHkljnW'*7
%AB`Mj^<F%!_3-N\c@BXXSjm_%eMqV></.*DkIq7hBjneb:(Y?_4WAouEC'S[=cP"eB@KQ4eBk$2X;JkA.RsVQAAspd@;_(,b-cI*
%kCPaTXUA9pWZ[EZa$abK(6#db`R?/5!u]Por8:cC@[[F[WTKd3RMHWJ19K>#T9ACN-6?5?\1HQMad>i;-!Z+d:!Csmk6#j;RLJ4/
%)=t)Hb2ku:A)]J<E3$0Qbenj.SCbrI0i-9KA%EE[%lfc;>-K\3>m2#<i"L;7#[F8aIQnf.!G%aa-lMUj$.WIb;)3lJolO5U;DRCo
%k09uV`,)fOHtsuB``k/%>Ca;O!&J.+Y,RG$$Q0+83$qu"-ob*")uq@;3ig0(0m1.h.HaOE3F42N'\mbC@)@&(+!j\1:HTXKpL7YM
%Y,433Z,^X>*0o`HS!pJ&3taMb=V27j't9RLl*mfT/LM5c&^X+?^5e[mH'505`Ul/>ZN)7-d(,ab/!`GCif)$uO/k&F\-pTEV](3A
%M"Lt9oc\SNSl@:dNlifgl+2o+4>-'2r<P2!_6la1@6DLc#urY[K5rUok0e4]EPOr@-[5k(f/^@4/A+Ak/,L"El4>97KZ^>4j>&]G
%M"LiNW$fh[lp2Dk)*e^n>(W,D0c6)To\so)0B!?EnVXA&Bd>4kj2rFm\.W\;PYDfGOV-q^,H3BR&ipG;#?o>"DDlJ@PDXr8gu[fh
%%H(4JFMRNRVJC!%JLAf%,qd`'HN\tG.MJ/b7caG6E*kR\6/7NmNA"0IaUh_'Ea1pamXUH4'd"Y_l3PK7@ouI(BSr)ueZ#*'eeQB>
%,!Sg4j`)RU>2Zj7eY:P,`E.W'6;S-RgD];PYpsa8]sA#8cX)if@^k._P]Smf86!Ep$,*-ZJMJPD<#eSI`?VP1lc4t,.)IA^N2N8e
%+:?(iUR0JNBfOs-TM]i3AYK_+!ifV$Wa$)\X0'_7-t]n6$+?3E-%HI9F:VX-YF.Z.gpLj.K!A"$Wt&qq2`Ek&nF_B3[H!+m-*?<<
%^>d@)_AukA'q(HJ/WCsXB*9*l>=++m"BQrb]=?J2F\KA%_82<M>q-(79%E9ql`3Bpkf$U,EHohDkd5Vmf8(!/1iDop+AT^pQ65^T
%+86Gp-BO_o&7!J#>XFKA?Kt!EGs.Rq4%R/SDl'I00OLC8`%!C#aRRbSeULstg`sC`/H@DCj4$'4`YC@':(V)l\`7EI-ZN0Og-N"L
%"7G,j>,!`T8mLZkT?:m\/?qjj(i5`jJ,slRB[$WcS#B%90LkM&V!\_V@6@G[&B3fLCXcp;"rsfU'%\krD*h28d.W0K,S"g1SW<"k
%?1a$Kij_RKXXbrJEHEWs+4u4I@5EGTF%l&O-60>nW9Sr43]]s4FnLV"D(DRpB!E;Y33]Hai#\'cNWs)Zk-/&7WA*2O)DM2)T[Sdd
%YDX4e]L#''&0CVXM?_lX=W*1i_i4%)eIP_oG<hn<f?*XDPVQ"VFZ`rPDnm6Z5!$O#Qk.)l6=#R8@\.'Cqm_fETm`e:F(DfndHlR2
%^?d8XXuF5AE)4)(:(hpjjTPR%>nJ--"iM:5KBt<uXrsV%lhi@"k]Fi'Bo\)oZIm1G1W/EXI1RH-#*:6X8P5$48AQ'nAX"1nnUn$Y
%?<L@(3Y7YLp/N(e$s'qHW1jmJP7bW^MBh7k%[1Y-.ul;R<n.RdJuHg2_coTQcCIgP"E8VuLPZehWm.Z.1`0`=OW$<sq^Uk5?nBtD
%H\8CYP)P0O=sB<bW&G?e5CosQ9'VD'."0_/@B+tdH]Y\"$,i86Q5!uNE!ucj!je]Z#gYb!\_>1sQUKq?kDm`3,@A8Q9tFA4Bb;DQ
%qFS5[8VDSog'CVY)50FZ7[X*gleGk[TMu6>Ql<.+)Pc3r;[HS\U9M^/?ZcX5M-@&H>ZZRrEjj8**&5]X8\@o9K2]Zc^qkUIH#.'V
%H6\i1LA)b4+s^$(Uf/fb7qVoOV'U@fU(g^4Dko2GCme9V$B)FF(bFUVO=#N74??l]LrE:!allRDHD..o#[4gpdq(48EMVY\<5Y.q
%J];_!M=CiYN4IXJO&,;kSq1W$*'Fje\44"@Ao,UX?<M271dug5acQ`sH3";:"\YSE..0Bi9dUEe$KBJd"-//HH<gVQ\]N2$M\hl'
%5iV%hEMMFtYD`&o<A^O&-j#e?0o?8:6G\f0J.Gmd'-6*J1sTdrqX+lhi(2p`CR7L)*#TIpc>[2(^c`^MP[FO2(CG8pJiOd)=c[YA
%Y%B[HEL2qK<):d3FU:_Ca&>hj:i6tT\4p3/A!@o9G[7LrG"#u!eDqT#";sullA]biJ81aW.hZ#Rf?'J#]O=4pcpk\\C(+)p,jL@O
%"_:r$PiAWf,<R.D7@;Ch(aK%8ZURi$I.]sXS;iN[=Om`9BPS5\YN#dXmPj"@doURCA9D!P1Sh(3!cbQ(=tj5QKKZghY&"0EXM@Jd
%ZXPn##,EcnFO^uD_]HMPN]LfB\iT]1&Qs8;.(JZ#qj:(,n4mGR=X32#Dq,kJO[^/reK#gge!GU+\g+nn\P0Ul7bnZn.3#ECo!,3G
%%>"[-XufTiK\)Z=,O1<],f_5(7`eATE?/9H`>`cTW!O1jl]/oh#!Q&nLobVoG=5D'c<X^COAqPHS1:3IF[nh1kPGVMEk+o<2K=-s
%p'D^;7;Pb"Z8h-4<0"\gRY!.R_FoKO3&@/ce^n!r0R9FeM&H.`FJ/1qP@<737sL6$Xfnf\iJtYHc_rr55[\-iSu=c7TjAupM+^$#
%jcNjR0W*k[,?soXM23^P5YP\>41,C84+VLQ)-(tX!S4s)9<S$%!0cR@;!AS4S"[g'9P..%JEP.Z23JIL6KsW.NlWHpF;LcDSq;;g
%hZk>uNuU#AjuL@24n:Gb-::3k!ICM%%P#9b'Hf[$LRU.j7"H@KgDD/I3A.j$b&201GXODcHN_FKZ(e'fO*h,kJ_2A^l&i#s`8eGY
%:D]EQ>NATeR2)PgXr<82[K`aYObGR<d<-+_Gq^GJ.Z9@pVY!mQ:f;[o/QItA/j<0r?k]6F9ROg%q#^dlRL!E+4i2R`*]%.)k-DM?
%X?AoHfh=C$ZM95(TZb$EG0&X&X5JQ1/<g<,E=Z:oO<d*-EVLiTqM6W,0LqIu\Mhj8`-(,5<n0_":2HE?l`I4K!k]7O*0qM1@G6CP
%XAMA&DeTF4*,Oq/eA1dKU`Muo0G*YM?%[\GMUH%O@%Qhfgat'DEWY'g&=n!(-U2dEam%d3c6+)[ZW&g"IIk;0U>>SjU#C9W.sVM4
%YPL:L=;G+RZ^Gbp\WnI-ir1'k('p5'W7";`BqV;X-g,&@fKs;"F`8I1Va;2(#-i/)cW)ZS`<kL`XtVWHkiY#Of,nLYY0J`0>u>D\
%K'Z&A4=.R,#S/Ca66=u>+;,_i]Gs%]&$1m](f+^t5n[U%C]6-JBGP;eI9#Nd=8?n,()dfi*?8LRS;Mb$>S.FQ#f8_@5Yp:2MUe9'
%*6J8U!MQj$9t2G:r"21d>^cQ3p[s-M[Z#aHBIp\N?>rAUU3R<k;E4h8]Zj]qmPR[mnJ5bFhS#i+N,W!b>oYB7R@,<Q]aE+beV+72
%WtQ;;\<;_!39We:Kn4FqW>&BP0U])K1>nOtV94PCHrNk(NH$Q-JG7B2>[iaOp\IcWgc^Ir(,4Zk0;L")O9PUb-<t.[iIo6.T$FCr
%Y,@KV?25neP"P=4:1j:'5i_0e)CpIq)J=`X9Vq]VE$#V[/CCA2F0.;>,(\[*l$HL:<a1o6?k&9o[>l>b.S^'r*"2p&,=sS\_@/^B
%<t-eNYj&'L/T3BW5a[;?a&a7+917=t@7X7m.ju9IL(_0$^3jSuQV(VYMK]>`B5pTfg(/2f=ou_U1A+WXNZ70'&kB.6V`$Z5Wm>Cl
%g>(/qVG(%M)#3)BUE]M]L^<#UGe>e=Q*T=h$2U2RnRPXid]0-F4BSFm7bm'1.U/6?JbA9nHu&O1Q)csNoa@<;*7M6-TS5Os$`8h3
%qgHs6a!L'BW@"1?auiI$#oIVDYnaiQ]N:qISE9MKNIF3N.MbF!-V0g^EeF/(@+Q3H.3GXK'A[K!J[V7>aRG*fR+3g\4HU.TktG24
%O:NIBF=9n6Vge2mPCB_Co4sc@/LFrj(l4`(";SpTP@;f@O5+"3]rF&=O-B@LW]9_lK4FbgW]2r_ool;a>]hCo?>YR<?0E*'iZ;VJ
%PR6t9\($=_LuFB,p.%>KV=SWE8ZR<C9&Ba[)a',34&D9XGdt6)&ig%M9WiQL22Vb$Xi*i'J\ncoWXH*$[So95B%81Ciist%L&`b"
%G>oYPPuWZm!oK'tqFN/!q4M_1Q%7$\#.ti,8`7&"m`%rJ\=e1nNoLasq*pR^WR8`PM#&56duQrJT6R>ml,sD?`l[jO<UgfeJM*9)
%Y7\a_"uGo-oM\cd10^5n)X,1bc>l]F(i-uS,)N6FP]'R@.KccEpoURkH<HRaPp,%bdRm$*3;0'.TuSF%c4P.8MoZi:_5'\tpNVm*
%nd.\^<0\Z#@gi0)^/Ph[bf+cGaHrq!.Yt-do]&k2dEn"5:aQa7=lPUP"HI#$:(Y0>V)=5$1"72-IRU"rIP"4*<2FL9k#>=$)37[h
%NXC%/HrWBG``mt$j40UpqH"9BW=QjcG7^%T!FEtdkC#*4T+-_)h([7$Z'CWm\g@#%LIe*PDnuXl9[B$"0g[bE%Q&fh&#u$[JR]2$
%-apfU0WS@a:C/,3>sp'@',G7&a(l-$SOCf7#i(l)iT[&G.WPY,`l$g@;.*&49X":8*&eT^1%hsJE%ui.d97On,#LMc`0_0EVo=L;
%Q[jq8,kZRm^3sVo0u)S?E<i'OBBtK1G%@d=^51R<nT&CQ9k:g<nTt(`g*HfGgJC+@Ga5fRhI.UeQc2AsQ-LRtCe(hA!QQ]Tj_Hns
%+dk!XC?dB%>tF+Q&Z[_"A[.=l^9`[;2)Yf`I,P3ATLpHEm=>K0:a)7:%S)JDe<,S44<?^M`q<WS>\CVdARmuiKrP#q+Z>p1N?l@X
%bK/ZgEdb?m$22>L%_@HiVgWkH/))Hr_aI#fVJ9HM);^I5q*BFO@G!r_r;e%,Lr:qr)/rYak%#0g!<E9uYBSpE\^rHph`er80U5k&
%2aPT!cB=&>giaN/?6_8*n8D<hM:eCa<()JpJl&4s9M`p\RAWL\RA^VCpTb^6@X'%Xdr.)\E/`/^<?oLgR!@08)1nnLNp?\bW1@BA
%D-U/o(iT_>GZB.PW946OA;\R91+M1TPq<)>^XcfB$&O=+O_-.[aE7Ef3+,Uk@ROj/]=*o&TuCt%m%p_%i,W*]iMm6hUkT:r2HR'q
%lP_OQi%,H(<+^+iVYpW"Kk6\_j/sQC%!$`CC9WF$#p[l"N=n"jj7bqkR4KN1GHk%Q5M7/PaPpuN*V!`o/.7A_@,_MQ'8RqYISt-_
%iHRO]M5nk]W[8N]M)mgZC<2L<^9.SmC<1c2$&_b;'4WZP3uLVEJ"_Zlhdl,nGNXl.17;=+E4c?d8&81;RE5!Oml#tO1:=GrBe1@/
%(;jq@?(HBiiAtb<;m3B.9OCW]E:+.PeMP;mpp,?@-\?A7-^pKC]_PJiW0<I.@1^PE[:MoI)8g2"I2n'N6E3cpdis2hTh-7B%Mpf.
%<(R4k:RHUD_1Yago$__QWf@K66redM=e@?O3kg'V_5JSgNk@c`+#S.q*QK'iLTqSWBrZE&(D'4HaYXuqnMIBuCa/9Vd[2M.!i`3'
%@Q1=.`+?K^Wqt20@JG7P>lSO?nbC7%HALO)3hu!FFVu'Oa)/NJUAA")e^8:oa>,N!cb(pgFYWE,clVn^O[SuRb/c99+hg5!-mM*h
%([-H*bT@=:[^XM(\ti1o-7VFUZO97=(nOJ6rHs4ua30k0aq8,IS7%"o#cspa[Xs[<J;WBaWLn)_i@\e`?e6F"#6Za">,FC&68G+A
%lZ2rOK2F3GZ6R?c%C2'h-hJ$@1m!p2<l<BdcmBa@'d>7ZOG.4EZ#-/V_#?QFn'WH:E[1nX"mA23VLb<B9C[H^)dE]J_(5f/oWHT7
%"A$=pe6o/#1&l^>gtgsXk)$04hI9Mc!_kPj9>@AK:\\pjVjZ:*,Qe,m'(mD9ZG</(b37Z%j>sdmGO.*]iRpo1LAE`k%pA:mj#J>h
%)3YJaR>s\@BUDG+eWlCi2UU!]OnUdbDbJp/)k4lJ_nijX)&sLA#/,"sEC!It[7MQp7m13e+d#bqCoPM3_Bj":dT[60!K2mBDV$>r
%TIdBXG#8Tn2g`i,^5/1NmtF17].7O&(bT2WYugJ*SnsK:%QA2Y_H7DX-aUMKdrPFqD#oV9$*m`:A?]-*[MW+WSu'FC-+\^t-7"^u
%_\S0]:(1[m0D=g5,O,1+I3<9!FR&!OTB25i67%>`1:^,;>t,+Y0aWh5YskSuGThnpn[ZqNn%fb@/h[Oh=@m$k6G"#WkZG+#K"'7t
%=_)$\/]$2Jh7sCmG*O=2)2kR^U7%o)$]D*;a=1r\V-?Z3E\:Q44IJVBTPS$*/Y4`j_Aa7.0X1u0<Yh+$:M7KNAWcKrpt!R^$Y?aX
%rN32Y,3$GJS+[1;R;$1hPQ&JmS`s7=63`L*.@YHVaI:2&QHN!@M\_T7H/P_OA@MV+3#r^=9"6G<o%m3ag5Qs*;8!E^:Pl-+.Y\:s
%iJ'ZGT#]tBhCuq@1Z=6(PIc%_B-k1\V[+K-\8]+;gMs);7Apt/=dLVZQQ$,H:2VS5h80ot'25@X\kpK;CUqf*<&"e)0t.gMXP9'9
%L-c*KF%ReA'F^1V-Ne/F:C:7FPV08CCVSpCkHacso/L7cK"O%WON8aW5=Q7Y&JgcXb6n;3FLE4]_PrQ.3=CbHj5rQI$<74h(9LuL
%)Uh*Uh:gtlj)RL2)\,h=5iIeBT[uuD(cc+p@s]TuiI`f776tu%=ku-tX%6baC#RNf&fHeQ^6'rn,Vi,.LDnu8+qoD2+.nm#\?`0j
%[7mnlX>?h'a329d-S']<P0ZbqK0:Naefn6kM]E%;1--qB9`'ABaMQ5!&t-3VH`Dj]On"*4%sjnI,VnAR9B\4p8?dA[,X8L+Jr;$t
%Opnr&W3^KZ%MDp"S171M$&L2FYs'-QgoQ2NLElhH9.cW^GW(Hg&G"!=>J4StL+A0U@/NFr5_MQQ8%mp6=fXklAGcq;JK_\14<)ZD
%'s#_VaP(CLX!oE$3+P(TiJ'2[Mj$L4#^SWgaG)QQQ-!4@>IC'ped#Qt+OcFgI:T%tX\,AAXX*?EK<286FNP_qjF`W@<&*lUGlfJX
%Wh0t^&V%\5o4F%HV0i)ec"CV$OJcRNX(C/SXENrH3n["1;h2+h:H9_6":*:_4h2\%'@J$5UR9CA%LsA*Y.J@:j,3)/643@"#BNMs
%nDKC"H?<.S&e\?O-Y&\MLIi[W-<TZJ[;-BOaa2Y:iJAg8m1ZkREa)+GM8.rBdB@:Y`E_VlMKt<)`36-\3aG3!_fp(BhjUo+BcsGn
%csk34\TV`nb/D$(;97\2m,o0dgjjX7_i?Fllk>W5ioRUM,,SKq>8MZ!Igj*D6Dr!SIn]4mk.B<+56h!.96]mG`#dZi-jG#*4TA[Q
%*\3j&m[7P76]&1HPF_1<XK5Lo<8ah9K'IZ#a'kG'K,4l_7g7sI9dQQrH'p5o5pN/O<8<(.c;"k;r*6?\.T]:JP>'3<C'X62%TO#L
%R>`(S!>>rG[O4^WR?GZ86dT')]VT6N4/Z16>;n[*6Y97XMW?k6ON>S'OBdcpAbnmc@.LUk>$,<SldXp!=CepuCq"dHBctLYaD(kR
%`Z9H=aZ/T7rc)($A8kpno7JP]7D.o(-tL`>5nA!=](WU"E3io[:3\CJ9_:`/#K<`Nn')SD/tqTeJe`jc%b,ku=:qnZ.d8af&N-UV
%$UTm]<foV$RjKUb9p.u)#%Up)Eb?\7*Ds%=1(,AsUh[S.Fq/+V@$,i!Y]<-7O$P='DL2SE@coC+00G"E[5]IaiY3.3X$C36LRo"k
%XLri*[n6\#5eO(\%K!J/nq8ao#:l)*dtOMqC]JZ%GK09@#gll$fY.K&5SU<DIC\iggY$&UdIL8`&co%9"M1X;f$Z.O2stPFK'1._
%-pnRnhO:4_TjM@OOc!6d4[N1!&5V\W4-Zb>OWH;DYMDu9Q)]R%eJ&gHA//"7F.)at4rko!G.-.P5)h-?b"\tSktRQ=erHJs_V7um
%WsMaA`FP:G0m`nE9:8X&3^p+Zh0LdF+r;U"0T9;tKh>@/Xl4#e/PNe7S\p-g<ho^TY;@A!YaX,&3t[^O@$NbA`-qtoH2a7iBPlPo
%S>8B>14D@9)1d^P*,(f"@KKSjTYj_s"@NEpkg^SB%MSf@M4IZR%+V-tOtkM8DN+q5lK\#lZo>+Y6j5+4T.IBD^rf,K8.7@SekcZ'
%<dYtUV9<_2a3_"Xe[#p\bF&uW.&NEQ9QMUa)<V*EYp_T0&ltOV`[^>:R%f76(0[i:X%65.^`8<6(/OXU'%m/E_W(Fm"?^fN2XgIK
%Zp,sBR'XE&9+E#2bV#/5R7oAeqbMV^>dquKb.US2TS"tR3o_fabtnZnImi1KpsKe$?L9[iq(.:LLFVlFHDi?X9J?(0M!s13aT-/C
%P#_sQXF_$gdQo-7L+%d/-Tm*:86,`'Bf$`j%-W.9!q^5g3-=Do9JU!d6]I:$<qrK62cMOV?UYrQm4WVfWElr-GW(Zm;ea\fE4<O_
%)6\`c,r>S?.Qm*P8LB']4Et7EP$p1>`SZiucpFf/c3U;':U>ah#BN5HmD1%u-tY.tGb)iN]:U1X>8a&ba]kUiQ6)g6\M=E9DYO8_
%):Qfp7(47C1>lN1,9IVOP_r?OHoO^S$_7\VPtF'0Pr=B%^7WV7BMCq2j`N9U\en1c^?2c-I\BWteOiC\3Z743`\uL\MF8mCmmT-;
%YQnrcUraU8+TT&f/X&muYZpZtfkO$RB&R.QZcNRJqF^Vt2VCL?3_td$Z,m>JKR6kSA:Yt$`_-3<B=L3k;?e(!4I]%LBOtcUY4ef:
%#?Nr(:7%3,$$TTb34LheK;irJIKgD#+@D(skiuleJQX\+H\WJ`!8#:<CP;&c_!auM)17l?4)rA7f40YAOrUKkkBbhXi2K;Oi_[J&
%*+Pbi7D`d`=t;Vn,%6`r\`MZYOXYj2R6B(fgkoQ@W&,PEnL+$(N)oJ(k1+i"La-tlZ$FT,S`DB()`_JNogCs+ih&O__,;s`"hn`B
%<2CWJ?0UKcmQrT>KU:UqQ$UAp_ke(dXmQ>3P#BGZH8K(hKR@a"Lq&eO4ZD.@/6=X$nObuS$SC7UO)Vo"_nFI1n8.M)E0Yth#Zj+_
%>K)i;a?IJp00%*s`QY'X0p;=*lm()cXZ_drk5/s\$g+Q\gp]tSf4"t;5ejJ+O#WHXea((9Jm6-Wd5ooM.-2'&$=W=*7`Doag%s[<
%oHPcR=YPke*q7l6mA1KoRH8b8@<Fe-'T:%aEfVuJPI"ri0ie@eH#"%F6LW'8->84aeIZFfB`e2Q_(;Y#T^[uS!S0JWNq[Q>MQ<1N
%38rHV(ubOTAqG&%=,,V[?2Rlh112%C4=A,ZT8Xl<Kda^d=!h`3``Yni!7)4XYI:9X=02gdoJOpgY:1rd:kk+c5ZLgs`@,2PBf84<
%a:lBo$SfkGo0)Ykb@QsL'oO,^n7M0tMWL3R]rXB"We@[#_fNpXEi`eW%Z,-TE.1D(co/7)8Yn.4prYA9fon8U;>8_LI!j(8i!Cd&
%NSS<]BjT#6h@Z'^]F8mR><&&<*M53kH%=rgCU*$$f<j8*j<`;,XR,P3.V;[TRme@<F5=/b/uVG)W8V!5dF_&Un;!R/Br1N[mB;e>
%Z,Ic7?BBrI:7J61KKA+DKKSH,KouZ^aD]*RV\Z-(/cCho`-g6!iApPA`@5:\JE$:qh@;haRI0rM78jO(bK9m7[I&WH?D`[XLL`5-
%P1;"FE;Z!C7&,;YF6.-f31NaMJJS1U9@)0UaqO=SR%D!Cl&R_']sRUSHZ?u87oah;HPWk+:7&(%T$+H+XUFM"?m`frJaR$5Z!^'>
%Ce[+P_K0%aW7Cc_c1!Upp,LTnjSFa)>OQ>jf`Ag^^n\Qe6t&TMOF,m"jg/tke6/mcqaH#tY4m+pa",gN.*'Wu\36dT(^`<(Q65dZ
%eT&E1l4[;;Mc&,14K@%7MPf(b.3f.m/;kAcAq;Xr2G8351h7:+!&Pd.L.DRrhDJjS3hl&Y?4g:E]$-Z`(HdI\,7Ym=_##!rM]M\A
%BAISt=d5AmZH@d"CLC#klm^3k0Mk16g,)M*lALq\K!'c.UW:3XT.SEM!l_!?$b=THo;U$]h58SFhFZa]%DLDd\KumJdPWIW0@CXU
%5<P9E1Oc-E,+!'mg'VpD>;?8X*6EC2:"<1lmP:b^TT^8)?:Z8=h!)>_P5=^%T<EF:(PfmlhZlM.<u7A#Hrefgn2Cf8%2O9!XC(?S
%.M]*f`8"aN.,6?[4p@IO@YL8U+!AWDgndP\BCjCcCn5h)$LA@aknm$/8%)M/p81Pf+[#gt"bdgkqSY(L!DGNn2"7Zm&HNlbTVU1G
%-/:V:bLQhmanit")+Va;i-7ZlqL&o1m-'Zm^7pj%&I]+pC.7'2HCRtc,%OFXA<&E+8g"95f$>,=Pf7AWn^a/$^7'4M;p4_:c%a(Y
%VIk;DmUm..cn`?OO@d$`lGC8RQ^aS?@(k&M3BQ31)1U#>J4Hb1=tMQd+IZR^_sO+Z$09tcoWLf14d[FHQEG>7N-g5"D\qKjA<?$P
%&6%7fn#QEL4eJ#0b+U#P4B`K0><<<dAV<6\A-,f5eV(8f8;8LgC<Jmg.n&C-B(Anj,f?f7c2-@\$1<)tToiY>18/?30J5ICi1=4#
%]unLpFqgo#KMm)+(A#'Em<7k4G"jHAG4ranH"6uB"fh*=mjKm[jP0jeXO)h(/3-ON/Hp_=?/`W?5pV*=A5*PSR']\cf$.q4=_*]h
%(:upSZ>d?_P'*EJBI&oQDTu)m9t4`]m(UQ>Yu'LXY+E;B4"ks^Q]*p?1!/3jai*&5E1h0l33*d\%i1OPacn>C@-Jqr8`f_<7?YVp
%<NZ9!rb\<K*R!,RDu$Jn5Bp/uC:J;shV3$3h@;P$)7a_-OTdkGA27V+SL;5M+:Y#u-n@IBOqGE1K]8qp1#b]%V1.B<#?T,[\m3OV
%:Saip=-H41#Q6rK9$-Sa&Hrc#M73$`k5qbm[Oue[PtZ_6X@0Lc7@Q&=<[O4WE#"oq9JV6e&!'2CGa(e^bq=,MN?%(m$Tbl%7a\ha
%dok.[g'up"c[%O#3HQD+f5>3=2D'Z1/fF")Wr1Pu[A7$cSK#:n9;]uH9P@\AA.tZ,1F9pcQV>d*[3%606=`5;PP&7-%*\ns=,pFN
%@-boV=^D==i*=IIcI[GEapX*"&]NOFiHW&F"/mX.o>2jG"Z984)g&=+Up*Z>.mu?a$@*]9KIH)qYfZBUKskgMBW&n^G@WH3XmU0>
%/t"trF!eXoJJi\d`IhK.<&/!9O+LtNqh6&SC8.8in3e`Dnb%GOKWEeu.ENj)BR]+m]k0qnpseon@ptOG.HfD<2lna@i2+ZBC,F2Y
%4"=BuU[2MC(mbXPba%'I"rguj`A0<uKM?&#Tm@S6<fW]+UpeIl$X^guX)]g6n#9hOpMclr(,(@;a+XSlf<7dZTmHQ%)&r;!W^#7-
%9%C]6^C:[8Hp$0V/YA<u$\Je)L25dq-5e9iPsSrC::mHcV!Cf"P%bK%3)XW>KH,@_05L_^D@jp3MXWTFG%OEBk9q3<VMa>A8'MNT
%Ho[K#K[BtR[Q94TGg_`&W'iBN3m#Pke(S;F+=Okdm"T-da\Vu>;;lZ*j*LK@6R22.OkcapAM^c\%i/8<Q!Y\L&PJsTbncc53\A?4
%EGN&WU3Jp9ag*q2V>8+%1_MUQ0ZcH8BA*,8]-T53mBZE$o9j,)F?lACj[(4#AtHT,$]iMibi$>;l9V<_%sfdldoX7#PWW2Tm@#S'
%Fm@lQhIbE2bOK,P[sV6!0Dm93)%+C>e&ZJtRq*VB1bs'+*"pHnZ-p_+4kV"ih\NNEY^=PqTojWt\ZF>#PqI4g,qNZ;fY(\^/nC)i
%bDk_[;6.b^o/LVNoXS/V=ap9s;=M]]1$k<=mBH,tZWUhK_dO/$eL^Q]`kWdT/0mZ()i;cCfF42*\<=r.&W5/D'Ok19/X0B*N$<S9
%(D`FlEL%]JL#a4DP*$mbi'ns_E`j@D#:GQ@Kab<YN>I%Kf+R%(2gbXcN7C`las8tuG$Mg!Efc5ML?U!Ug%^7k#/qe<DhqqW3qb+D
%m"IubTBi)g1(+T(lMZQ12HEU*M?:gb,XW#LUO``6Ct9.U`P3?9)-1K@P[W.Gaj"8,D#Nik-5l]L@n\D:N0Td89IH#T'3CVi^*/ZU
%X-(8'#EK;'Brj:3\7,/RJ9c'mTS]IsF#WItLK!3j,a&0Lh>+`gS0dB_YtE+`$YFU_fX#`OWiXIr#@BnGdsnGH.Tqn>=JUl^Pq:\e
%V-9jRG>QD7,>pFa0iX5.q.-\'R<bZg<?0#K).n9@Vbp%r$<7O]L3(ZdPIdB<UK&WY6$=P&]hGTam(q8i5m&?;W61BZT0tI6=NP:J
%a<k!+aNZYecjF#MP=K5q&WHs;d)a"PL_N!K)B"=$)HBLHl'GWp?FE%B2N8-fD6>YS(H\KrOW[e?A>n.^FA/Bj"TfKm,PP,^A7h,p
%04T_O2UGu^?#@)(+D5W#40>)b/2FmX"Zj6?YAH*O37VStIiU@$L_i)m1_tOF;e;H#(VYDi-9m9+9qL'C66hsgf0^iim%BJLFe1bX
%Z%PTd,0n`L1L1E?fQ(<c'5Ii%bPU,]TT"6$-aUMJdl:9Xd;"%`Ctu4<G,b<e"#O%P#E$!5+i)0YS!eZ$nl9PLMZ8;1opeQc!A0n"
%:2H56i(ir:e*pm5YP*dQ=F7R(e/4n:oEBV+W$s.$U)Y5RLr(=UH'*ha].<W1Q`UXeP45MF!&*tno(AlnU5l25VHeMo>0SqOf=eJs
%G/C*3T8f&dN)A!q^e;6\RO;duM$D7?X14#NdoFj,#)j2B0Tqb/Mb`sIhV$8-KCNhIQR\70=RA,LB$]27"OLSeCn:'#^(e^"=8TO3
%ntL?JP-h0G29CqWF^sh3!pAKr,1+n\n7)3<*_X@@<.;dVrSA$Wh3@+chIZmrEElV9?h.oA.3/+XjLC`9>jq'iJ![FNA+6sR_?C+2
%0?P5LQ,'mD*=7b!@F(CheJ.(T.8RmV*3#sC'%u##ff+[(>M(L7#oX)&DIT-,d!s%S"KO)3_SOK"^3@umk(j\>e=p(BKhK<a03]ed
%LEa;(`2fKlp"g`Ud7i9GCtqqhDj.J+4"f\uc#mk!dd4#mO^B77=i'->q(c/NIc>)NfQ`_8_R02!PC%=B$W[eh@,F&ABa_^Wn9a>g
%=mK5_->kl!6!ouT)_X=?/-Sa:cQmS:qajVJlAB2WRA;7p'j+%+S>;8*%If?S*aqjQ8/HjO7aQ45A3?l_5eB"03nMsa@[fa*ju&cs
%oER$B#d8q'3Tsti3i7"ld`9F2k`Pb1Kg(7fi[p^8@T$UhKp-q<<mUch'1:2CDZ8c]T65gbbUF_?4191]H[>nHs,K>K,]5D)'DZ-g
%\KtRAK-HQWKZ,etA%;$K3cN&p7cTO1e*eVbA$MB*/W*"f,(C$fB!6Roj6l,pWO"M^_B3Pn!GsbY_p@Gfed9["O't!s/3gZ@at*=X
%oJ,rEaH[rT[dJfI_&^$uO%H0Q!AcB^0XOYF$"u2Rl=HBdU:n[kjDmU/"-,:&^ICaYZ=^+L$$RrR-`BJ%<(h_A%PCs54I8,VZ;AIQ
%pWVW$U0V?KJ.@quje[J^mB!Q4JG+H$G3iZCG#,'<W`65b3Mg]#G8.h>W+UAr0U3TXaDG8T=ZN[k9ruYY1,4Wd*L!^TE0[UN\2.lZ
%<0aX2\?gE\IhRO1`$1ng#WYiFWsJPA><<b:T:l0e%frbGQ\%p16MW+^$Qe'CI%br<j=q?LIhVXX^k$-7hhAJDF:Iec.\V"Y_fPT1
%McUOO)>tadPup1,<:-aM=.';7oVU."D#F[L-<>Upq5RT4<jXMZOG\Ok>dhV+M@clf[[7*i23FnN9\^\6f.+pCe!N*YX)Jehah+?Z
%XJJ^eOkMHm#<\>G-]1_'q$'MKMf;[i]hHkEi(H&5V3VU&WGLo\fHXhrMaCD[_2GPM1BDs(pHnu)h?S3/EMrO9n+j&T=2cM5K8f3Q
%p!/NF1aSiODAAk97I-_KDAAd[NH[lB:./>lLf1?PFfXZ.<DR*S'@<ALjP=:Kf]EHD6Zf@gB#LF&&^d_L/;DfupOI-]A^8dN(JV5K
%nnVN=]4WKRLKu]aK&7?Cc0N'H9[M-cWrf!)c/kp/PmG>DPr/26a<#(tI'$"<naDac[b+7sOaeE(O+@DCQt03-V.[DQ<QV7-J,2O,
%/;M4`o?f(JC?_dtBpQrn!RG?*M%gYt`!J6DU0'ilmF\^A;+_P'32b;#,rnu,.^V9hk!b\Q!c]5QHCX=MIiWI'WIif5/Epu[pO$#U
%X&KbiX:q/3QuSK?UU(;.&_YjF1o^g^=Th'L-o-HDR##^_lrB_f":pF"1+&A^A+LAZ+/[KB@RiNf.9$GN.O2AiAW)@Pe`8FZ@/6sW
%<?-(UC>M\2Y[ruCoB_.njSRpM#b]H3>O::=Z_o*KQG%FK;jo3TbFrVj-2,id"(.O/#qn&5ZZ*'G-JN8lEC@5hm/R2UCVd%OT\sLi
%nsDhPWgL8BbB8:(;J%f^7C$Y<qRY>:Gi?3W)JDDo_MKciR74D2R_?8RR@B@>np\e_<NKZ;kME)-do<3-g?`BKj2A*>&Zg<$TmXi2
%nY0sh:NjJ7drKorp0]o5kRee9KLU;\oS@IG=C/Y)<O"#L,(ZpVPTkjQU]/5@"u'hms",na71@kAm!Qofq-tT$GT?$/nh:i+6+I+A
%\d6\SqglqGFK8LIUSH?$6D"j#QT*o\-diVtPf8TAopLGI+l?.V!/h:LgVZ06%`I%f6Bc.0:BmQ[-IiCa*i*Dag9H0[dHRt0_Xj]q
%Zgr>/"G<h"OL53^[;_*jcrU4NE/b9[>dOY,_DNO=ZP=@qKKbVJpeo^<X"iQ=F.jLHE,s(sD(!j>#s79_1HM#QA^`DWZR43.p?Vp"
%](QPDc$R*>h=+ET,7j<t5dq-S.%@pHW@rIWN<Bq:%V[@RG#p;I5I$*M?*'lmb["5nhiG8:Af(0hqh)A*<n7Z-`W3MS.\U/:bQ2?V
%Jm)Nk7R8N2$$YIg)I^IPDQ$#-)AYJ0>e!7*oL;?GObtiW3/6C,7ua3ka#<KD'c@$!7"ZXq//1[+3VZ(XBZ[pA%Zd5<mAuKfSk(f/
%BO_a`]\Y`nWFR(G7`@J,'Z7QPNSrAKh0ndP!pZjdj+`[_KGJ\"ZksBr/C^to.r&$Xjf6NJVSr;H3Mkb^O0EWNNU.>.WZkRNX[r0R
%0j_:PpaWS3Dd"[MSnnOVB-@g4)b%K508HtMa[STCa;\.l0"6XL?L2/H,HBnpGOGX0B]nqqo:F:Nq1WL7=/2_:C*#%';S5U[&t@B6
%('5,qkn\qPYG:Nr7OUp')(Sr:7i6)bM8gNl9bn?%Kl"[.@SC:-Y@qWPaUTO'*GhJNr&_CD8iPb>@hnUdSdCh)?Zob#2VSKklr:iY
%DA5dgn:kf`e@/?LP\u`Mf#31\Tc4/a#*ZbL-8/g[9Jrha1kET!DH,uYE0P>ch'e`t]B:Ohh$@mm;`njDNDTEtWD;$m1T5$EgWU&O
%V]/dg-(Q%l^/:POb%!)X,CtPI;,.Ef'<N>QR95,_2h>V7C6sB=VkW>BGOH39MT+K-q4>pTHDT=0^0:.s`%Q9RWQ?Q:0TO.BYimQY
%@3"7Bc7Q6j9"`i0*[iY",Q(`IAgF\gUIh&?GDdJ!!9N?Y@2r_60YWVg'R+oP,mpb,N2'fgQ)ff@>#P$pN>J0W3+>sYB8*qI=cOd.
%Q#\.t(VM#AD^\+pCBt/RLm4ZjYETR^WkoO'aoF"_P=`Eb*5O@p*&CKQ6<-?,.7\r,orLE1(G<;)_Ppj<V6$N:W&Nfk>;ppEk9pUb
%0Ut[(YU:1h;:^lC?7kCQQQkZ"FrrX'UAd($VAD&2Yge-a((Ilh`S]GGQI!^"U"ec^(NI0q8lqDuk@u2C^Mo2WaoEn'l/3Q?"Jg,D
%OUt0mcR9m7JUDEsn7t&2B\XdL9K[B>Z/]lKPJgq+UCjiO3($"n$@L:r1[?I3dCf*\ko*=qA^PgI_\5U3g*N7Wbj\j',&*DtA/uEV
%TR_K0=@Wr<:<UHk,3pYOg5>AQ(Eu_@lL!ua-o-YP`&bc/?RF$VXJ6W^o4/kQF*I)c5ZQBtRBm7RXuul',%%cbGV1-A$@87&eF%*:
%82)T%R\:ulie>:ed*03^9)&f"fnBt'JRE8Li4'*QS8b:CN7+$1J*G,f+]n7L'KX"iZ[c7K<pHcS))*^M%m.Un8T<0JTIPTt`h8Jn
%E`5=r?uD,)-NOZ+H34F+-hr(f6RP2(U%Mm73,?r74[3fBYQM6@M'$TC>*WlZSYi@SOO=/XO+FqdS@pi?3"r5X[lp$-VgR1/iAljU
%`@G'^eM?qcdiPl\OVj#(gI)-1o[)N7WuhP\H5C1#nJCm>V!a?^1J=_TY;=rO4mLOpftt+k8mSe>Jkmr9hC?9cEmpC\DY'?!P7OiF
%)lOI@UMEc\>d3B15<P9riDA-iRHD,ZhbaX+9k7k7,X_s0YhJuN9\^ft,fZm:h%=c][I-3T,JnmW4/sUYg!"i7WeXe+]=m@5&moB_
%)eKlc(eGHEls0d>Kj.GJA_"ZQ72r)Kq\hTMEi$S##eum3IhO3BGSkep:;g@sS]9qB,hu1ss'h$Sa9^?]iD,#88!Neg(u#N3]IP64
%!H9,@pf&p=c*_1e:B\+DGRcN>EJbI^/-d\]FtAX*<T?]E\8N*R1itVI$'K(g49R)UqH9RR$/YmCCR4Fj8qU;`=@!'Ss.8ASKn$JS
%1f:PBnT/?4nsU[HgAKaN'Z<j)\1'jakuIpl/R>eKG](qOH;O[GQ;!o<]df4fOPOGPTtYs7r)Q0KA?).SX'/O]+5-laXR3MkC=Qbu
%;JYOulMD-&)BIEHS+h;2euNm+h[Dr(Y'9$0qR_uqRb0NgRSgeV:\s8c25@Ee-Km,aV,$h9r`\oU7VAA>pQh6<M](1@/;unqYF7.J
%(T)H-X>\fQ)otW]=*nl&hHZ;F3q`_4K:[M\*,<Ke;?^`Felm4*p7V);9YK`,J)ftOjJunge<K9me!3m8<m.MS6`GqP-kg@#NHiX1
%[W\$8leZ8h=%s++kb4GgeZ:Mi(<(QJD/*,Y8OH'i8&'^U;UT.BK]dB\U`]j2XORZ\;nHd2>3dG>M0;lS?S'?AU0Uc4:[J^aC>Q3[
%&cD0_]r<d4qu-Ck4k_sMm6.),nuCE^2bR-9SS"u9.0Hql=6VS&n1g>?8p79HBU)6?1(o9b6IBNXPcea(]fAua>+-1>>;8J',%r8b
%'k%f6E)gJf[]34r,$[RR7*^Y;=,1bF#l-2Yqo_]PZ#c)-oB_%+,lHp=*-Ck`b#YcjWGo[I[]6X?EX]*Eh5Z<pS+R4Y\'"4Spo_7c
%?u"\;6((QM;'Ze/Cgl&(<rSe7'g]?Mmn2go)FLHho."%bo"]8sESIms=rCO/4I:d&LmPrQ0_5o&[b@S;["LCSp5&dOg/LG@l+*T.
%"Y&tSZBpSLZD,(cJP%YY%Fi+Ufj&$;AOk&4C+jK@iDSWeZYK2#\cp#735X3opPa&Bkfhb,2G0$Q8q%.?+^5I>-c5*Yr-!iJkOm+p
%+K@rtB<fone>CKjCkl;>-/^?j8lp09g_q[LMt2Q=F7upD>m7E$V`0NM_<aLX#f0^67cOWQ2U66c`>KdO/4+q)mP[EHXYk4LiMs2m
%4"!-L\gN+;YrU6m,b)c5>u2[LWELD\+E7o5)69X#9'q@c)^V`%+K/f3OV%g=Ml3fq_Q0T+^d98u/%"6.d`CVoIn(\MjkrB,j[(0/
%pPX&JYkAHk\M[X#:3[\:N%XX.:WIf#RJadj1f#$Xe7n>#OTcY++st\tMDlrCN8HmpMp*kjTK#[-_ZlDt3r!kT"0/Q1<DpE!TQ@_3
%?W^k.WLGAN#E'")iDf>a@E3L*52#ejMcaNREgXi;Psn0lCrCo']@f=t",k$(>?PLUm&?<b>mtnUeTA)Uk`XcK`E8VZLIjut^ZVpU
%@[''q2etgN*bHkrWR<hk6mgjEY0=1C+qk5l-G3R96A.68WQ5oepaN?:I1XA>&39:$U`-Jg3^!1IJp0-HQgi%_);\6"iS]d5hON@I
%/q(^ClhY2Es!P+m-AoGknlEA9;G'a$*ifG=2aq=#oJ(oYR\o@B+4C;%_>&IO$Bk[_<.%tf,'2G7Ve?:AK-/VLA/IX"RU<WEZlCq8
%.,(=&1)?4;Wp4Vd`FNr1c!RnSp`]n[0[P(\c9E.V@dfRU0k$0k(F!EZL0#_#*iG3d>?I;&A#@P9D-6-Gldp/dMSUA2'SST_kHiV8
%+A^t@$<8#\1Q$T-UE:cq%042T#l4Q1ZJ5c=%=t5_$S)R_8AY*.J]uK!&LnM3o#(UMO@J[0@Y[?\Re3jMhF'*lf;+I!d9o9uPWd%F
%7dB*koElPpe1Wlg4IJ>:+RWK+X_&.6R^'%e*^_gP,X=+2Ntj]4a.oCbea!GWTjqWJf\1-b+-a(N$EP]RK4m42\<A(Acm]K,T[B>Q
%gF-UleC786144_;ALLotL-7lmQ^o(e:EbXLLpoq"#,RDMg+2J=*u$K(JTT>P_n6FWH:U.s`DD^\&9\fN`?`7"hRf%&2TlAm3Ye@6
%n+ee$8ROD?H*p25l!am<cH-("ON7F*:<G+L87Y!n/*E0c7]9fiR[sb@$pW>FNCF\IObC:TWuV<^$,hH`L-`^*@)=(nk6O4Q#\6,7
%]tE+f<]s(4qV[2E16rJH"S&[-r1d)iPsIlUF]':C_B=J(6Tt3OA<7r^>:8IW87?0T$3=`nNej_Z+3p<u>fi'`8-TsYd@Hmk-66L-
%gq8F<\P!710&K[YAaNZUkXiDQh!e;X1*E5m2h,7t_4:'g+Cg9$=SeFO#.pL*:(("%il&[*liC+ie!VXCVOF*d[Q)%`dk^p\Ad)%*
%3:Y$s-JNsBO+eMb\ll:4\KU3*'U-Dn,fhS"&RN<2nAL-Ub`e6?I`H)H6\nYS4mm:(GeLSIY(?k!6Q_4aLX-["HFH2F"4)A!^KRm+
%2"6Qc9gnstI]c0sP!9/@F,^D,D;'X%?#KFI!IIAf4qdisYU=K8A5`24M0RoSADOV9%74jD>df*+2Lu;+fZ4-GX1(@2M\ks)#l(dp
%+7q:42=^`[ToWW>:l1To&r$UtGf=F9p"O$C/b\.hmS+S"(!#n2e^6qe(q^bY"'G>.!RnKA:0K^fge5bUXV\^%5K5f)X(cnYi/b^G
%1O3HH+,fiAM\+^\++l_`Ppf\dTAmu/?gN<rFg=f/pPEod'2NeckHbeNiD*h\a"?=7Ke2479pc2Y+VPee*Xb%s(h<hr"=H)LqF+p%
%!Cj"XM*`B/">%PjC%RCX;*!+=ViV&r!\@k.j[@gU2ZhVt+Ub5'9$lWc+WGtsQ9N10>'bq(Rs;t(UDofL+Tk!\0`kFg8Jp<'aFJte
%jDW_f0AO]I<Z#A4?Qms1N5&KMr-M^3X[YP&C:AAa5X85gZ8o/@q8M)F&h/!#a8u].W]J_JN,)T_HL$0dU6%g.qMTI+:rjt7fuig@
%:rqXr7$iu3'-W-a1KA8D>N=u2C<%j3Pq&)V&bb;JDdN$<3Nq3e6C2c>Ut7/@*2jT^+5'rk=M0mT9gX[NZA;LV,6:J_6Jh(V$-%4`
%O@?+aGoDYl-:8+(c`8'p-7>f$Ke1AqZ<`DUQ3`<?L7,]JON#;8H#(`FfO*ZMl\6d-a<n"&`O'[,#RW6$):^52M;iGG`EYB5;$s"g
%-tL5#<G,oPKqX'HB;uWDG&%>IXP;Wr5R*e4`"*n(A0gC1`kmKt+>X:Q`(IOHDV/D8U.RIGXDXQt<>;`pJr5gg5:C'[?<g/SKoE2o
%`TS'AR;bO9L+-/r+.Z2N/8c*"-d1g$6(X^*AbMG99)=6&--NG\9%.7i,Ud00&BJr8S5B#@;FS]A'Om1A_kCI+Q;C1WS!OPhCd6O"
%2IgJ_9?CR.rpsS@0q5O^JMP<P7;Xm`fYJ\g3#7qC#%<U5jDdo>qpqoYqrBD72a!QqQ>h;gpfm,4@sGm690d^D*_@5[JSra2i-tnV
%5i=H.&BOX)DRQ5!Nl;b\=RF]-'Egr.=YL*C^^m$7NDQl!r`DSAAlZoUW,Z+$8T2<3"U),I^XnXHf5YW#\$`GAQ?bIrA8)dS'*;=r
%j,UdUK-rRY.HVS][Xt>O\`&D0b<UiI$]N>'4tGk6iY5].2cTMSZA`;$,ig6pOGOFCO"4e+Pjs;0ZR_!.K-Z\31tODcJ'8*WWTm-O
%U6K1:.E"9Kp4u'Xnr`:9)l#lfnsKl8/4$>)"lbb2Q7V1=i`/%EoGCf1Hq,Z])kKbH)a>rD5jeqh8V@N<jb?$dJFA_N]b8CAr>La"
%7MYd9B*c0j!`cRXf^<Q"NS%>/=J8q;)2#em:^>Q8^NcA?3I&'/O5Zl^b$F8c0-Jk5\87`*>lIjT3XcANP]NA\]cAC`"i@(0<>/Gn
%ZX/Mifn5tm)'r-,,0I/U`06Wir%Y;5.8;Z+)CZUjDm`Y?LI/]eaf:7CbA0k;EG>_+,t@1WLglW5$tTj`+><]1YB?i>^2_#2fM[W'
%S772TpNDT!i$QB"<ir]+Eu2?Y86-VP&t;chY*4ZBfgg"(W`(A4!d2&%WcpqfZOjCMfE(pcXKs<U.F&X+kfU*b@Ne_)]2c,YZ.QCI
%Nk,h#!X?BH6cSE2#L<iud=8HoCRAfO_5[g+%[./IJlOA/mW1@@WM2*g@<^ctW%\s;eYu9cj'ig=`P^!Q)$(^_3go@eT>m)3d;NY(
%<"IZglb+<$jD8:$hA2'#-fT=)oVs7f2d7R1l4U?MF9f&("KOWc]HMG:*AO>7pH0Cf3C"+m*c4LA/5SAe..p(5X!T"/&N-P><?-&m
%/jO;9Q8*j=bLR'IanWh&\BOJ[<NKY\g>Gu_7hi"[KcNel1CDsZ^kOF<S-sDd!LHR4/'e:-%:pj6S[%*J-;J2J4/ag0"BJ7p&"r,C
%^NZ6g87+`f.aRt;9o5oD[j&!Gb%9mkkL-/F;*/jCQeYWXW``ujH/hAm?km=^6]4\CX1[+q,mRlkV?.AppV,?aKJY!<V2tA%h)T4/
%Cu4bt8\Zse+Ij#,&n-ep,\q4<M(lseFH.DFLh":/nLHmV'0$qXl1]?%BN;?5Nn4l=B_)/Z5%!na*grfQ]U9#&o6P&P&DZY3`%aN1
%Js38sLgtZbPt'KY,`W2D$PU#^a!.3p5!'ZgR;i-riq$o/OMf/KbV<L8NVGB1A+HEC[Gdd=!?iA$o6SkAljZRum%!Q5jqs#l`ib\_
%><@]PoQJ+le+0l?Ju6bs$'+?I@"'E&lela:<%D*\D76)FVpu&j83CR/diPoSdn1[^Jf^Lj]M:S,kcW2ahQ;<h_q^e9[ljiK-'la*
%%:@$o6^JgTm<@>?J[9Z;Bcc%aH,"T#^;cb*=S4E2T."/P@GI-3*>kpF=,L*jSS1%4H@PFQcUrL,:)+t57=46EDo\SRZkjPL(nb_?
%WA+X'b_$6qZ@u,.=AIC\&00acr)sGa`oIG&`[1%F+(Hqs&kPTnF[BVur?_(jZaK5CB+jnT#G0^l\_M98^Qr0:Cq]=Krg5r$9?A]6
%N*p+o9h#'6`-j->oAG[074(sBm,3prX^%.YRZoL?6!$j?&OA@tHAgId;Cd/(K8JBoY4OGgCIr=CoWc2`mW'^qgLF2AYOSo@_c,#j
%,bZ.J9H\tGFO^N%2O8Sbkpl6.MKahD<N(mWS2725d,%]5IsO`KA-YfOGQp+q"5ISM)IrB1cT9-G\ddO*Hb/O6).c#Wq'sBD!k'Zs
%'2p+8aCF%)8GEd3$#s0HklqOU#f"q0NHXiN_5'sjI^S3Z?YTiePTra2UC7In.,'m!&9K:q,G"1PZn6<g]_$"k*(!8aSJ.Sh3<HWE
%\\(h#ApEOuUem'QX/'pXo.HOXGVqp1L(;Lk'[+aV8ei:92;QtO/FWm-Mrog.:@dS3F+f[omT^:JOgm5CmAut^>d^J?oW[$)TI@:O
%&"^s1n<aIe]F;;GS&CB9LdMS!F7O5Bl3k:[8nIJBbZM0sWnN^DA!mu^oZ",$=kI`!"-jR'(4LP"+D5ZmAER_l/)u26FunjHeI"kc
%@TKE8mL]TcJRGL7AODBmCA^us%egj:&7E>r^W/)+7G'c"cha6PFW,$?oNBJR["6+)S8OM;!T8<s3U"C6d!AY3mZ*"->pUa6@hm1!
%f-VKV[C:1ci\*A04GS$#GQd?')1%&UO90TH<YeAT]rTtrAX8RTSXND8b&.%V<A3J'WIg`o(uo6`7NC++#,W8.S^eWLGuil6?A5`n
%%Q^L`;c!!pG6@M_bYUn94$&*OhC<)Zo"fAb#S9BTKQLh]L/$Z_1\>NL`?D*?m[-,;C"H+1?B>h4(=XBEIR!3XnY;\!+G4>^UR\/B
%bk#\e7@qpfkI5h>[Kg'gFI'"E`$d3LT[4FO0BG4k6uXH;<^M)%b&WGlU+2gXoKmLp:3%j(UftPble*JA5-cSM.D4JDm0VBDnhBhB
%D@RL`jp[2=iP9bP,0L*[9<b5ALV)q,0G%.;r9T+"n.-#$!(%M.Ip24KUo1;bElR/A>#94>_8K'lX+;N^J@B;>[&nQ&V])mfcEi3Q
%!b%!!79i3J%J3o&>FN#*Eq^P\7.F2_U!:I00(>_Ls.^P.2Q?PuD9l%t]3MdNGV9!r"meA!S.0P`Uj^lm&+$66U</1R6)rak!%PWE
%O7S01m(W:0ms^SOG2stlAmg`>nbN#>`0ll^=l-gQdg-55L$S5C,'eUM\)[6S`b0g\P1:Bbg8+5"JBCpN6,[MnYZF)sil()A.7=Fl
%!TZYpT?Dr.e2V488;5R4%RNf)3/o&q15Cjo;_%VRh6ca+X-5+!n\V\Ti/'3d9$\,?Zec2PXW*jpp$*6#Y[_>DXnIE0etB_I7coj`
%X9't==']5ti&6Gi!/A&(cS-[SYMF6TZ%]!<T@FbZVQA6Ldr#d9g2*-6\4-!fhn`)ukep(`.6em@1N]OBYbc-N'jS1RG])(Sba')G
%k&@$IA@$X?Dg41&n!==+>Bi&XT_Ck*K2<66T2NcU>4#GeZl;IDlQQ#E?/E6WZgrR=Qq4Cn8I1)7iV]X9V4kqBJ8ho.H9u/r,V48O
%\QcQg5V7*Z@g^])&L3a=1F!bp17D#bFgWHt]04qtk7APj-Z^tY0FIK!W"5#)'D%\c=frb\6H'uBL0f*Kd=tpYW*+1;["2Ss^?NJ@
%!C!ao/4um"KPS+ikYJVf:jZ5g'kP_8(6mpq(_LjI*jh_W7k'@6*%"R#0J(.3[4%O:JCL]"/P;s"B(e*[bAGR%`B2YoedZ!*ZiNo8
%ZctY^#50+:V0"D.if+G;0PuEpZe[=l129W^gRl[i,fQu#C(-MbTq0QDc"fKnm?M*XphKV*X,4p!DA3PTf`8pd_U8h:-@n2p%c&1=
%9Y(As=NSjBAclG-9/IR37`LTZg;[TGW+&'TL='h!*_)<L,@3IB!+Y1`XXBgq,dU.'\D)I@oAoIRl\&p"CbU5_L>V8J'C[6k7e*^m
%GEb8=_Qug7HhEtDPAiVKN>G%O9ZgP(n^]+_J8'=Fg&m(#qn+3.,d6d22aeV[2,X#c0AL\e2=)ck1=Xb6YuT;-s2GSqkLs%r$"T'F
%5I`VU:\dH@g=Y`!:-S#2[=LJaW]M5$i=]U>A&dM@eS;CV!?S1pZe\sY=\6A)9^lZ(OL]#XN)-61`^7&[F1(Ps>qDio'T.Vg*phub
%mNJ,FUGRB5l@q!0#TiB@d?k"@%ak<iBA+UNhMJ2*12S?^e9E_Rdj>)lOq7C\DM^`A<.MRIZ':'ZUYjE-cXtmiOZ`j4AZU&Rn@N,_
%a:Ka))p5Moo]r=G/(KC3_5Y/+nn2PB.\Ep^'7f`Si$D)ZNb_4hnjZkX+F`pOPAC?9qPb<SODPX(#16dq]-]S%os48.(Q`L>rEb8J
%pHc5:`*N,uaJtY=S$\'XTpaIZ9\[SsW<S6rXfchA!o1u$S/V?*U&l<0G/!%DdU#Kld9[7=A*)FC]qQ.#i4ol+%0eRfR9mB](p9l#
%UjI]Ul,MB/]dDsZ[DC0<H"5g_aDf"Z?`Vu`5&B9hEc!R(f_>iR2MD\<#m<Jk2C%Kc&4,EcB2NYH>;n[*CZF'te60t'[>Tj5#ufLh
%h/Hb"`nEbeaf+N.%]0Z62WH;U/b6BtB<p#:%sQ#MiB=[DW48fGY"coikPX=obK)(H`X6]X[Rp01`Wp4E)dWu..:)^eh!e<SRuBGl
%7^jIMRu@e$ceO1ij#FlO84)[[[`LdI<iS5%]UE94Q/qu^41&C94S*<Bh0CV.2XgIC`)i[)iN%ODHG-cmWQ`$'D0-tuIZVro$L!-,
%d-aJ##P8X.L#Ri);fE(LBJ`m%7MEh#rmb>*+dRlo\kNrsAKu^>]=]3)hH<`lU"eYF3b(h'Z4r/AQ`V'q8@N#7CRG45GY;TFN2pDu
%N!d:S*_e2-)u+R@:bI,7E!YGd\#)^8no/5p1giNb41&W?n0`"&KUWD8p\a.XCOfb"CW-V=7]6,lQZTtcf3nMPrD7LFn\a6Kn]1\&
%b<PuEQ[f"LrptX9GPOH@#0+Af7*t^KJ!&GtA)2AAN%M&.To=980cs0@7gS*]6%!7F2?3JZa(K3RkU:.T/0ls@amn<A_?6Y?.geLO
%UDSrl&;h!0H!9oXMSIoRnmR,[E!TsAqq$#k:P^u0kB-:prqZR]hoC6H\,ZAub,n=T/,oje&q^lUE`/3FN-&H4j>o=crXr&F/@P?b
%ph4/bK3'$t3If+/*0k\MHGT^149XZ?:0B0$L+tUU^OSnmq/M`_ZnCH+7s:rh.ktbj>sed^.e[rL+*nDq=A#^o%A)="lI.rNp?29L
%s,5B)7J\sa!MQMBm6RZ+<cJ>/lU-/MTk>?o<>$`KOB!SJE&H9?]_R?FE+,cgZji6)*SGU@OpSJ(P8!_GX5BqbW4jKQrq*/^E;;0e
%oe6>gq8\!]Y@C9(Vn`/as88d%s79Uthshrkqg\XTs7*l'gMP,)V_N3Ub1f/:-erWPp6\:bO`2`7fo$:H^g)gQ*<2QQ/."XD#9$W-
%buicSc5\'4`Y%=_m)@'mB9NBSA$2)uPU2?Kr@Q/k<2Vlo.Cp9lbcZ8uTA+jT4PobpqOn-j!EI]*%6)=0IFIUhNTNfn]CeZ8qrrD(
%0NbbhflipSm$*FVo[^dFr>U@M960ilBmN#6(80[:YIHKm>.6re4_b6liNFL9[B['($Ur]f`)td$(VMbG-oh@QoreVf^IZdjH?B,,
%!u6NoFfpi^1#mIlchMA0V2TGBkcpbOZk%e#gQcX-hsL60AWr)C/_^H^pB8Yi->eIPW.c?(ZT[K8MHf@Trq<&<I*tj/4]b;=%NQ29
%Kghb[LWdSB&))MqUtt\,qOn-j&k_lpn5o]2LA&tu1_3PBq8d&14_YuAbJ#L]Y,ctu)(,[@R";k*n^)1\QBt9KVs!\5DZjHcY@d6'
%Vi<%rkVWMEC+e<0$TF^O)Kk3Ep^_&M^E0c]+t:.gdIe^p1fVBDPoX7TM2Pk(k-DsJ<ke2NO8\j<I2"0cY&(`LDU7KP31mc]R'PT\
%/?bGH8oefS"P:TF,_6UFc/07;gDYYaG`$7HS4h1?Q[?PXrYGFqY6XI08CDC%FT'8_i6@#+/85322RMYukt.+pHfVE'T!Jr;A_WJU
%cS^tbYL*S-R="#]q[K7iMCAp=l)%Yp?kYi=imQKDr>T>^TtPJ4B*Wu:.Crd/\GI]N32i6.c'+Ijk$KEEcTSjgj8auMb&n(Q)BdQu
%H\iN`>p3^=*;7i;p/.dT]<^i#]00M!i.<3nO7IX,jV:_&$Que/S.SE#OV<G[C7kJpkp)`TUptEP)`!K&.'s5^Ndu8P[K,*irusJ8
%l-]/k%nL8,D]W\R7np[Ws5B\tTVF3r,EMfqUjX(2gTGA)Y',A*G"Z#jlsf0?@c\>G[Y[tKbo/cLFZQU%S=R6dCi?_>8M#I`elWgE
%'U8.JE=0e%\uGc`HsV>nRt$QZh/qlWOTSFD9il\?%guo!bsd3:88tQ4ouLK)4^fF$b-i\PT"j%OV6si$>L/Fqo%-CS9BI`Qd(4Bl
%\.2H?JF;%%mao6@M1PO]#cK)`#fk2ckC*k,M%[fVW>s*d?b:7U72#=LU$IL4Dbu#keksqRR._GM[r;h&cEO5/IsesoLm2aP[N0k,
%`ta/_JLt$0U2PmP=%q6&;19d3?Eh<C@dcM6BNLa!QX+A2H+Gjdp7f?\KO]_Qj?C'P)VM^dd.P<Uj+"RHb7PGmReGqYrQ%9Ce+uj9
%ed$3#n&_`iC'GKl*qs0j`FIorLm+1L<bPn+9uWJNSCQ&N4c(S7WkC?\'Y6ZNC;'Vl8R^AgNpN)#OJA*sqt6W\f>uQLO00RLTVMFd
%df@W@5b@#[b\C3F*JIJX6\kX8N-uBjgTKmhcIAr?7Q-dd3DRWP&1T?#Z<`?32D.BcaB8TY'rMd4$W:,?b+b2/&+lnuG3oY3D-'g?
%,V,Brm&p09aOj4BXrm@%Z5tLneV[Yj^g<P>KDhtAnWCS8GeuY'P\j4)*S3DCbt`uTi+/W#Wo@5,jWtQU.#F%%`^o,M93B[ECIE!:
%fX^W)Dr.Y2F2N]A>;B,QW3TC)b]?OnDuW6]G135P7iq.Dp8%YO@V\Z]VNPATIsd(`h=]eAp/.W%]<^`_'=.j*9@#rp@D[I\TY+aN
%H;n>?4>>tJE@/N(G-Qm7XE0?KK8P`4Z\Mb]66>NK)ZW%,7u$??obU3OF,-n?ofo+<ShX-9DoX-k@.73<A+n^JSm26Zl2!)/G!4N%
%>jXKPY^$rE]BAeC&1F`LY"m+J7N3@p1-S/D]a!5R6%pT(,6@2[)a)M)!t`FRo_UlV$r$(r&))MuKK](nqOn-DWeM8SBeFr]RI&BZ
%_[D-tqa6GCoUL=D/GlSd]Dc\@O]HmAP#(bQmg,4\9NmL/s/t+PO^meP*?(cEA5V-la:07lfW@ViM\*@o4i^<Ia2UY62ub'^Hg]8R
%_u:I:p`Ro8A\6KDh(#PCO5BC`i8"6+ce(aMZL,cBj(cUhJ?@Z^Z#]F6L-U%+I"a7eifoRqm7`6pBW8=mZ:LsZR=@LKMjiiPjs)OM
%<)s$.9%7=!m9>(&Cd%OUqGHua4l4JS$5<\iGT6e'><2R?'_Zq4Xrj:<&)q-OO_qkjD':+2P;Ka9TR>KQ`5sMV/#mWgJlBjcHl?_2
%LShdbGIP_;?Q<58P_fgB>#7W;*jcicAp:A2iHfDA7IkTMU[*[V5_W783$I2mY@19jf9ionU!lqgkcpbOZ&aKJhj&'1eW.4/qE4%1
%-E8kM8$KX8dR(%S8[0Y%OY%r`L]Q/Z8hpQ]c$<.g%0qTdTQWre2+9dlB8-/GMV>@U*kU2drusJ8l-]/K#=sj5A0"C+FSfX%?dB(c
%77"+bR-\,M5<WR"L!%+[gTJ<GE^Y!L23gh2DX;Scat'>?lE+,VT86j"jZ)V[$=6:0()DBd+\9ZB'7K/p0!YVa(DQnR']6:t,!!:"
%dIe^pJ.&#:?PqiDflUNbL"T$4oKfREa0,B5T!T#\A_WJef6*Z:.*#G,8J35NBtklp?86-roTAfeZ(M/.ZgWD_4PeRG*AV&.!hsG9
%*lC@lh!sG/;DbC]NJ]k_=3a%np0T+[cTSjgkQ)5r@^K\6..PPjX7r&7U3kufqPO4`T!XQ1A`&bif=<kaY&dGae_f9!.p-+4Bp1op
%,)\;HUFg^eG2I#5Vh,Qdj(rqhh_oK^C/dm*!%Os\XnIBN8;1,3kN6+sAN(X@Icpb;C1o),d>U&\*K!>KJ^T."kcg\NZB%=`gQQL#
%eK,mo<Oi=*O+2SR]OJUT`aQ@HYnl5/[EB9WF<5SI+dr/L(,\\&[&!7_Sl5iT5[oFhp,ma`\,ITIHKriLUY^V5>4kieM?9)XG"Hnl
%'ndA&^fN``;]c4cVB`]ZF#iTmhH:ZaE]e!oDhsNWbZ%uS/bC"qOqS+o!6QWX&_,#^T;ZOY?sb:&V[>[g.f+-/,+.uEWV%'!e4k_$
%+8$_k-c[NR#Zctg/'a/m%'4`^C]:5El[qIUpLN$"9k0[nfF07PWj]&.L.HU/F@FS-Q+Xn3+[Vr*Z_nQr!/jftT*HmGC:KuH/^%uA
%F,3s@DgJ>TlTt+qP-CDs>sE?0"T<AH4Do^/Xr-o7[a>BDH/>oBrMSiEUIa'^A_6NtT$1>;Vif#0V/41Nh[q<@R'>45FBc0Rh9#&?
%PilI[(;b71A2gY[K7lQRlp6=Z:pXds_D"0]r[R/Yma1VO#=*R3.daCu:Lfc8*u.pT7nNluo>k?)4^fF$b-i\PSo[9bPOdqWa>UVo
%Nt(ImLWV.0.jPY=hP"@%L"P22lo?T>&I$kM*XslI8P'Yk#a>.mMn4t\]0fHdf7Wd(,\8nt\piiD.(Qp$*\2dYM1U&(fc3g<Bht5\
%IsT*uMNrTkG!4GN`\Uek!]+aO7dRU;at'@UfM]Z?3G8+PXVkq4Wikkgh5ToA"@,bpp21a5ZY>Fcc__TfD9k6<h#*(@m&!;)NuS.n
%D7r5'+i-^Z=7062q[]^OdsZK)Yb.MlO$[F8Q#5-`]*5L^`jQJIa6rZEA*!km(,saf:'XVEe5,09De1Dl8Y&uh)b99UZM6rJm=\`L
%),(`:lO;Eel`ZGS]Dc&"l@/tOV6\OKG:`E?"&E,Pa0$5;O8S[)T(tOd9N^@Z=\,YMB@V[>*QWQ<$_d'p)q?!])kh_\@o6\_j05g7
%(1_eS/(JQAs5=(4@u$Sdq#2ZV*X0D=E7dc_+\Iu<cAd^2AHX+Z'FKl`m8pQeEO1t>W4BTk^V`:"RN)95*s^T=JaEAO4:9CNn]D]!
%7OGGU@dT1R=:o)5BRZp8ZNdha!31JIi>3H;U&O'EP]$8s\DHBKGMiB1+0Y`uWL5mpK-*V>_0ZrEClK\16V!\/rbLEh:EQe^3+W&#
%[up/tcaR;.9H>@8NEG*'OP_pjNH)@N<`tP?N*!@+Y*:(i_4_(b(eS6n:9K5`F?5/DUdHm__(u7V2XUP:&:*?"9c*JliugSMjIb=5
%AHaNu,^j:d7L,*nqtI_`;[^IK#Hf-Q79;aQAl\FK9`)ND*X0r@Cfbf.$jkn2@64*MBa0[PXN"DlSY$DL:r1Yf=k&sV4\iV1I?n23
%>deP(Iut#mo]Z.6#F\I'=>\0orfPo3UNI>PFsZ:+*rG3>fu%4NG%KG$G?ZW+RQ-f@:H@h2#aSOcg'1%2XSY),`PU#!K8ZgJ=ZaS?
%6p8i%N_N*=9Y8J;@#M&Uq!16C09W]3*aM#$5Spd`VhnAbXa;&^CLqRW[JJ;mHL.OWmDE>bG%KG$G8oFc:`p>7f9Sedm)ro#-$'jr
%*0CgMa)]Hh6Q+Wp'd:X9^]W=PGQ1.Xl.B0_Y'5WR40.XsZSSb.2U0!-b&2NIrQ#"i:qC1GgH?31O75prK$c+!h_qV:pk4&,.Jp8a
%]Dc\X>;&UP*LZ.$rr"F2nqmb._rs(n?*f*@@#fEW2<(pQ)/,tu'$-usBo;9-$!I<BePTrJh#+56la]C7%ig*djrp$nc)-TIlu9m]
%V&t7$:CmEsdhDFPUhkC`lhJ(TmX3s.Q><etTl14$=%q4$-;R^R%Zr7&=0ij:D(LO%F54e;BHK2@VSqc]_sUYoG^KZbl+Kg_09WN.
%*aM#&_!#K2/-e(SKlU&.mS`5Z0M]=2:&@.<@3<J2^+7s@^YA@_GY1#mRX#54%DhUm3=GV0et[8fHYcoM@8@*[c.Jj\?CJ[OQ%`>O
%MfIIk2dr\qnHBfQkOr7/C!SrRIcQ'7`Nktu=TbknL4.Xd7&cZE++!:O-gefZflgr]olkc>41g86eK0?qInR#YACB%3(ltLm.H[*/
%[6#/DfeLu[5[B[blb]%4+n?"k]e,;.k>#pDrei&hVFT5K4]&tBA5@X8>t;fLd5H:S?S"A4fT/h^#Jm_7b-pX)p:S_[BoS4'4"aOJ
%4BPoEC"mT1ap^QbcU_p"gf1q&fR*.Y2bYUu&'>LYma)B%Ft*U47nGg75.CPA8UKmQock">34<Y3bsbnt*l&4Hjq*Bfr`32p%mBX8
%PP/FhCqI"?qR\oZH`NIVD%(g`>3O.^jV<ufUOY^D:!hh"@P[:!3S#i'j!*Sb&=SJ%6)c;'L62QP-X%dV`*aj_Rt$Efh/qlW@K4/"
%dM3s`K*JscJ__3[GJrm99B%1GrUc%s&1RLJCchW6Nt6H@9"k[mRY0K/.Bf,C%7hkm@_bm7Ob1;9Z%4lonqW`RnX1\P6K)eKYfGI#
%pHa$Z^E0c])Ypu1dIfj;o[1?q'StfK^B4TQ3!&gc*;7hpp/.XP]<^bu]0.3u?MtRcRF^OAm[&^O$RREX*(+m#B8Oee.^c-c"UFX'
%EMVI&&XPB"$4jHYL_F_GCHlE,Iau")f1=P"LTV^Z^k61I=9L8#EnVS%W5.u*0tRA2@6Zka+,7qH-ek6-g[j8jDBDb$^$6P'jTQ;5
%GMO]O$"PR186+PFXk"@80.Cis!k]qS$j7,K&$b"+15j6(9%q[iq,b\jF-!IGH6A8V:$h,s66%2KTj#!10K+<.kcl5$Z&`AU6!(L#
%J%+Tt*<TLoR6pYW"Nq28/@6BaT66:/cW&M;,OPWVd^m<;_.V9mA]TnPij8fHCu;@]7#@1Mq_+,>RiYj"nj#INg;k1l2,[sSoE_Q[
%H?lQN230Z_s6uh4*%]jICqK[achm'rZor$dXF*C>]OK;M>er/s@kD[Mqps^oZ%iqgSjt45Q-EDeaW$$Jk#?Ke"JHr7/a2!dMe)1O
%6e;kFn,6HCb*GHFN[\So"\#)-#<K[GJ,T"mI2"*aSnrcQDU6@*316MfLtTO,;I2(`4]''JAN%79'ir=8VWtm3V!D.P;<A,p'o$KT
%Yto_*Nj[m[j;rg<Rt$QJh/qlWT`[d:qTdfpj7-,k0QR"-l-UP5m&)5tK2C7qAD?^"HeohL<K6Q]?QU]"R'*S52=dP4A!t3J[HRG/
%#g6DNU?BEu[Hha13"+tIgs/sf!/7B63Rt\9(Wk9MLTV`mIlu`u4.=UQ'%E\R?@5DZ[7C5ml.Pn];RSaAG5U/;+04I9=^4kfo_K#Z
%nqm_mi4m;-_N"5INLE/.;=.k'_0KI:'-A'q_Y^6:(,>[=`ZWBKkM6&pAF-0`f8i$*;>\d6`ML$V%sc",$E^.#Xl"3[5<WEs7`r.i
%RuY8<dihkRGHg?6BB*odP?5t0%gGI7oLVn[WqnVl-S'U%5:;3Z<Xl(W_OIV!OK$Jn7B"sCnAN*Gn[\T7ak'7JXrhp37+B<PN*B>N
%*p2N8S:S8JXNIF9T:W:u@qFD[D:d\4q%Ob1;U8O5h[q?AR'H_o5)FED;_<d3D^i+@lbgW1)^5>^Ns:+]XV<+<!mkFWi>?gJZ>'>-
%;KgNal\?NpH4d,>Fe&\^LHX/26GN+G@+5$L:YA7CZL>r=kO8+()W2c=2h9nsKZYgBX9Yn"cO<oVQ,:8[MT:[k4>aOafOCYP!Lqud
%L@,VQ/P^kD%7U&Nlb.*678e<XU[*[V(d78Pb+K%8Bhh*`J^(kS-M"&,T:W<K6=o&>?-hEqnaT=UGrr?kj0qG!.qWT#ZH9a9*ojJm
%hQ"oGf2ek.fPio)hZ1%e>WV43>'fr5]c4r6mMgY<ADQn@qGI8i/gY0WjRQ?hU>sU#!4_"SY,-p1qWZ,5O-4o][N3uQ[84BLaOLm!
%S;b3F9O9GP6QXEWXfF7j.O@k=juXK\(4AC;8i=2b3O>p9`og$N1p%e-%.j86]E(&Ps!$-Bma1XErf<.79"l5X9QN<W*qns-.OE6%
%jo3>,5<W-k"j48$]7.NLe!XEGkGcu0*DuBZakB^898h^d'Y?5?1.iq#5QI0KT&mN'8#X!paT-dqkgQcV=BL(rH<VHYg4,)uh=^".
%OU$boo2u%A<H;XY8i%leB6_ipZ@t7)s6t\i(bGQeCqD=n*8Z'[X;%;55qK_r=C*^r+[XYc34W!$1Fs('<j$,[(Vn=2!2?L(Nglub
%j(I1_5B#,m+4e:if:1>u,\8nt\piiDJbfN8BoXfAH\b]s-&es3l46&Odo5s;W9h.%mJ=FX+&_3J0N+*WSA-4L?86"a!:r'N#YH\R
%X4^,tX?@0o%(/.I0*[g:Dn`#,m6%BRDot">R6J+[.S5!TdIe^p#TTq/S)#$oFO9f"Se:?6abQAZIsTO,%$ka3[U"Blk<k;(:=N]/
%q_nZ$9."KXRkC/E)i?">3MH_k=Y.oSD[aI<abAfpibP1[A6#Bt*,32,^74h',\]2#\piiD\WJ/n1W<M[W^5Z<,IG4^mb:*irV31:
%&1m^]CqK[acc;t1gT[8B_%t)K&M1,Q[#fg!HN((+c8KeGC8p:"O7["^Fk!9fraHiD2XY[B4d-oN"4_u]XhRKNhY640;=>HA2iJaa
%JKu"hD4l/)SoMsuA*$c6GjD9*lbbF0FCa.nGC,dQ+!W4?B5W2dPe:J.2YWN<("4pA)!(b;HDXnGQHCUkq5q16dLPN?D4aHJjt'S7
%0]"Yd,0@F\dIdSHF?)'%#:66hL]euh;8G_=.XmnWs69@U0N>Jdflm>MSki3`^W+'T'3"Td@c\n7[K&7&&L]ILM?/ZIN5@Y"ZHBa+
%*l86k?\*rI4,Vc/*##@.JP>rVhti6Vm&!/%%ikZ(S\a,*@`sJrYS1PPJ40e7Tu2>,`pP'_hihp'hsL5=[74AO3YD$9^EHQ_0jf8-
%#a#-iW!,'&h<Bkq`sCC2_?)0e7g8sT7FRrb^#[<dnZ`[7*1r[LQ%V;Ekk]i4;#@sR'84E6&+NF*a&-%>"?SQ/qa6/;oRqW,.bgP2
%Hi@p/k7BV[V+`&eD[;Vp9\9P?'*D&bYcODJZR5dh`Cp=pM?G?4]oC.2jeET!FTrq,G_DK4DZ;RlG1WMTLE6FM+:rQp-OOV@F4T["
%=s0Q0++!:oVsHTL*ctuJolkah33Sdoh)d\Irf1B3_5'L3XBI_`SAPM#4gs4TA:"]G#2lT1a*5`qe&L%#nmVYZqh&:*@ZLrZF8N/(
%[-&K95Os>#D_2lsB<:E>3srA1P=oc&qhY6Fa*r9]4q<lq=12Ca\*$7;*8b3s/;F!1_=EITlePcdb!^-1V^)<<2ja0@DhM`#JilX.
%3'007Qs0Dbp8N4@9=M0P9SFJTF8IVR[$r+B5Oq&V4`-$P`T"clQXg['#WuF>kcg\NZO^PWgQcX-hsL5;FPea,S1H;a%AE?U.>q[_
%6a3>EV`0:<YA[1&02b'$JJNnL.[`DB+!Ka@pdn+np1*:F_G'IremB\2cQ0TGf`*_XKG/Cm$<PHh?@$';cSRgCro:?X6'uJ8ZK_(p
%4^;9$:58%o8hjZo,qkXd_pNB_-<3GGALBQ8(j:g/#T=L`huR`HS5nbnm8e_hF6Nh@\<)Ou4u`K[ah$fcog98J!2^>?;#A1?!tH"n
%2V&N0W&O,Dn:Z3,/,QJc].WeV:h>54`LI4Bpl8a-`LKq[(dh+V@]j;b!DFMf>^=J[gDC=+9H_Kco,;8/B6em??[2:OC&V+Qp=uG/
%#7a#0>m8j]W0_a)Ma&d#i6*/;:QPJIdkg]+UhmZKmJ=FXT:0d'TIHA0!W=%4nramFJLRr#)f=8BnM&-VrIZTBTMh(F@!ZV%n=$u>
%(8lTI99NSIG:5BIg,K$U$+oHKog8u*iCgYi/U[]$a#)e@[p;hR/[U9Cqsc,I&!_Q=[QT,LkK!-P=seG0RB^*@.^,5D,9<h'$p^e!
%:V#Y[9b@P=@c1+'I1'A4.:WnOE]bi>G+9Z<B#_GT;";*pf1=S#O00RM^ghShP)D;HR='0BG'VJkg7ubDPlo>!s7DP(&1e@'ZL,6a
%VEgn=8%2%aici>`$g+P3NlBl!h:6j6rGtl--X(&H4KE*bBL:tH!Ge+'*lIDtb%pa)!o(B]3Of#43P4P'og97_FFB]M0UP@Zf`>DX
%L0brTe>Nn^C&Wmcm))rYG@fCtG8o=,9Q>$pjN`3IW4ZT^7Q;dbWaZ<7%!/n`ltrhBRNZ-e$KEZ%J\m5pB$4bQCXUbmph2h\@/8US
%Mra3$6e@Cq?_Mq;enCgApW`gr[?S`2qW[hP+Ahbpg%J\;Z(N^205jbq/5Pg/On+Co)DKrhc3rIu1B_@qlG;;D@2j!tN*4(AB$el@
%+0$>kC#KmjAnKnDS6LK*I,4GYqN2$BaCA3Je"1/9.pO6fopi$l/JoQjm&0%4_arI(A_6NtH[KXDK?^SW,i8BF6`@Y,_EoTRg!#Q8
%4DQOITVC":k[gjg\0C?Zd4$)'J;aUt%D/sPGf/r]C!TNF09WT0*aM#$5Y.YsQH:@hCHorXpL*M2Z)`cn4nd?'p0k%=]<^i#]58U8
%<)<b@g9EWV[fjl)k3SHlXB*A\;p80<VSDrhZDD@?DH,d-a;H.b+XG\if7Xa4UQtH'qtM:]r7q.,AF-0\f+7^B<e`6k%7^YB?u@.c
%>@W7t9L/9E^OCLG4p[C$:UWF<WAgP,4*M4L<p'/.8'4K%.hi&uNK1t:K=aKDZ.KZ2fYT7Fdc:Q(#sHX9\AX:RSs%&Tp+`lZq76#s
%ajsC?Xrhi%]S2mJH2fc@b1#e>5SV='(5VpO[si_-m\==IO^5HRD%SN9Q&CaB$8UKN-!uh7Iq#k^&"`!oH*.**Ies*DbQlUhjGWg<
%oeP]%?5\Tnhli&o:UQ0e!G/eZ,6R4B6&E#uba;Lg.uj"mEK95&&:?TihnFQVLOT6C5K(qmq9OcpE;lO1kPt>Gs8)b_ci<MGW50?m
%msj_[T<A-JIsL+,nS]I._>\',#5jt(,9HcCr0tHKV^MBJkeI&!^KbO?bA\RYp,f.5D>14Eio&Fj>qV2,?*:<sN)bo(2F-]as2B5o
%q5X<.H12i'h>`u;AaW`+?K]/nr3ELuhtl<H_n"g2ZYr8ZSW7c6F_bdQ]><0[dn[)Vk32*^>q#[n^TQs_`D7k7Ib4SMY7Ft#GP_!K
%lTFs5HbYk$Mk<M_5M`MRrp$c]B)RD)8I!Lu!bE3ZoCt<Pr:-Da`5IGL\;Gdo-hI-%m6Fn;\k+X9@kPs\0Yp`rUhdXib]1O7@`qfP
%>5%5-W6m[ZIQctpru$=DqH.,ng7aorD!`hMQu&46-l4t(odr+pc'X'[cj#6^]c`lM6HPnT%:a^:ho-F%<9FH1mMLl-hGK,Wg&b[,
%NK_%+A&]:Z!5$buE!&%X%b3l?A-7Zf>*(L)2;%1#2ornfPktM$`'mU$@r(pG*Q-<-o]tBFZa7A'TY%l9=O0uSGBh=lH`b]+AB"lq
%"RSQ!M,SXq?=%&b_.=^%m-:$%#"E[Y=T;i_Te2q]a*]kWimm:"^CFSOjl$b*G&P,Qrc&(.[4o>01RF*9!sD!+D\JQqgb?<?1_rF"
%c29H-KO%ft2Q']E1Fag3f`7Y68T_Zm\Qj.Pqlt%H08\^!Kl+q%o3Ql>pu^*j]?au\TuIq,"c1>H`3]\qlW,U[8s=K>c"9=qFXRj@
%_Y8(EL`2#_fSA=#QNo[F/jJMH"rTn^0&)?]o5?34gtPpPNnjIo$\\g7/H=j28W4EKRE![n-PKY:pgbkLNR&oW[.)1ZQC`IZTr!`E
%VR3`#aeZA\qa=WBD#1-LQ8Uppg=DJ6,km(PjhE[^O/4M]^@t_iO%E\slc1K)]T3fln;'+_6V.>fd/]P)9(#9GPM'Ladr9tX'?8>,
%7N876Y?k)H0`u5>&*Gli_OiQWCerCnRca'@25+>U4^&-&m#4hKg4$1cj]+b9S.V2DNpN$C"3SUUAhAOh+N"l<_gqCk>OYh%?l2E#
%7dX?$H;t,?\Y_/pKB0?*fcaKZr\L-g=<-WlLsn<D,L1JQOJS^YX:PXn00"&U5ro;[Y+j5h"4\\sl,Z/MYpqXd<R;E&C`qlWK'`_4
%!ASaJ/j"C9UU3)].QCJ_G(?&s"/G$S6)1*!@(AFZctLhlD]'d,P4*?"Kg1'/'JZ=:N\ta8Is!T*o8D&47W2O@8O1p&82>`;QLpYk
%X72HPV/plY_U@0RAAVSZX"1i0ZKcuIRdIYc9:>m2&lQH40dWqcPAk=o(@(hK5u4u:!`o$4L'Vk%qA[IGJ@$&.:pDmB/@;h48Dt/*
%XA_*e6\s;J8bJg6Uk4PfGTUG@Lbb9%*l6'6Ma76lf`GNI2[:51#S!)[1t$T`]8f)S;-JJQJ:6bBKb3WS]DR74Q"n<N$o%nA(b>W"
%=W`hV/-(d%Me,T2pDn6.p28iprK8'Ms*d.^_/NX0#N7iNDZ/i1^l?i\MARM+e\+g9$$/nlBqo.%QD&_SkSgr\a'FR_ep-^+A5+7u
%95,+(eP`[k]abU*qMMH%V-MR"2h8r3,R997b@fef/+e9LB8f.#fa%\$eDD`"*@UAUU7B`NQLK@OJYX.k@s2oJMpdNS%HJS[!EEP\
%dQiU(M+o;BnFM(@[)L7FWbBtB:mLOmBtf&6p02"L2-jjOb\]C-Y0^5jqcESsc?tW+H.UTtHJn479I=h"W_PdOQ[4fda2\s<NlT1\
%0kqOuo`SQ486a<L&i1=NWA8Bb$dD"GXC-Vt[;$D7.CXDXd<6ptW^o#^VIC\OY;U==g,p/gm<F3PA`e<UeSN!clie#&/=cl5#StCu
%q4iX?]pVB/KDH^'>PCGEd+c(fqcp%bm-6=DCXjc:H^W;Y@3Pq?/G#V_;R;u&W-\$t#Pn&Y[s&.PN">P^T-N554REecrlsV(>1QKA
%957\NI3u(uM;OrXd_P$DgRS*:P?St#9R9>6T1j3<j-(p0D>aAY[g#$]k17Ob'&EK]R8eZtHbY#NfC692qJOpCn.L"W)m0t"pn2r>
%1QT\`N#`eDUZ2Jn6^>n\QE,;t*:6uI[gJ]WPH'0G:`NZj]?m.Jnt@3$fb,SnI'K@ece9F6Sdk[.XkKsefBC[pq[.iNNMZ$;]8/sM
%g[dM4PG[/fPCOFM2_gEM<ICaS`e&@+pu$Y_hZF`h]B$!uTK7,%@utO2N&>YO(k%<4$[-iWT6&9tP"9ha,Du!3c$r52g#;P[rS4rk
%Z!''Ef<K$\G3n#(&8UrZYupC!:IfGc7r]A/,k,:VYhD-E9<`DU=)@ccn44$MigYri34?,4Ek!5i&be"T!H'dhI`=%>@kaq-QK+a$
%LTIkAaW?W7HEAk^&5bnmG;Wm.BZX)k%TjPI*kUc:bimFD@0AYb5@#;Do!Z>N;C':"L=cr,W!2O]1o/,A"PK29h$u"o#r42p@fC21
%/0f3QC1@bAqXBjfAct%1$AU?IV+lJhS7\(I@!$tJ:qlKKTki&,N&T@Z*W0Qd=8cB6U0*J=p,k6.:!\qA/)9,"#nuPM%/u-j;HN/9
%?iR:8dV[XiRG)9Tc^#Zf5P/chq,HjWNR*?Ogl$S5!:=Og;^#hXnb[scVVTROiGZrdIp3U.o5foG;a!Mk.XP9&A1L[`1JZ"BK_-f\
%U/d7FV&Wm*ZUk`^[K:=8;R6gJ)p@q_>`4QhdToY'@o@7arr!*\2'u62m;er=^X"3f>8<hrW/hi+)J?0s>r<NN@8,]@_-dAEC7's%
%n4C%nm8.Z:8SYDOM_Gc;+`gq3ES3Z3[d%qDc#3C*E1VO+MhPR;)Bk40!8>3LB)=/"D5ZU[q6>j$ZCU[ff:`[RfCU--`+ZTHdrC),
%<KR^`'^VpUg[5-OLt&M(cdu4"!K4JJ"tKF2&Q`8@0OS_gi[#j_kMMJ/KUVd]DP2?S0EJ0<KOIP,:-q]HB$>Gp,7!0fcPF)4fn$![
%og5Tb-W2N/jEOFYj)(g8N;'smPTNpL]Op>V@SCt+L)]h@JuUPk`1\i>H0-GU>*`e@8KR\KH:hJJ"dKWdf<Wqs*[<E-J*%GP1TRgm
%XBc;97oKMa=)E,nNLa]l0E`A+#",L4%mt'M@P>/F>:<?iWeJT1c3:&]r]INmZL2jl&j+0BVp;7iJ>YC^N*-D2dC&B[:p:`d2.!Q2
%p%E>fC0*GCqq]'W>>)W6FtDJL%</X0mbia3^m\;blYChlTiIu!g0&m8okM,,Ch*c)cssIhE'%atisYH("oaq`N0@=+!:Tb9:^/e&
%*TtIR'.ris?C"6T`Hs,<PK'p`5];opU<2sDMT@[$RPZ/SakoTZ@['Fc0A.E?a`CUe[h-'Hi5p",;&_UC_j*X<Gg%QT-aVN_>q>f&
%=\UZRKr!D'`gD"Dk-<[4)HI^WFuj8s=J-79[ES'lIL8u<8A@CCU,,t^QSPik<F$lG?DuR62A&ZsQs6AX5g58W!*ke0hQ\!?eW)YI
%M>(&`A$Z9"]1D^4Q>D'"VIPA@r>Z,-KWSB"G!0<Q_@Y>(RUhM]O)doNAee5K'<6!WC@!k:U*O1l8ckQh+MaY4F_o%=\R#eg7#'P:
%%IXE=ZH#HV$#ahME7n')e1P':c3\]_o3&uUTbth#^p=,%iaB2kW_Fl29k#/We>SSVQkXME-7;J36M*"&F"r[q:>RHRDemaQ.Z`8=
%Qe<fV]?CQ6DUZGrReKim$nZY+$mM8!HiU9T]G[Kb/N[!6=m$2Jf'.jHb88mQ"B+o+V=]%N'N)Y?dQS4_Mg]C&E.BBnVabh3M*%Df
%@<U$'*?eZ:k,T*5oH=9%%isW`es\dl;Bf\GP[HjPNjaK&=OQrs_H<iQRq9XQAh=]9Uj<`+%CLI:?5kA6nF(G)&uSHBm*qtS@T[G(
%*>"]pPf@Nqrb0)kcPXu*O-W$6MVN>R>u0LPak2VJd,TB]WPM-:J1Pe*i'JG:c7Buk@e.?NO)li2C7C@<PG<O736CU8Z:Ts2?'@lE
%-2%aMhO.14bpX(S,fPitS1BK!:OUi+_W[@;Pcp.h6/JoWd,o"+<Zq*Tp3aC8C?[i+r8nIPp]*&KT'>b\FnkFss1=gRAM^ic0BHPg
%ElO?'c0+4_gK]/9ejKn<S2]OU4u[Q*IeT%IVsTm:21%q7T:8(FiEmj>s,M0a5Q&\V8F/S#nNZ%'Di)MqcT_?J:g?a[&nCKUD.hI=
%S(4).S'S2)QiNa]iCTPhEfF^Kr;K]fh(X:mSL89%Ei$h*b0R0^m!A*oYP+cC:TjGnNDHYNXG,!%q5fEKXnliNrlht"U@V;65FYM6
%ZhEEMn;5\fc),u_oq0IN*5Gb;m4*(8J69rSRVV\R>WXRX8rr0mAfeWuog5%^-nN:qAL*7\A^$eSX2KQ7b?Y@36RjE;-Ei0QcnUtJ
%hG25tlM06t,LiT@^bKi:AcL+j*Zm=d$bS3E<bl(GKkDZFGf9fb1'3\Z6*<`'&_A5K&-TYUN=@h];2mI!EI7g=cHc^7I&'"`aBka@
%^ZL^<"lfkfDjZ-LE,?`p@Lh1NicnV0<e9V<KM,2Q+r/TuYYOgKNP-q]b$ijO<#eLg)b59k]R:8m?ORR*Z^Q&0U!6ns.:PE:?E_\d
%?oK-gRWW67`Tr`'-J*>r:^o5u`ip3Ff8?,lQCq6@`RpXd_8jr*\*^7-DfuIl`g[?L_oj?VSihV8/,(a-*f2f,B7P,L0U4ub<Cb9G
%XD^ia\Vqh%0/?Qs;4k>Tl1657!Ec=Qm<(+<NH[Pd=%K6DEJ.f-'oNKoC`qKOIZ`0U[G\*TM^RD!;-$:84L,%P8A%2AoJ*#CG3M0(
%Xm'l&%Xi''#nKMC:FL\KB*0s(!eCNo:1P$,oEIV>D-4XlfT4qY9b6%nOJO^$JcFBqVD!,<Pf%/oF<jD#`9Y7r,@SS$;n"g#HQ'r3
%lI?_o3YY[S!#oaj.@`5(a]nCq(H[tDED.#4Z5le+g^3"iI^n[H#,Zkk"<b1A.B)DP(t#9`N6Qs21SGRnaII1>6,YndpmI>M6GXmI
%K#b]'M&MZ\[iE*6(8U1Trs5%N1NCoFfGC/l*o(ug_F;$hJ2SPWR#>SBn?XMPb.p)>?2PhQ0[ub)e*Q%P$d5Ves/pQT&b',CpI]GC
%(p&;:3U2U,O)`d@4\3:rkQeLah]N/\oe?^T]Dmj7O)Wn/HdgM6K]tT2&8QU$4i4(+)5qbl>/ipQ315<Z+Nm]kV_M&lfFMK@BFVIa
%ERmJ)W!p2^o'L[UTE&jl;)i6#-+M$s.tp7&Y'oi)GRf`0XI]I@Mr;UZpX+;])Dq/!K%D:MA8Yl=oQQ>"?QWps(sp=/o!?A&L6D(0
%.QEYI#"8AVNZ"cOOKQUuSUnm$bH2IsrZP:_KPH7_#$8i2@*G]k!SA)0k]K`,0."[fK'cnm!MLdl3?WR!J`VNc>]gSacq`mb<KBoe
%Ckll!*<Xu^&A/pP_&b:lq96\1j*dAU=[#E774ds9a".IhE?27lfcSZu-Y)4s3d5!X.tgs6l=Yu#),(,j&"05W%cF4mJ4mJ&fO]7<
%KVhb[N_ssi^s/G0$BV'C3>Sh?G3hZAZEbQ>$*sZu(qInWn\n5R6#qYH_JYSG!#p(W)QPbHhNA%*;:IR/dVfHG0I\KU#@1\rD`kJH
%Se"=8l^X#J/6RZRF&oh5Fs>L(bX6CX-3MCX#DET5L`U^r]fFUj-TP54CYF\OFYfsp<R<Td<!Q='QX)lUf(geW1\Iq8*VbWR++DG:
%Qq#(tj7OL/nNLVXM1QF.\n,)\B5f:TQe4&$AfKc&UDO+"?#_7n6[:@e#MY31\tU"8;uf8#f%go@&J!;M1XQ:FfX%1?aHj)u0bm-T
%@*3\@'(b6*k=SS#$HCaGJ3l7/dUeZ50Zbpgr%"i@(dMTR>T5"tOGaS6cH2:WUJGs4a7uAJ"[a/Z;\aQ$06Ak,cR:bA)f&)(ZITk+
%Wgu<Gd[50[b_sY<Gdbu!FQ\V3/%1nNf<S04U8Nq^_@-?VU"Erm;eD>opK?ZI2'Rmr2L<:G@cG$2ppKY=10.1JVd+0'L+rI?B5f$Z
%-UXYZ$hNqSc[rd+5DG0^1^:-rQVEUA2A'T)d=YAT(RJF!:a`<1.*KkQE2fEa5E=s"r7URc]kZGV@!Iht>Vqp;;4>rlU46[0pU<k7
%IhQErQ;"AjKd0?//$<J+>Pr5WF&i5@@\0uo*p`Q8Mm:h@<su0**9LA!OmtAZeB-s3QZImj9+E%#_=1[KpB0H[+3V2sZm%*7emtE5
%Z+@44#i*/1fK,@`/flt2e^j=/L+P1=+4'%GFOc?,fog"/?S1g37++eG5]Fl-,&U4R)A]>!fdjRAgN2^N\H,(@9h0+i7T++?[L&Le
%d1n5B,%,Ph4bbp&RBlS3QMX7emcPI`,ehm55rYI!\d>@(@h0J/EMT%fOY9j7+%E=3P[Ba9HnoiQ!6V-u\$238lXKVgZhJ@LFtLb"
%i4B$i_g2pQ2BZ&W09623V&HsR;us!WctE[g\d__l>Ag4<0(e%FNeeO?3S0djLPK,mg,_`(L-u1]F65>81+m(45Vp'Q4X/HaSfK?Q
%LitjOh+91D2NU(riNk36H))<8:-kL!,rV&,(]d2c;Nu`WK-g$.N(YTd&F=PBNDu88J;uR*U9Q92Gh@Seg]JFmAFtXP%3M[]j(?7$
%`U'ZKA_f-_dW+$o.hX:r=^<BUl(3T]!5)X9\-CCd@l1hcS/M#dh0-AHHfC;JjC;]jG*7WE=)6[\2b?GrH4pdj_(L\eGFiD>1;>dY
%:Tn@UFYi7`9YkTu1de('Rr[1F2<i-"OuC!_ATMDIO:\O$ju>Xj.l/&S'!f5^`g)d(1Tfr:k)T89jmKDjH;K7>_qLPTZj,&6@LPEP
%:,L#l'fL-9Q/ZEYM6D3_ea#No1,lKXiHu1&DCFAefY)2#.92peoj@*PZrpGc.C2.])_m`UCj(ZaS:[[$.ulsZgK`r&aVT:*]4YuP
%\^>/[)i_gb6QZ$X`3.TYP+$f:hpUlp[5's"mR\Ic=kJ^T+eD.d6%,>t1lkl!)2rf.IC'c;BtPck%!JpSBKY(IL$h`a>0l-#@]=U9
%<fmX[C.q&/VUd2<[uQs!c^iWr@X38OJN;?*%GP0G<-i.n^eHafGF=8UU*5^8p=>aJSgBBqW8aonk.+WgV>^=sL2fYSlV'd$OuDFJ
%?\5\!?9hO!NNNFbdZWW^^N39h,jq;QBT7a7GCWq!RC5hnc1B3j]YPlSC3O'U)EG;"TPl_t\M1'%'0QN%E&<p^gr#D#IB.5@j?>ZJ
%CT;Q9#3Vp^MeZT)9Au0VmiU:\-rnT].a^7[*n=DKa6Dkt)A?["'<,d]WKA:-4JK4pbtfrM9$NkG^C6Ph]AW9;IW>d=lh`Y)A>p8$
%i9b-n!kU3<c+?CtZ+Wfh6lJU1!(^=kWRg`[(9<D?:0@qk"1GZafkQ"Z)T:9LD/):]@B*gGM5X$FX.h*(c#ftS7&!Y%V?/ZP)V'bi
%;\>5MA"p)J0qm1ki?Z8qmf54MoF@8R`@433g_]+s$Ap;hDjGYV=hhc'iqp=-EhP^tL)bK"KmC5ZdVkI%qQ]bjpI:kGqJfG:7tdRC
%D3eB^]nhA=23mJa=.6q1aK$e4riW`9FI0IZ%e+(TH^6Z^?0ahR)&VO&G-D]FhE;8L*ep4^,R1=]`5-1!eiHMU#qYS?%V?JI"3"5@
%24>@"6P$s(6]Vl<DCu)'mRU!g.9_*MQ`ublia+<t'\pKX3Lq2lWA*G]S#P:MV(cPn#uY1J;U+NamX6OjCR4lRHGP*'S0UheB_TXk
%<eRiiR9H#]jt8r6ls,28J/MVBl9csGo?GnN1`YNAD&FOh6i,7Gk3K25A8U1qL5-gOESP-'TnB$M]K(1IgR2)1Gf*aG;/H)ZKg-d)
%jUFRKl]-*eI[SdIEC^f_P<("0pR4\m43^ir,B(Cb\Bko>U:>&&okH$iCuh+`>4%oYK#JS"5AOCT9ksTG>'r'J\;)NVPrW7$Jp%ea
%B7#?MM:J*+#8F=Bp."[t3<_!%=*#kAGr^_^8*;B,Ju3)I33tt$2nRq*eOK],I^omN!lX**A>cQr_ItEo2t^!5=OMLG];U9PaLsOb
%("XZlAeA*LFPI)G1ZXKVdE'i]0:k5UF9@-06"^s;eIEPR,2<I6HV1$mUj@s+,jJL8+`spH(Xk>D)JJGjeB5.VE`_Q:SZL<2oq).X
%9>H-`Z%Y5C863!O5X:9O[Y)D;MuV(jjm,TYMPG':i?N7eCDf*2\QBt*#Ih?lg2%"H22-06:2n<j[?[OAph2ODeSH8E._7g<P6M5n
%"ikR)mYBfSLR`sM=NC(HfSA^8GBnr<_CB[]+3KHF7ZG,lpA0Z*F;&8mI,QeSD?W,!cP(k[1`OeBZ#$sb&$"I&6TAt:5'nubHCF\9
%S]jB)Wl9VpGp>)uE@6#FqW,dSFmQr'i'>g.,#T!I[*b+8c!-U-kI_cNd(#sOZ&t6X:p!Vl9E@#:&ki>Ta>HonM^G%3a.TXMkV)BH
%fK)ul8*0SDjo&6<mgHA%\@iR@8gOQQ2@NoR$&,X9XZJGG6jjqYJSg;J!WXo4j,A_@CCo.C>`$5Gbg'f?JsnWr<M"_6CV*]EM#&!j
%m^_SS!\dF1N;T3FqEda946GT\Rb'3O*&`I=!%SJuS2RoA!)Vtj^YIpErJ2oUAgKFHKuJuijp^48);(C-(`+NH$t%^4=!P6q2WU%W
%B6G@>bb/$EI_[!Z`-D'T:nm3-#.!@X%iFX9o=k*Sm09dmW>/PI!_Z`UM5;F?+UVPe(V?96X3>W7nC3=8M-?KQfrj#P>W)Q#.6tR#
%!YA]\D8?qM>K?%:<0["FUncl"@^JQjah_!^pOYS0$f^-%rG>/*o34fJ0?>;bH)(=.n*RS@j*Tf;GcQ@-0BN!7q606`;cgNsQRA&J
%EE;7g*.:k'o.Q+RrV@0\?VZ=R\a+)).@f>Rr1Vn?j[81u;TXE.5->Y!r0rnM^\Ys2SuTEuqYA;69:P3mFDkFc<ZQ1"$2gH%V,m][
%iS-!fX(o/S%P56ki^/_fREI+3g%;18iJl1]`0C2TMZGn,VrXu'6.YDnHB:"r]HD#70!:!h^@RjNZ0C0Cs8Ak1Sqb"OL0rPH3#.a,
%Ta::'R8%FLpoPt?nhU(?10=BLrpnRlkHL.$(d^L_E-!0echWDa/7AFbfVMd-?HlLoR8=H.-',$)er-sj92m02Z.Og)"tmIOqaRn4
%r=ihiCLD!KB7c6gUh4ac5Rr0V,)A_c>_Fb,Wu&I<GkbhqW_jQNEGjIhZm;nkCtaV[5W7U5'3TiiMFb`U4[:JmflsRSXhh`+*&>L8
%8"i[dh+B.9)KW%Pa$H_O+Dd>Q$a=Eg,+!3OK>e%F=^76kc;;(ZWo=B_CRHUT0e/4->M^">_O+4%H-M@i+Ycf,DJK8T@7:GG3f"4H
%1L,@1$cfm2^`$K[]cl#hF(q??<t_X8QN"/_\$[.;@\tj@eOnUTYfe2K[91O!o3n*ms1"b)>FXRg<KL6\R^UnSXGCa8U!plP&SDK?
%e9dbF/9RqtIo-6B/oY&a3ERSNC9sMAp_%0Hg!YRcN?f)>0NOKQKdAA2`#$':UG5)CWO1?1Z\6r8UJN%A*R9\^@Y*S2dJO;p>Np;.
%Z`fFTT]:L<[oM<;^I<.QfUZjOZ:JoceOK4UR$/>C=m':$e!)Bo#rUcmo='HU<D_2=`KOucp2NQTGV)pSOn/%IA95nFZ"ufUZD^@n
%nO$F-"HH!hKt>qF=>d[<c?[k[!Y8:QU:XtDQ_NT:T1fKU<@-M&QE>JX\C%o@k$l<NWTSO-]"W8o0UFA1r\XH%M3S[t"E;Lr!YAlE
%l%:\?2NLRMSb@Z!ljcmO7Z/BRG'91Gf:;S5Pr=p["@F8`gj(EnQ8u>_qf6G%[8ErX$d6q\oCfHM.L5=fF7!`uUCNP8I3&9$Bl+"k
%oW4:$`[lWQI'<%YP.!\clubVoL_6J(fP!2W-<oA<V[iHZ/NU*BrO*8\no8^ob+\P>$O$S*(p+L]7Ud@%[*<(B)'=T(2uUdc4ocLB
%%LQ3Q:em!-#BgbH"!m14=2om0a4@]jddp)<0h2cp_$j4_JQ%YUJ:6Un[%=7W>]aClkMR8$=)6@/g9Ugf5o;Ba)RpGWZfRPA+qUQW
%go9L`jTQG.:[5W*H)U/BEqV]<68I>K`3lVZP-M,6o71!VgY\;IdnWNkN#]ld'pTDG/tp*j^i\hg^`bK#R0_!RlSVqX$".nBGme7L
%`Rtt^LdIMQ<W`kg#aq<?KB,[p/NCoXa/P!BIdAU[&.]2bP,QVjOq+#O8^:.P&>I96NX#8"/6*KN%LR/^d<"U,NjPXDZtBg96Sp4]
%;!'o;:l9+E<lgQk+=BndOMj6LL/NlL(p/Uh8@ie<TbV<.)^*#mO`"M.pOleW>Tk*CRL_+6N<8)abD%gqQEmn0eaCm%JeoOr+c)Y8
%?;EB>1\)eK2n@3PEj(;@l?tGlls`VoJ^eV)S+5NGb"7cc1[DKiU,36*H!iRS0(r,]72&^rR=/2fbdt_6&hie'-^^JJ!E3;f0mdE"
%[R@T8b_3QBhAiMug)amW]eBS@1DZd(\]57bi[,#Udd1d]g.qj5,T@4^a"[.;!f`#_ZCas@'&jVNZl^!)G4+"E1a)u^ZseDXbM9`Q
%d'D>MRO(OW=#64g+qk(%49ma-`2En>0PAi28FG^.Ddi38i01&e%]H7b`n<U/@230\mqE$:TI:j%WE-BP8?UGV4Mkp#g_Z>ED41hC
%Iud`C..ld=VFnK4hK;Oc?J%M_Al^+^6;(`*8d':^nLPeN6T$!=,"-IPZFO*V)WW'IZ8js1J';^HB.9rr[YL+c'3nuS/leBqjO:4+
%T-Qk9ehh`Cf0mni->4jP'")PV,1I.3QI>g;<_-JP`,TPBhFLu'8u&[50=2&K4=ARbZnb-=Df^Vk"&&]$q)-d1JKi&ed0q"TnjdK3
%QT;Rkm%3'HG@R3B9(Pt!A[aIVfDo:d#c3oK'V4V2Us3MhR>;'Q:ba+OMl=A8`+e_$"<,tYQj&6!)[9&2PodLNlGd&7O<.$YJNjVY
%Nk%$SNEgSE.M=e2,rGaX_c/_YXkDm#'efsdXbnYK$\6kX#b.;<=gJ.\4WueT%3]KW\8ETCI'9J3#VucIVto*6\a,c`CoEM+qpXi+
%+RC8sKZ8ij/9t]j5s4dJZu4DZNk/n8qI<KV=@2*fqiZ_N5>JHs5M4,S!4h2<Q?mY2j=VC33TQc=bJ?uU@7U!^mFnag0;kpk1@Sd+
%=G:9k>:+%gT;6q(9<7M!m:EjZ9)kPd/7):'AOZ4J:hH.:GA!p+4h%l8G(\EqP%I960c-8L40D5f]Bak7TOabfIF_?'IpNO#+'+\c
%pAMTR<XnGOPfb5-Pa>Vk9Q0&G]4`!t=&Nj/53<ed1A37D3RTpD"79,`-p<%K4ZP#Q/*hr2V-3Xt0e<Vn<#b!:3Cu%OmB%i-L1282
%EiHC"X'!ps4:.EuX[kZ4aud+7oTDM2Y8,(:5nu4PZmdlKDq4BroJQ+s"`hsI.o-87M7KCcZH8!<]dgF[L#lMX5e:%f,V8;r)Ka+u
%-,G6h2lkI><F6e-l5jL4>-VA)K3#^$2OB]C8*gI2]riZFl,D8Y.Zo;tV.?e]AOEfFQ8=m3"Jo4LU8@\g;Ps)?XP=7&TK(Il\uDe?
%(UO0G8qalgR?p@b^ULT&<9K/YLdGD]<9JU6.M"*-\P_!G:K(I#@cJSQ@`lPLMO4g/@Y@4G1&&!EY6uEic?9"uD=]b#(%i"8^.iCB
%`Jp$Z&=Dfh)F#>OX*>X4`B/UU,(LjI5V'0lAi#Hodh9IX6*i*DDu'3Q#P*f!lJDYL.#t)!NC`/\0.D(^p(ogkA05:l+?0Q]80Wl-
%=A;];m&QC9'W+XaiSXu'0j^X.dd&g%/@0l:K2pRM1@lb$AqZ-6KRrA5:P%:M"Td[Ngah0r`>l$/Q1sj2L+jAiEt\E9+9peVZ`i%&
%)_kq2$\6[XFlmlP1A".^$#tTLRp'aNJ\b-`>gDM8po,Ql#Pi"o/D^<Wq`+t]p+8>[],\;-[p__g3O'/CU<[p\,6>.)C7/QP7u;0e
%HCACHbXE3L.O3aUJ^700ROr:lE)9hib%ce^N,+D9.*Reg<R18t@Eu:qq&BWoS809?\<qujcM$/qhG/dMH4)DZ\@NaN#J.rQSl)@)
%K``tTO61pXs1i[F_KMrKrUro*Ca^S\P]spCCiUk+-Wm/tp\cO5npHU)5JNSYp<E1Q!W6E"/qRqQO8ac:Wn?BS+J%6of,KmAMQm5N
%T+&KYU_Ranhg4I<:07r#.d2SG:jP,i$E_MTg*Ci+>F=uT[$-.bdB):X6?+8j"/?AY:eCISn0+Hf'3H_A-'d,;"thuK]K+<U;\&dj
%.ps[Fb[TGi"n)F1f!$qi[9eq(P_I4We+$1QjFi*UCI4s7WTqF+4<_5]6I/T_\F"#aF1.qc6%1hh9cWa_K>JsG?"aVTLorr6\'O:K
%=k@7))%'#X^0OLOF&.8$;j7hC6MjJ8Tum4l@bT*@#U`JZ%0LDLML15egRsmF#&5h1VO/)l@$BpC8IVNCG$;@qN39hN05kt(Ba5`Y
%cYDVMmSbFH'&5*bb&LFo;!p)]=@Xh*$emB];omu=$6h9ogJKFK2E:d@.nW9;meW+IC?4tXc@.rm9#-kT<K!Mc^+o)$PCq01,ph3c
%$W_)BkbJ>C@mMo#3DYs&U`%)p?HsJ*F$N7hr#?\a.eJ]sMK6kHKh^F&[*WW_Np]=l/j/]cLeAX(O-fhY?Na$dN3S3a_q1?cE1Vf^
%W5<CL!4M$'EUK#:8C0YXPml>-$0mBS>L=f^VDYkG`u:0k(%N\;/dPB_%4Db`Ou]Z<jM.TjJEK0Z+Q+H[k-%9-2fYLPj,h\omd0(@
%V])\D+kgZg9m!q9K;\!#E!8=Or$6h627jNhcFIr>4^;8G-I9(sJQ4fm?eCBmF!1d_)Wepqaq<7\`4AcS!N]=l5+2J&M\*_J)ngXQ
%R>79Ke.HYs4W/?"3A;)?`Q2LA7,dg@16m[B]EpRG1R#mAK?ut`73VuDH)0sf.HH,cQigYO8Qbn&;soe(A)(NW<_cASP&KT:3B-J$
%U'"$UPg>$QbMJ>YX8.tL2%/62BAkj@I[_$2H>%0`Ee#*jF"J<3J7@&LW.lFFBdJbNKJ*e[-R%3^Qt@lf!Dc&1=JrCV\&Je(cPEAt
%GqteE>EoPm-8%SAjC`-=3WZ(lFj;nX%QBDaWi.2(hhu2nm\r\h=QPuqA20/m.S%frGE2,2_(rJ3aqHJQdO61mqjl]eUjUhGPZQAB
%T&`qUr3H0_:%"ma3Ht'da1_kX[>*Yf1U'!UhTHK>/!_n*%'2)g&mheAN2DV-@#[oL%k"4#KYn5/=V?ic`pkpe\t5,lW_DtU*LUpk
%a0r03^D)IbdZlfdER0EIO%.)%"#E(%\F>;!&c;MP4QFp5VBdZ\o]s11BAH#l6Kb_e?qFUW`s#R+FitZ/W,MesHK8NQ*]G!n`SV!\
%C*oIs/dDYkZck@pVM`L7=cuML"r@YS+Ub?u?]3eM\ZPNE<SB4!m\f!2-Q]o6p2WoQPC$>b0!SC4)^.O*QGt1q@U4]Jq:A<M$M&nF
%_s@LO7;-KHYZ[!%<Yad86=+fm[O4PAaLt<$?9ckQWgpBO'riBN.KfThi?&)d13"gG-.:HNL@hiNDc_#LSDCkQ$2i"8.,O(,c;=l9
%W4BN$Ijlk45Q\/iiM7YhLEko^!;,!uC5j/aYQ6>nhh=Dq;J$#0Nke`)Y9bC&$[u'Z/f5iJ-Ikm!]JqpAPN4FN+Qga#/DtofS;-4p
%E&d\S])`L?mdR+!&VpN>5m7XI$Fo%]Ata"G(gTH6cl@#Aj'_[W+AlhKkbMH.1JT++?]L]!6<ipI`U)X6mPBC'>8B-bO)2/-M%T;)
%"GgXcB4U4PVL.MhA2$B;SNbDa1d[jc1_ahY'msf&YVa8I'ePSMN5*oa%F9q;%o^MKC9Cd\LuFXH+]hb_>M4%('<mt,7E@Kl,XfZO
%Fu9NN3U^`Y;V./nfDE)kLhI`,2A4j4)7IISI3Wo\.PmOp<#0b^Q@a3dr*4c6B.<qs1U335BQMma6AH=._]h\7Nm3$^qO]#;i*>Sa
%iLA=&K";K$.Hp`l$p=3],LqL4kY@gn#ch0hEuT.)oe.XF`a"VdrLQ^N;9d(/kAG0^"_"aH"!6DRT&a&$4I1Bg#OZkPJW"t@lb"GH
%RG@-I:qpB+jbU<)bHspq'/eS`oc/S-3Z/g.h]"PW\%M_L'M?6sespB?g/40Ye0BEs7lNGk3FZGa9!k!8$>Kpl/;%i^0TR(.`NA<J
%3as6>pDauc[MWnKPOOeMY>^VOj/MOQYfhTAmk$%Eq3`Vg$<%\?_'EMgRp1/t_(JG5Qa0Is!n:26#'rDS&>8;=Z'&QurSFi%680[3
%jOb"Ue"!e4e&<pO-W>;FiuhH:kHMTF8RG0-F,rH=*9r1#!:?;e/-m#U.7`P,l&b*%8FS:IYSg)8KH/)<Pil/9MG\c&B/up2l]TT^
%TK:&^elU[TR_N/Qe#K2HTWd_PH'REIQJf!ekNQpQ!?#D`T;O@JqCON29,E9uapO'Qo4qXeXVusrQTgQ`RAR^A6"&j`j7@hNq^`:]
%(8*&.6o.(g#3Zq,%$EkuLrFS:flXirL8P:?EJ`+TZ;6e(8bOr*:QKWo4j<sih*Jc:>$D+$FOhahoA*pHBL/ukO$^m2micY2Z9RT+
%L?Rl[:8/+I7*fS,oIOa1T$o:X"32"7qd4m0Y,:057HcgB%sa5_F6cCpdMANhpB"i)&t^P2M_J_6ip^4S9^h*4K9a*gq*UfBWZe58
%'VDj@rdac+]%6T=]Pb6TBR#K]e+$??@*PG;di4OqDd`ZKZHr1r)FC4jF=DL%.!0n%&f5-f;i[;IL37QL(a2L#U'9_*A4nF'g`1")
%H">lg@iQOs92aA]RY5=/k/#IN#h7Jt</n@sStUFUXD8+^WJ0IhWQd466:18P-3PK,fL,7DTt7j\I?Mb83p18#^#l_*BRW":6_@Xt
%%"5[N=*B*QMT^[qZ#ge9LPk@pX*cW259Mf/n4,raF:6>h>.Qh[Bd>N25Q/+'=7!RI)duRudeakD!Zq>-N&848A3QEk!7pU&@aA@E
%/L2X454lfNXP3!'e'$dBQ952/RP'>R.UEFL)lYZCQ[/%Y2nmAk!0OtG@'e:D2KVJITk-QK&rCW-lR>>W81IikA8")l*nVb7FfWhZ
%W3PXs7S/J%?.dColaO,#[ochDR"4?>Gg;*f:\L4V5_!`s'#J?\,@XS!AD9.96b/!4W$eTF@5Hlt]B$Ll<Wdph1^(2-:_af$S>@Z)
%1m'q7-*j^XKe?Ye[X;RKETl'Z\\V7j4J4Q2kBah4#QNQZ'FNn><trei7f#K>0&FIPR>qU`cX7gC?o6_XfVFUa)6XD40[b,l?s:i.
%8%LbK"7=BUU?3M@q;0AoST-L4N`?)2^>=]4pnN5tR"=L%LjDc>6=)Gg@(f7p#NTD#b);@25T!+f$V`V.<1)njcY3Gg/29IHMAuZV
%2pZ2(eUVaLQpW[:k9EVGV*^BDAa&B#j07b9b>meb:K-bQORk@T(#etu1*.hKDM=+Wqp*;>X:gn%S\?7=@c03rN<2-3p>^%iZY6"5
%Ij]nX?Gi3\aq6n';i,*(dLmIWCiaIdC7%rN"%[q%SEj-j=m*$)p_VZOEXn[fg^AX!k[F+>JMPI<XQW'"]TqZ_TRq@lOPk2T]X/D?
%R:9j\6uc#8dPj0K+"la,N--Lp"ms!iZ^X`Pmp!`B,JMq+#^i@o.P;%CF!h<Nrt^.JXrGB0ST7;>[>gMV36AL;FY1/1\jlHZJ/3VA
%bZd#u)hFnWWT3gIH7oLo#seqM!2&@-&SD*86Jo5_rGIon#2MZpoR[*4i+q!XP%$G_C+1*N77k[dn)KAB;[ne'`QoA`?'mX,/[!=7
%,)9XCHom>sFEg"*/uRZb0mJ#WL,MhS%"8p;3Br/cF>jue3E@ZO_n:`4Y[86$LVL.W)/l]p5Uun[+csb1ROa<49C.Kh'lM$d]Q-,Q
%+nuJmN"%0[c+,H!?bHsXc_/X'QZMZO&7nhq7DBX9\ht_MDE:^+Y83aL!:$fiqO.AXm23u,jI'utLQ]!^nT^qkQs<]Bj(2Ot47!Jk
%`'QZ2Xe/BNoa"@ZV2)4I.-pP4?=74fN@>>PVrL&)SVF>%$].45Ls1mpY=6DAl;eWS7[XV>[^@@fA"Cc\Cu;!-)"#Fc#auo/i-8ph
%TL4=FRstAo&VuO$jqoDD"uirL$sAZ@h_(hc3N%=#$;0f"=EoZYWb$$DhJgZRFfX"mR-\G(OE+K%6NUpqhr[frfsk9NEX="oE"jL+
%Soo]9Vq*8>5QO!q(g-*,QN2F^e0WYMqA^Lc<(EqRb,g0Q8Q9S/;t/QuO!er.b'J`eAouZb9ljA1],-ZX@mJ6.hJ6'He@^IEF=%p!
%/=4+@k2DKgCG\]"\ZSESRAP@N-b4BjBn8m0>pbY<##*>.]tEB=Adp1!4-94f_)9(G6oSQ44L8P1!9m@P8g]sff;'L9Y1?"7>C%R?
%#,W6fd,Zf"0DrbpdAnF:7,nNh06:KJE\9iP6g&,mQif_P/WiNjBAkk5b&'lR$J)[W3TV[?0#m\;NDhqA"u(+s7c'7:EBo9dFK5^*
%aSJrm;MA]%6Fh:S2Sd0]!0o!'NGUDcMJ?BK)+i&sZO^!HAD\.E9qUE)3H40&$4n?.m;a,:)m)N-Ag+OU,@J2Q9e@^pndpYiO!$gQ
%<#"7&;-o6jD90\1Y&Y'UFcN@XjqhlTJ9`:Mj5mF.W/LEK,\B!-G3g``G@o/n@E<h["+@)Q!52AVLH6Xl/XeDj^FU&h"%]fE;'%R=
%#5Acn&>:n'&o[X_Q8U1mKUm.6:`:bppshE$kZAHbCKM.6]hVV&14b4d]XGnr`K:0]bhk$ciAnr-RhLmjX^Lr=HUVu*Re0R9KBG)Q
%<G:\J+XBEX""!Rh^eH.Z5jf!uYI$A7m.H@gIEF:QDZ!5J@`oX-?>iNX&tcNkND0@=G>$nUI;h(K%Lbt0Km^M$KW"Z+._8sM-uWMK
%S,qV+")crLR7*.L)cn]@JifV$!jk(<];[R0;1VHh.2U^NP8p9:\)c5BYpDut;AQJ4q6X6MP!k\R(NN,(IRZ'[BlR(Z+K/ftlrsCL
%Y\KdjK\<\R%DcC`@s2QZA<$uH9i0&6<\7VfA<9r[]#bO[ORRWb5tn3F=UKVS#G.pPfQ\r8%dJoNXZ4it//B&`Y[GZJE4_Qik6*EG
%#m&\@%kC7I3RG;r/!Y5Y:!'AWTYAjV.;Y(cWBnWu(2)]3V+trSf>uo:k$m1Z.a:q@YONShb#[K!eG0W*HsuSq+:tr&2p]$XY1XZ?
%b/]M$=1suSkJes57E<YQSb]<3>WTR.2:1O=i-Li'+OSN>,I!>CblWKR;a*t@XCZ(O&:)CVaN/ACXZ,a'KNVT-lK$D(HW*I4lPNM+
%?gm*dTClGg^b4$P:p'(+A]-BU0SYu<K+aSC5?Vo&DVG_IaRnH&*itO>VcgUX#m7o"JNXh9CN47ELk7eSQ8:?!`.r*e*is*JC:c)Q
%@)dcV@kj5&jX`OW`,B_V'RA[14BJ[WA>Pt&_K!oOlqH(/9WRMk(B)E$AZciRZZQ>HpT/,JEg$eN>Zc&Y+ZobBHi7M2aQ-mmPkP(?
%\or(jIK@Q0etfYaXKrmI'';c8]:=N:*dFqWAj/6=&%2i@.7\^Y$g#[B-qHF%c)MNLalKT\lCjL4PXd[=M`*RLB$6@`r^7S4odmS$
%4tV^:5m1fT2LrBRhTN67Ej7s&?A>PjVH1c6f)p<GXUpq=ZDpJS;B]E3;!T`4khFN3Srq&fNqC?H=WsD^5!f!,9B7NqXfeu"SE@7u
%7;fkgBXlhCX6O.8Sld2_"Q,5Cf%57o7-R10-1]8Bc=N9>7qNgo2RsU!7"29UfJ9Ssh.@%t;4m<1W*]%+[P6f0%.7bn49J?]EtOjl
%'4Y?I=f;VZ"_JjCaMjQ7)g\O9I(Po(+&F:K1Wr'"]9UK6q#p&H1ANuK9CYh)5D(JbOe]S!`XnF09JY>`#k[gX4a\u09!c8*gs)af
%I&R[To;,8"mUDhqAl`"e5=<Z$83ZNeRJAUA#u0#VEE\>S<V"Tfj9Z<%\mO/:0aPM8!H?_)OZZph>o9`H8=gmcaM<?Aad]fi69&fl
%.r.K-eJ(-N7XdgF&C5[9QPY>$g8pG"]Z+,7;KJsYbd1=oca@M%X+oeu@nZbq#ZTfjn-#U.OF3>/iV'j7:YL=VUdgr9lB;&(=,HQ0
%!Yp8:1Ij@I?,`8DR"jcbmK&@2a^ZN2/[+nhTj0;*JS#>=n:p(76D#0%'lbZpPc\NrfQm%uGQRrckCR<`iD5^X^X$HH?(U4"e6#Y@
%-!/2J%]lfc$[;3:FD0?Kk=SqWEF?#hF1tr*_K.X22CH;:ip1$>O7.E]Y62MQ_0cS-%?^G+[\N<E\Zc>nZJgt(:V(V\**q"#C];_E
%TqHD2n*FNHP'sAJLdMqGDgoIl30#BBineBu(0`YiB0Ha)-tMl0*'AG#9<&#*/A%AEN!lrS<8Uh5?RFrukRFCo"TG^6`V%^7j?-&N
%`L1b_Ks2\pA6-q,5al9(Rp>.bd`f4gf0BgSAmA/>H,#LR5\F`hnU)s5\J5+N%cMRk$VsI+i$Fb;b'Uu/""?6l(Fb$_M=hPR_4o&=
%<7_pjO,K2&WT4NHTZdUD]M#cu3^6ig"aQW$GF]TfH,^[fW&*Oe!JscgXf1;cE4SF,pZWFCi9;n,iJ477Lr2+<.2Uca_BH1\>Ys<4
%iJB!"Zeoa<J8_D%%>^,=,VLj&bEf`%*EboQ;qS8Lq:q3m^odjmp6:KW)&GZ3.2O>sL?'Hp(]7S1bhL7.p8IQPcq?1TK$8&k<hb[`
%pWt482F)7O%]dA_CVg6.b?P1m>8&W6Ap^I\'#?UQ1Z<k`(&4.B!M&?2anZ][r;fj:?+pKV*`JU)(,gNb`Al<u37T0G*/C83Q-*%i
%>UhrMZ(:W53>fV7k#WH"PXF&uA%"f<[.-&\/Z;2?]t@o\bc,amZ+c4@@4hHFC'oDh^'.V@?kI5N(>Nu=ceKqj[if4+XE@0m+;GVX
%WN6-X;Cb!@QZG731Yi"7hF<<s9ktQ5)!pC+1G7<74G[>4`.IY\md_q0J"[_V/)NZq^!`W.@8L7>=\>1Z(@u<E&fjD#Fi^XASl3LU
%>!F?<'M1Efa(,SU1/.h9Q#%V"jDs^+UCrPlDc[VAls'pKSd.FrFu_Zi9L7ocdbZi73%CA45r&E`Tt8RX!38d$jd9)"(.)b[63J7:
%ClM0W@SOmJ$W$mOdbQV/!a;Do10:ON8XF$,?Mi*DEoUEM_iIEu!')#]Z1l?U"b%/OJ?N2cd)K4kdim<EnhNkR\"!eUD):cUjeQt]
%n6_f./J)rB(HE>`bo`'a;$BALP\Ygehb(:!X$q$u0%0mja$t"L$)j$qB&(&t0%6Q3hbPCO/YGT\/]K,m^Hdr;[nM](a_1"&Bn7Ag
%\FKm9S"%,BCVr=g0XHN2<"#7L-Y?Omqi!dS]Un4W14)R"!$+u#8==2nnsI->9UKSrP)`d[=p=qSXSjO\;M%'ZJl?+`;t;ITHY22F
%>?hdslJl+uVHJGCbP?<C%LQ"e=DjH]nD#FN'`9bb1PL#1-('.nj;'BL))>GiMjIg`i&:G+['kCGG9fCu#r93M8Kk/Mi.0o%_6R8T
%@\ai/6cF7$0H*l)>f6cH9Q;d?/:^hBURFc[NXd:dQTg_ijYT*=0saX_EdmS1R"-gTPenUkQmEU+04G!/o3ueH@KJ/aY*2Dnc\,?f
%Hb'lB9"49-";>Vs7Vffc:ejSeK$l!+;RAqA@1O44nVp0t#6s>Jlu/5snD$_jJ-'!H"p`W^HSFQkIpPeiHY0o6[<s)D@/)%!?^^I!
%$K\,&G*\%m3WL/HM:HsQB=[^,C&%p1o1tu_8H(kJ0_9(F*F#3J9\+Mq]EIk(A/>`g"=EhF!<r]%J?GbGb+^1aas7s?$"i[$.6J@@
%J>!fO=SIPt0_<[jgM$tkbC$tB(+m@]N4Mo*Qa?1Or.6dT)6"GX<W[_Un,j-qJ:".$Dk+ZS7!aoAM?d#\Y#am.a8ruJ4be+m3kg"Q
%EgY>B6T9O6KFr56lpG95-b+J1-*Ti%]e!%_l6pqd>g1$*cb(A-E4no*D5D?M)'Q2T8%;7P=;2>=KicXM/1[Z_5m6BUN@\,0eo6p"
%Zc+$E%@I.K>k;U=Fn05O?IB\Q_$&?cQ>SG=QJQRS[jVSl\trX#aHYBgKES>f-2(Wi*7Y1aoZLNii!JqQS`K/#F42_<K;J>F+T\,b
%V8bqp5Tc=o3/9*A!e,oMW\gA4';fQ6KEQFDS6K-L"HuI%q#_eVN7=f;g=%W!s(jD&d,"%\4"q;oQ^X/qAK)OO(J;DIcGL=E/a/>@
%Leb\@c^$AQ<_Ko(3R<Ol/WlIqERD'b]#@o/:C;qhOI'W(LN4aFj]pFu$.=c"Q:t0XS%g`1Ri%M%=]bnu!eqXGbA/1PJr))90'D-t
%Ufq`R4//KSWl:2um%lkq!_L7WbCs?,73>Ii%u^XU:P'Atdn:Fu+erL-<C?.$3ICSW9FEn."/=n\pMrOoQ8VYn9\,tCKETcq0^6Y)
%TPdZblJa%]9.9GHp^!8Gmq3R4/p@;I>'pJF(Q[Z[HiuR8N?JBu[7GD:L0Wd+3%j.boR=EBKI8*NfXGA\#<i3<]sU:!0`@HN:-*th
%B=4$-*<EiK.7>d(3Qo60T'Ju3i*bD^/Z'oQ%]AAkYbE@b/cg#F0WU%EYaT?9@V0keJ`-poe*Ul[SpTB!@t<lN_99DU+\[1(#;Q@,
%,%D#d1'3=\O,u[LQoKH%;\;^,[Y"VXEo.geNfIb_p$uet\h3oAm#6,G,1%rA-(eUNI_$Is>$M1E$>S-@/rsNIQH!Q)C5,s67geK2
%!jYQ_O:gt%eemuebSLr4(h[*FgUQmg`L7aZX?rA"*&,0F@_?!l_R&:nE'Mnn:N?3)TfIkh.B@U-+IHh)64R6'AA/Lm&k=W*O+6'U
%6hTr[D/oM'(XBG1754C-FI[i3/@A'?*4ZuQ[j>]:*ol_.89HP_i41R'U]aK5eHE+Xf6b%n!%g553^UM'FU/ugSYe9274+,?3!JET
%X,E!g]0?,+kQiM(Cn+MdRloHm@seD;Bi:M*>qcBnr,>)*KoU[9l;SW(SKgMQqX&;9T!Q1C9'EY,46?[bn:i@?Ks2/N>M^;_]W_ue
%:+'n]O:_UJf$F_]NI_&Cj`Zm)-_CoS"ItV2()6k8Dm_q[<!;!IWON$F5rO!Zh*s)R29Z_DMa'qPF14))rX0OSVm955\1'(i5RSA/
%PtK?\^dUKlQpWoR&Puf/$R^3'6uUei#dakSaBe<t)8WSI:V5!WP,qb%,!`J@n)[*f^Nj<6LaME00-P-7Pi\_bS)TR24BUk_P5!Im
%L2SMo[B^99-'Hu5NF7KTm,g%0HTN-+9K%L>D;9P#ck-E8o(&Y>N!l8YdGHQ(iAh-lbt8$#=?c3d7".Aq`CI^<e$W"Uq$7&be[ko*
%!LHHb:1a>p-VG@kr?QK%Rk#-sY\8ej-jdO\TG32q%mj["CZY9r,loCJ's>b#0:o[OQ$b:mcOE2Ke3>nE36u":s8C_t[<>FY/4tL<
%YP/,F6(g?cb'p$*i-99OhUj0Y5j5<T8cng+%3Q\;-TV)"Zm`;Sn^"AS+9-X?7m&1P8qLHfC,d5#8O-^#iClg>Oj0!U-jfCRAGIc6
%Q).1PJWbORTp@G_#m0dq'^,@aP5r@fiDll$p=?HlEH)W8Y;Jn;]9n<8"JW@c#mf8JSWb2cq_?j(P1PfN&2m*p<_<A"A21,.0)gQ4
%2H9q'jJ7kki#/o[6bF(e&)Dr1Q!hb*Sku70YfVd-9ND4;m8d1>et&,Bet?"qbT%E]<:+ih#L>R*K(bi'Hb%,u.D_6E>V.*FaIEK[
%XA(=K"J52+,.+Tc%!g'.B-jdaN[tH[?mS>j0<LPHh"ph'VnIb[R60hA5Hkd!**9OTX9<X*MWMtD4?_)cdX.Z2=QYkB&1/nnB$-iH
%Er/!.O$".XP4*G@+/_P#5juCNkVG?IV"13;(oN!m0PQkAQ$m'8=AAI33=AUkc80\"ol;0$i*7_mM?W2-Zki.8#3S"GSrU?52D:Zc
%8KqS3Nl^p</g#eGI,Xts&=\G8&LSsBKH1Do#S,7-A.[i).08J:[;]^4b.%)<K\PTFr.*un6QiB'""D'N2n+t`A@h&o$[rB,UB8"K
%=:$;a;b@9q!h'%<OPGDOJGG=Q;Y"/do!u#NL72;%HYB"]YN'^W<W\J]g*S6LJ(EUS8PnVn(%Q<5k3"94Re;Q^M^!u_8qIqY.;]:O
%l&0^Rb2tN7cNBY'h^Jj5ouhT[/P:Wj2.c_L:VlY^nh^6SK0/2f?4LS)Z8`/,rj#QtCLE`/Tc2@1P(8S+?HF>KXhkZ%pfQs;!J<R4
%&l<5j^b57CIF0[I,$BJB.$E/):4`f!P\Zgepkbcq@kY=7C%q_6H*6R[O7YRn5NP&10KFdWUOTDVSWb2#h_!.ertU8)&>bem,BBXf
%(\/@`qNHJ(*R8]kkL7:G!m8i\JSXZG:0_a#-RZ`X3sW[g!1llWqk<\oL]qP^F:9UY[PANCVcJ[ZbQLk,9GWa:7]=<[?331VV**WS
%0>[Qt$3sl=HF(ZY/7&DT=>mV`dgSA%aDV^nhdYC3+=IIN7CPQS-GIc3oSk()Ko;,SK^',Ao'+G;P<^>H";]>fhoYG63g9_,!B#)0
%ZROr<o_^XZ)-:h[C6ITSJXg-1TQb%l4\$8bkZ;\he*u.sP[OOGOPLuR&"Eni6+)rMJ@A\_=p=$*l=[$<,SF!!!m8Okk!2a.#Af:n
%5YtkJi'KP_[?"*Fm&2=Mlp(Wsg?ZGb!t/QM'[Y7hp!Qfk!kQ=MG6`^$3[D^\B+Yj)c]`+4"9m7_*bO-o/dItq=qh-^)Cr[h;AAVE
%\JuFnkT*FG>KhF($ueoihC`I"3C.>H':'Ep=:Q#KN-ZaD`t=>`l"Z0ICBMSpS7]NW'[-W/gaAX\o^kQIjSYP[6t,N!;(r*1>,3bb
%"\^F",qXuUC6@TKJYI[Y*Am.p)f>ZnWP;`a_/kZ!i/AZm]K;`tjF7QdoEhUq'EtRb&-sr39:Kpd<%!reE"PoQ)RII`Y&A@ffBjO]
%NrBXRF$7Xuc_hf[/`_o#@m+cF9HWBW*0@ZmFk:m.m2Q:d^>.<1c;EN0)dW3s,d3")k6"3T]cehXMho&ho=:"ZaKCdL:Q]pI_qHT-
%(D6:7?5*S8]CkA'_1:LT=&d\(`DBD+/]4o\n2n<ig$IRj*"VL;m_\P9;+cb?+PSP:/R,Tm<JF4?p5>VP#%!7Zr&b9]%*[J8V(D-/
%:-?8Iio2?D]F+)/"m-aE_R]LF5J^SU:I9o6l$-m7bgZt,OZ^C6jYQ(qL.P1&)=V=!o3VpS*)fIZlAE_c4>kT^-SS\?\_jR0rrXb4
%\ZA!i"$+2^-[-[\?ndBC1#=DA9jE#%\Ht)t%d,h#Et34YGMAf65+4T-#1ncN54,^MOgo&Ui$EcaQOE6-j<i6jP?L7N1:[_X:a%8<
%mb@rR#8$e[0RZQIhV5,Neli_O[7E8r'6(hs(6#_#H+J9:W-O]O;n%_WE8W(9"+P]BE>*SG0%G?]S;-4Wb1i]lY,q*Q"==@-CROMl
%Sho\*?L.f[e(W6$SR='Pga_>/>Gs:5$-02!n\@mR@oeS;kiRc&89%hpnqkhag.kCNf/^VYl=;85'^"94m;a+o5f#S7]Z3uP\Cg:e
%W[)/XK(`VkB(dnGL$mK2X(EF`>Qg9mhp159Rc_:9hOE/of$AC&jjW4TZWnIjlhNeB+C]nY=o8EAKK]4O:I&@6#C6H/K-oAe\U:cF
%774CNG!KE7Uhor3Y0X=JP3b=`RHNhYaXqrC$G-]4K9XSmg[d];%bA,u4l^8aSld^Sm+\e!"$8g-XLLII$1(n&@`r4.i2$3U=XUj3
%k(c'q[+G\p[sBRt,]pF6fEj\'7F.hiRO4T?m/7qd!@G5LSXgm$)nG=Xm5Qr8MaG!\cGP^CR'4RKXW'DhRN&F?e*^0j?ffg^TI7gF
%:L9`s1qq]*EA%P"2j,q&Aq/<VC(BaQVi#bCo4_iDWl<XIO-mcL]j,McmV:kbDd<X$+,l@"^T?ig:I)Gu/>Qn*4?aSAU*l>NA1$^3
%Eo]9Y78L]4P1-+8*^B8l5YaS`jcj=mX,b60lB31Mi7TFJL^.+:p`KbrCKTX#ab3Z8@'sH-E(^(80X"WJ6QGZ&FhIX!<npUX>J2,g
%#u']5W5k'H#tLjT9BJ7.2'&%jW68D%MjY\dl\Bjh7rL3Qpu=R;YM]?IJ%>O<s8KKWo-aOp^[32gYsVW5MVMTol"NEaX:@*tT1ps%
%N[h6#`V%c_>@H!$<ib':7*6K^\_]O(#E)_]pgDi,OnnmMGa]fb2,,5\RTEc9%KFW/rll;<+5`SMBJc?.r7\.IceGh;g[FVRs7ehK
%TDpVE"%<m]g6Ia\;Nr1#57#n<)Ro`T4B'8iq8`MiJ*HW=[t">UnA"t3nYcCAAH28`h<dG_rf@*.h>ZYWa'\h4?dbtPZY[$Vc?LDD
%bPq,s46gkYYA]C!ZcR:2@?/Gh(fKb&GSZ)b'm`nX&$og.E`=eLB!&u1H8U&&.5t;ZV.g;N[V>0Oom4<Rnp^"[?M9M&E]57=8ITUd
%X>q5KL^SFX3V$'I2^^Jc$lL3^j;oAolJ09gbt60GpJOnW)nTY(S@S+Yj6,L;O.;EG+`U6['SbA\oulsrs8KqK*cEr$jj?PDhiIg6
%aH?K$Xd6ik5Q&Pdrql*OIeOq>OmotIrqh3Fh<4h;hu97qi.(U<rr$4'oq.8H5Z@PaR$r@!pHSWDh\=oODqkd$p+'/5cb+KEZ_"M6
%hu#dk$ibnq_gh]=r7ADk?i95<\adEf(L0/u?gr\,(1$q!EnThu^2)]pZPQ8QJ+Gg]s-l6oiVg5mlKJ3NrujJeE?"g7J,%Len%H3u
%r\s!"oDG*H\Gtrs(D_Q"c$.h@[Zqmj`GaE1g_D20_#E>?C]WtrZSfOhr]Ttj'B\Jp-K$UB=U"_]YHnUco$DlgD=H1T5NY.,c+be4
%r,8tTIe/?#m[F1ROH95-]0H;\+)g2DSkP//IHL^lkL_9tfd(TO)bZdo$k$)O,QXuqCu!?DI"Rqbs5u>ps.Y_G)f3FJY1S[7;9*Sa
%;#]TtLd.SJ08KACG@$lFd8(]Oh*1CXk0nG%J2+^+5jLAp(Y]'TLOA6n1r\X#JE/4Sb)%]QH1h+mI=-BQ7@mt\ou+CFXM"fR%_!G$
%mAe4A1l'C1APrI&YC#V]mN2!T)Y\ar\@+8sK"J1LOq=>cbS5m;';G:K&Tr.A$;&.ek;iM5`gfq*q`_>.6Z=r5d:EZ=$0A2%O*,80
%$BeuO!</\;H?(8pH@g#kP\#<@4D#q5(ZgIm7Orq"(b/M\`LMC'@gtCHC#VitK0o[QC#a@i`cQ7hnj=ed;*L)>GWl&+(k-m.O6\Zi
%^URPAq)@39mU*9+^3ArT5*'(-i81Z\j,Nr^VY&jP1u%u`n%^koH5Z;2Et:J063"r1BX;c")tIp]k<=9'<Rq;$c^ji;hu8,.\%\8j
%4pu*Jr_S1(i?\(="?Ah$qH.`ZR]GqsJ<7=QgqP!8rDma^bmISRs(6?DKg+<p/bgc"e98o"eMm]s'IV2L68PXJ6E6a7^X%8<nN<KL
%g>[:]AP/PZ5t[&SEE<,*)e40#DrG4\*LnoL3+Son,X'cu<8iBSbD#m*]bYRsR^mp:&Rm&Gj^sYicilU_dH!H_Xj:q2pQ'F*>`DMX
%ibEj*TuJ_*Gl<mLibS?5J]Qa?7/JY8@Pc_L-e=AUTIP&DJ@S*g8]Oh9^g)LVGh\/7`9s@3j>K1P&Dq!69o>\sIuMDD4^(_jj@tY\
%DM;n(Ttp!g:k2Q77$bm][sJ##1K6F"DhGQmI7"=;8:kfDiSKZrI*"qJ5`pt8+[fVHY:9eVN9#sVn6nsU<d2V8PCeo?N)"fW?/VD-
%5uo*D[!Jc_OHRT?!)9<o7T.22(^&Hd6$3Z`=NQ/M,Z97<7IbPaHp8l?)nu@9UXLJmP]_,pbeSo\-DX5!-&IGFTGmo7gqjY5oXRML
%OjIo[%&Z0ta4WS*;P\).H3Y4:YkfX+,"nt""'-1C8-%&cUr?Yknme*-$)Ip%m(3rD8Ub(d?],Q=^oV`#=mS`f$R#N"fS(`QU_*Er
%<=-BnW+bH--57n#em[UDa6Mj023blp=6sG%C>rNRaW\>$I:kC:Tl/LL^^mWOc>5\=gPp>HEO$UM_C8RY&47gS[^0?:J2!-uen`_Y
%%<O_$.(a)i7jXt!]c.5rkX!#7pg_XWc"ONH'r[eQKW/+J;T2[HjsKN%6m^E9EX2]V-?F[U'TE-M0YgtOU/p\p8P3KDl9*`V!!CA@
%<t)Jn!_hmk;RkpG<n-Y3!s-rK15f8T0!Gs?#"?CZ&63/%BGhb):-7_b)DObrdOm&rWmfCn,TI8>-6:Ae7[Ch2A7op2$HMb"?po0"
%I59S?CnKRok,nt6'q"'abcpcf!Fj'"YhJYg"_.t5!mHJHb__<__Z`TCU?dM<;/^sf;KNQEpu@kO(PjE"CP"Q#+LHFtpb0Y:0Q]XO
%\9S>r1bGOh?#hHmQ_Y$rLF\H2U;<#[g5[gg.eu'pY'-9eAUA4p^29l&'f!#A'1ME->Rs8<ru=YHMlGQ]=8PR2D,HP]*eB^\pe3*u
%l:`p"B:3)mj6ZL]<K<'"4PUFbko_K$RU6D03js0nbi4ZSm`_`aU%__$ed!l$'>:*tf^qIqU7.da^f.@F!#25p^C5C!eK2/9#1:="
%G*;fs//B],6O)7F>6N;0`;/kk;%pbi!3ihXbUn@I/:+I/'k8FUEHDD.ciG5R-iT,B=NFg&"G6\H?7,r5HWDjIUt*JkgOXESLo&6V
%,.$J[%7Lol$-\!SMY458c:T50%-3"0V/e6Y]b"c`ga3&,-n6eAi#9Hf"t4).#8iYu.ZLJf<cbfo@K4\-7beN)c%Jnc'Hg(GJOtPQ
%l9W<@KACnlLbf,'#\"Qo+M'7<W4bBJJd!;^eG&PG#uloXCoE>n<@8*o2!V?`/uq^Q]n[pO.L;dOe?rRe@j[c%diC;FM==d@+OG8K
%l11$U*>R6U'N$2MX;`qaAbRG3mik%IjFYgn"!YZS=LsrCUNVUPo9pH[4:(&[e]m9J<n@O7Nc".Jqgi&3TldP<K@WnX-C2l'I&j7_
%lr*:^Ubs/h)p/E;EF0!H)\,lsM]UH3CU0oifEh08$jiqb].`2-6K9Nt<-(b0cmL!7UWI[fhl3e_?8&_EP!uZC6'oQE1Y/qmD)uQ6
%>h'<hO@(&PK-j.r^%;Q*J&Z9QOoptNhW5g5/1Ut-W"1>]M#\Jn$P)o1-_"KD6u]"`;$<jY,SoD!)JWU*QNM>%$Dp&R/BS>Ca3[HM
%%c/B!O,\uI^@3al;(2]h&F:0HMW_l-3]MP=aBI)f2f-g/07f\AS6`aejh.N2,h"d7@?tF5I2?!o:hN?sMH7/.i*O1+P/iP1Yd;Oj
%+&R2XfUeYN8CM"7qQ+omWRPKlPfit4:md5E?X3`bPiphh7FIh^f0%d;/$(!og_au_$b*c,$?IEF18ML`@u+_@a:3mL#+0.O2k\;a
%$9)p"g"kT&T?-Ik9Gan&-rk,Y#YgUL8BQgW`D.PRn[kJ"bXBQ^+6l;u8%"ckJp.sr>@)+c3#@263+04X/.q@TX`lk5[E1$$n?(k:
%(;!`Z^t:HTB:.NYk0U,X4b\K2/TrSo/XalaagI?N+`jSsPtD:?"D\*J+deD?@B[`h5fmLBFau(Vg'UuAUe5O3OGgMs,oMG9Z-W5t
%<t9POnAohZPbta`IR(4pJe7ukR/5lu=:bQXC.2,4i6GmU@u@R+16aL4KE60p0LHGm=hraG:&nP_;K,0klJV.^F1j?fmW#p@7012m
%7tEV`P.[SX#]XTcAA"2<\;E^2Zo!SpQU-5?S0<QW\*a`Y,`Ko_gn/hq7B5cRo[u%]<UMj&o+f7/6RM_6_%'2VOq+1)EATIAE_n$;
%+U=>YE<n\pQdLG=oK?(\jIV5=+g_Q4'l)o;"W!h)=KIN8^frt!I)8smY/XQB@/5lc5nn%3iC7e)F;edEX-jVgTWec+bdaa>78F@:
%\H+qJNSVI)K_/1,MVC:`l58,t&Z+-6VFV)g,.Muo[4pZ!l,+8I9Zbg!$`0iQ5IQ7a:G>Us\u0%>AqWrlc.&InMa@g2ouBEW"VW5U
%"H'E$lL,9BBCEkNhEWT(:4deQ/dUHE,CZIJZNC5d:5HNeh5q29a)."T,7@*uAiCZ;,(u*h-nCE-a\^qP*6VC\'FVl,ei,C^K:U']
%SB1IL5`=FE)5Zj:3ZjBSZ,Q2@.R]a8ALIi?\@JqBDO_!eciFWM^l'l*JBEnTL3![-*/c"&f2/+#`L^p6"8,nR??,HJN7T5+"g?5Y
%@,_s,klb9@n<sm+BZCESBc_%;n3D$FP?C'lF]2cSQ<Yk<nAH'[PGL[r,/a*jY7trpVDSMu%T-9O'GtfaXjTT/>-4#N.@(Yo=FDtO
%<h^GjnoQdf"aDl$Aq[.$)A=SIaSQ@AhmM-S(^0XC=sH"4nr>Lkb`]-k(,+,`f+HeG(??*c-a>Js\B11Xg7`cTOMSP&[?,(u0)%(-
%p!\:Bb36M^Ab2''erj=&n5n_mQ1Rh!@fZ;p8VJ35>jb?,\O`ni$[bP+3>JCQ?f$<b0e!fUqCog]AA70q#iLkmH:6]/.]Tu><gWf_
%MU98W^:^a3eUmbKp4&H.T-\:TQV#+;Em/LF5dP`(Y$e#.6tQ=*KiZ2_Cf&FRpqg75C5kpu%>_0m%UM&lqW5=OY!a_SHOVC)cVtZp
%/-UQ$<;#Zd[BAro2aS&Ip;Z$eWs+e&rdZV6=Qm7sURLK.s4.&Y&bqWWFG-u"MJ@tNiW>kn`%(YYY;CKDTc61FBtP6,q#!VY?T#.X
%?SQr=G1(sX5jHXW)50]V$4N@up#_&`7e$55p:k?QhrCEFg-DiKfPYrY2`\<V6LgYHEuW+OhLUOl"4+qF[c\1TL)1kVrR(\a1(\N1
%7^:N\])`)0aN\#,W\tn_D[uR.[\<#MW_gaJ1Lb?Y=]Vdej/)gEQ?XguJWMRfb=r&Iq!U5IF,+'r?BS$jpk@6+!iRNTNl="V/)<+M
%S*d?<op.pi@tEO+T$-!*4`0X5.^kVX+2V.n:iUN:(2ri_ih5LEbr(W99JTgc(%._m<"<tD0Kcr%TAG59J08m'=/DK?'$pniZdZKa
%"@1&/Z;O?F>;/gkA403k<(A\@@Y$kYc>JtshXf411ZS+_cH)nBB&rP.B&oS6>]o8J54V^A)Q+XHPLk44#e/e(JfA7R#Op+9r=@o#
%9,E`Ii"EP014?IaX-S@\$[s\<.heMM?LGrZLK@$;$OOOQLR5hR`786od0N@$7a'GH8kb]SLmKDJC<-F?($q'LMdjDNCA!2tK^rpF
%PT^-?X#\9HJm*D&>kE7fW;gnXF)fRA@C7b8rHd;ccemLC:X>Qo^V"(UPmLT#3p,>!j=aK8.f$E.Q8KR-7G#=p74N)1IVfFgPcB8U
%$V]*^^>sak[/-YJS<:9(Dnq5e&`=#>50i/a(-?+"Td>`\Xo3\)>bBnerp?EWgDc@IqSje<50/F$VM_ke?8P"T<Y2[Qn;[^&`oW:G
%^>2;A><&RufA\sK4g57)FUsMAn`.eV5Kp#"=YoXE]4^3R)`.'\&Ms!EVedD^;`q;Do^0>2\HnPFFg8@sh`/Gm$Ilb*pJ*t]*,'3L
%ISi=P'%.'@>S:O%@33)g8POAb,"jJ`,,<'ola4/u]/Tl4IA`1bhGDg8*(a&^]F(,f-Yie(D"-/_@$QT/U]`psOMMISE]&,@T:nf9
%G*<?G.RM)+"mG_Jd=-IQQ=%?dN/PLH\B$II%tnl\e`=P+UaR>%#fb;'6A3jC/5-h(gun0EHo0GcDOj]C)\GNT2Q)B9(!E00<M<O9
%,#$(-JiD?7e<8'n5W&Kc'*=G2!HXaD0e#CpZ<hMO%qUSWK"iYrHjc('V#FAKBr:B`4\M=9;slkfE;q6s,46UWEt)F]qkXi_EcF>X
%+_DCr\i1=G&2GL+670TsjbFbdh%>7J,(0j(GnDN#4&3S9[l8.`<^ap-SH.i;"A\#(BNdS^->H7D5^q:rV)tmPa7oSA^I5\\PeN<O
%Qk\_k"EcQ$WIusOY]h`+9s[i-<^`0fZL'Ai8(3^->[6?]n`'KOe!ra6b4Yh:iAqY+_Y@U3#-tEuiC:B,:ck>-K-]-+0M9(B7A%%]
%h-\H`*p*"gTel9(N>_QiTJc`Afd@:lm"cFsfMs^0aYibU8f+.Ca:W^*$4P$a=/H5DOYe0u<%7T[D$9Y*9dl?"70jB:Yoh5'>pNTS
%3ij%em#"b*geRVsMrmD%fX-KD2g`XJ]BJ`Fl+`JA4Qr/>p%n?ef:Tgif:SWoc+hCWrl@0,Mc$;*Yt/=p8ol4V9lDLP:I/Ihk:^Y5
%oBL^PU\2)Z#2ch\;+ZoC6SS89ZMrk/H25</N/UU%jL&:!0Yplb/b1V2!4cW:C.VTq%'JoW;;"eBm;g,ehj@1hKNda:.*e%C=83$$
%j>Rm#iCT(&H&+8BO.3@2O"acCG=[o^N)tp2j*6PTCp#K,kP;p`7B-Bd9"<^aQc$J+ORqgeg#di`Qo7D"?L!*'n?jn?+N5W<C;P0\
%DBn^q5$Gt!=,,]I!1RQG;<`.d1ojN+P*s"2EBenV9(0a^?VTsq*2o+o!=9_:Q/%YXZ]p=KWMJ*<DrQI$#]F<(&qX8O1rN?j=-\AS
%,IiTA2glQBTDLDn5<HMJ<GN.b..p.APoHV:/cKq)XKLaPNVWP9;h<tUGl6c@B7/qCI\_E$i"c`BAm2+gJ:pO_aW_J0,qKKl3SZI-
%6HE@m)8mES/8+ieX@,KF!Bu.>XjD/F+/0((,(f:)?!IeV^>[Y.K,%7?7An$9,<cThUR1jY:sqWFUl3eG>#4I$'M.p4s&D?F'H%i8
%bq'(abD(tbQR.ts"J;,=%^itf"T2aoM66H+/qk'&.J+^Z27mIYcqu!_Rg(Kj:\L\l5,Km.[5r+/F\(IXcLr?lR6Wdm^!pd-AYpg^
%Wif!?G@47a=3Ji;%'mfk+&s7e@\p/j)jhJapX/"#RlF'dq9*%_;F0PC@VbhV6OqL*ak@VEY@P8dTW;WIN=k27J5s8DlSt]G#.kmC
%1?M2#]Cb+M_I<2hp>[bqWc0m<e@ca1JauBKXZppKG@%(`G9f":(W-tiOaaA-`jc=pYsfrEHb#INaoeh@BgrT/PX,&SbP1-@HWH9U
%?Ibi'.##S"1I!L*l;214=/`h!FucikD5gPd'tLXK,\H(t<].tX<_EZ+>QArt,:?O(Qlr'hLs^,:?!]_)eGEJe"1As1,['E]<Vu5O
%eKD!GWOj5S,``aRS77TJe86LdS."CK?#InDRu^Zb=e;+4n?B[lq;^GV:-(EM7<tcfi]/WB_Lch&Y-AM[jnO@Afp+ZYnRtGeAOHT)
%hrTXeT;ciV1#8ZE9d>[8)WtVK`Ms\1CfY%I4igM#BQhUn*SK![Ebk^&qEkV24d@rUpNQokC_GTU.>2gI:lN8f`bi4h8]*_".@oO9
%rP8gD]A=>]l,)*E#18Jc>>A)f,Gnm(dpj'/O@8()b?Zn)AZ+rIBCkRYIn4"JX4chJ.9(c()0]5`4^^o@kLW="\Wg:GG2(^gIDBpn
%,e*L)JHeD8UY#&WFLS'j6jq\q"O/6oiJE'#9[2;$%otat[:N")]k[Rm)]$rg`Lf(?C4a^,EtB^`*M58;WbX)6J'n2+gT[WM6PTNK
%__sgFW2C)_^i5sC[C(W*J(IG)2ZM(r/#_><d9sH^MAi/9qe<ePd:VpHI>KND69q]3p4(#?B<1#hA[l#j@V6kO)"O"TGnZP2iF9.P
%q^\qZrZ!Qn8ljJ'_UBc4\I9*/MW3fai]]bnW:"-a.!qPnXVm@TjU8UVru<s"!-$LdY@X<(W$M&g.k[/P:XkW(+F:b3=#3DBjJ^D,
%^Cs%fQZT4hSW"_.O)u%Ze@r$u2<@8*1g]U>6)>M\D9pJALPP`1q6`u-#ci#)pDtgB[@e%bE'Xokj^*rcV9C=_ekSI9\t.s6rd3"`
%j$Ms5MHQ`QQ8u,Kp/*W\#^QT<i?h&%1?jUk)4ccW3-U5<Q#lO]8p>l'I23oBNrm\fc75Gl?GJW@n!,063FaW7@^c:"VZMlSj"rYZ
%WSVR1nR^Tlr2Vq_8&KScfk)al!MaRk(/*EDL\@?LH\la/'QE6loR^EcQ,*.&(Mr>JYFW?E'Qg0n&mOZ4mf$hY+KKK!jjUCQK?Ac9
%j=6]#9.l:8Gdd!\<:$cOgtI8M#fKt>djLO]aW/HJ\<gdW9mMuhkiKMrTj,3l>P$0`3I[ap`rks(lJ\F];KM(:XVpE7b`fD(CH?4N
%9bZm\GXQbu=`3X,q(FHk2s`Y%]u@ks^tUd?I/4iD);&=ic-LPc7+V"jr?TX>^^,l$Dc-J7JBr$&cA?pemrCh,lS?=\W#X<#X).?:
%qsVGXC;Au_TN+U9a\<#N9,]$M'qg,#3aAR&`*G4;p1?EP4Mk7(bs1s@I[f4-k=NA4/PB7=G$`]`h@\4oI64VZ#99&_S;28!7:gT6
%UAa7(?9fN>Vs2luW'iSJ6S",FmrDB^qK1/i8.A+&`QRE$`U:,a0\H7>MSbBj"f,/&)%S5[ZH:">E4AGQ*Wmbc/@X3fJY(C:V:m$%
%3k7s@V^_N]DNX)FqqU9:G$!CYVRD+rFZ>;]q=f)D"YD69g-jdlI16F)i?[oEh5(:*4"CBY<YQLYTB'hecbJt"Dip3:44g4"YDbKI
%6QQ58pMqo_>);]hhp1@g]P@I0]FoePWo^;&r6!,5O$JT&Ko7)8/Mi`6JB??MHu-,0JEW8EQ<X74h=0=/p5Mn-=QAJ@kQ6o9$Eou:
%8_E,)Z/?lIg&]\Y<S^+@O1q?M4K"lq!0edfj?P"MKj;T`SPOC.l7'd>h5peg[NiRs/t_3@s1opn_Gn\m`#dY'=(J54R.9:jB'_tI
%aa0C\,-]#:%^<Qjb?hRU[#Ok3T=9+ea^G"So$R^QKgN*LQlW7.##^<,&uP`:iG97ETW)l;WY^b_l;@K2`3`tu_ZD>&.Yq7>ZjEk@
%'$PN92\3Md25#dNIr19_69VALM$Q?SY2Da(2kYb0aD`2#4FHShlZK*iIrD5L4`Qd;PtCk6Wu<$POVORsNnLV]gR3j=;/+/H*=ID-
%LOi'J*lR,YfaDh5"MV0di:(7>[5'T?HJ4ib&sPR`$cY_D&]=?XT#_^hOG$3t,kNRoPe_O8h$]*KEREt:PlGbnoVdEA6YGK/)`.'\
%6#6Da47!JH#lom2'Ben1(_#FMg0SHC@i*b40Z?3i">i;lkr(N#im2PMrpgfn,i>u00D65UkO8/@oF5L?$GhSApRVg,!uM.JlA\.+
%!9F((D]e8"(E6Y'i:X[r04r/t+=6\YfO*_[,/$`=!YlQaMXbYjU`\K#,aESmKKp;WcR<$'-\iMFkph]i3O'B+hA#H4AjDF*^L'2K
%T>,_>5.rZoT-(GW^Lm0)9+h:9ZjNUT5Yq_Z7?oI`*FQJ?Y8[<l5>1s(kK81g#Q`n<kImE`0K*fM+Vs)!)LA2QYqL&jO.E?]6XHVG
%Y"%nFbuY<gg_<Bem\fF:P$d&HhhI55nbH7MHR5np?0J<Td#2.8lW)<''n-6EpBi9#9V\a@F@o;c\;cY0f:rfmlk!%!<rrH\aTd^a
%C(*ZGIEYRG,c/gWN?WAWobr3f_QG9]4dX,Nc5].3V_1XHL(Ia;?4FMAI=K'/8Ke[aAW$'dU`Nb)aS\)WXmn&*@_OG1CHPq`#8jP>
%L)jqlA.TANe:WiJl(u'kBsdJoMX@RK&Wl_YZ^>V0fj379%`\=!KrBE/9`_`Do9L"knX"TJ)@MnK>YhdaISr&Ll*C-Z&>p-lXV<&8
%:2]#kS)LIQOsEABQV-AOb5ol?D*#+;&:Mgj/@Xd!_.&I2R[^$!Jc,XY2)Sa&#;!.L$I<U.FrGS88!ME^HTN;,F8d`"p7LW[ruR6b
%VG^6#<bo7t=5]7_]H]?i#Rti=.Ae^c%/hGalVC>ZhmNoY,&3";&akl'pgHh;rEdZuCNf?Ths7W2J@^1U\*!_g5qBcV9hLFB_9.?$
%@NP;DeNX@@jm;S$n0Y?P"7jq%HTMQ&k]iCtqsQo$D(<%'kGEN['-IDLp&_+jUY3&uJIg]:8X4qV23iWV>Pmk]eMZFA`fm85%^8e$
%]qtldWQt]:gm^kWHFXT&l[K4e%V=ZXSFp+k%;Ile3P6_E39rS4AYcZG`n$buQpEaSlfLrTGlT2$$_=\%<K><L0`#+sXnd`)kjanq
%;&B,CSV8-8cI95F6+>Q#:14?Nd)@H@p>:Z%=dDkdm"5!)hU$!;YjJDc]fY=QRBg/egArsAY@kDRs1[!D#F0<oWLr*GlYrPH)BR->
%H3Q5BV4Qc!r)<:72[:k5(:4MA#MEsA=s-u&X)/!r4Uu4n9-u`-eQY+4pg26dC]D5+(.eR56"s2mP,mC_V&H*QP[k-ODU(tH61ID5
%C2$,un>PETb7C^>\Gq*$:kD!WFD2E_>DUUW?0*NaY2A<51M_iUc.5WT$",g;Xo8!fF?gBW35/R#R!@e2S7S2[CusqP\HCKETCZL9
%!5-n1,!NL8%Sn21n$5n_i/IrpSa!0*,6Pp)"fAL(n<UXu23;DA-SaA(oMt-?"KhY:.-NQl(Z694Y?N(E082*(+m!YteS2@+m=9%1
%oX!?,Ij_iDaG<1S!&$&^*DP@C0gJ0H+&a4:D7**0;7i:K'ft*#O#4;OgtI5_=!a4d'V#HPg&kh7i\0Th2"aD';rr*A[PA;FeIIP9
%9P<f_qsW*<+'71+r1c8K7R+>jRPGIU+KE%?2q')iRSuGS`n=*U4K>%8f)E#"oh+r`0L5$M;,Ec5kj]D7iJ$+AjWJI.>jBk`cqra`
%W[G>7s#ppsg7m$OY,&#>e5\FG,(_Z52_gKKh8,q$<_]*UVK:M\i9[0>V[6T8(6idC)ISDicc&`9(3lMmj^i;b27"<B.f0Ua[JsnR
%#qs%[,LR`W`-5?^m!$[_o<e%23Sn+"k4Wu6aACo"DXBZ3h<`'s-bE%*7(_%jGW(7>)4!2V0NRL257G`d@DeYsf(r>;`gSJA$GGE+
%m^%ptOR1G_HT?t-bA#PtLie4Fm%XIQBY$L-.=uT*>cmUsC(]TRgJ4#K:U&u%dA.YnpkH%$q$A]m2#e6tm\[6%=6O[&6S7!Y,6[!Z
%pMpcM5<>-31B9sgB<elD%Q*-V>G:aOEQq=^,,ho:CI,7Q\J+"MAR,VK'qn/.B=YGLi%]_N:OSX3'(8ENA@fVTR%r<P_tp%gg_rI4
%M+5<Mj3KlhhdjAl`1JIkR=ojTAWH=D(Jb5sE"jMf#.@Q/2dYNIDQU[/<?IQJopVp\V9HuO.DTfE+nBC/i-$hGWRa.oXT8')^:>n#
%Iil[9m"1.4H7(D]+X+*`hdGK-S@NU.\A5Uc4FCoiIL&opkI0:,[3PuTmu8(c)h9R9>UnQ6+k&T`abT9G)^FTO1P3=q&&G7@pTa.\
%Wm,-u!%\Y%]9f$F4UJQ2:NO9H3GdC5*F.t3GK\IoIF8%hY@H6kH3,VThRRb:0P*><;42lb9o`jf476!`-_YiMS`SH%45@QcZN-eZ
%=m2Ejg]l"#Cm0rrUOHBed+5]Y]8+Xqrh7dIF`.-u(aVcK7'lPDm]Mi3V`Q'iXqf+"n&+QsRI'tsKLnBEm6>IH^Yb=]P\gophNl0>
%!`WNN[^8..%.O7(9;@r`\[9J>c+emRhonOM-km/;=e2=o51E:-'cWUb/,s%dJ]uE!0_<$GpL'5%efkYJ6M)X([,\DY0?YtlJ-@r;
%SIIQDY+=Wis.R@0e"%-9#Y?^d\9&>"e$74LAWnM:MUG'6Fg*j:I[448mpNVB>,6eYO]cCf2?G_l9Z>`Iq1G0ge)&B%gUh;%*F;O7
%(9![33\K#npp*71NC0RBOaAG.;-q8c1/h7mm@\naKX9IfIg9a2!?S$K7j&eegSq',!48u>6OhLh'KIr^"^(`b^7@$>D9QY'[K!VA
%f5dSri+2gb??X*0^g=r)Q;Hu1s'N$k+<r'Z/S7\tfiffd/a=9JN%kROXDrgaU2uT]VNW.p%P;@c0!Ij'&[?\ni/7=4IAM_D&,jm-
%]`OIQP(`;YfYiWl_\-uE@F8>*kJ<X%8baG*XHIC\)T::l%=l*l7eJ0oi%YFqTG.%Hl4`+LOGN@`@^H)8pd"A^Je5aM!MQMK<imPY
%E"VXGNEpHU83qV17N=CB*l4Bl\3'9Gh\t)LG[s7qPjr6gGJ\:nd6N#tD5k$fYl+t7m:ocFl5m@('t1gFFq*;(D'D7A2fhOmE]LQs
%!DpCoF=)OTQ\qbmbJIKt_B`B/B8m[YH0-UC6s484C/oQ!+s"l(AG6[VZddRs_U=+F6`Qe)9Al_YphI[-]PTQf]Xj04$%91lMQgds
%aE,o&edQ0NZK)p+!EE*]@Wmg.TgG>]T,b;)_nFK/+QMq&1K#h*Teup'8RQr9F.L>SGhX#HY],?pn$;oE"5H\+8XV3I^KlG.9ut#r
%)$A&p_-inejNk)`*mG*TL,C$,j[Q%+!sJarcS1gp`"DLZch;]m'dNsCYZ>lr9f'mjJdG#WAKue;#J`Tl-WJMm%+VI,6JIK0gp4(f
%<GEUm3<]bT/,>p[)_^P2AN[:?nj2#G;a)UbM?PqfcJ;'#(u-Un7ra</],:)()^G@[]d*OK`&2l))1>%afR#6eHsF@Q>S(3pO9>b.
%$[=]X_J9)6\82eJ>+anO5Zq`0b%-Jun-s/H]<HTS->[;M=Qih)2g?jl1Yk1C4,]:k*g<u_>TD1OR,k6#DUdJ2\ViXie^hL*&Nrk%
%I,!-8LJI362^\7iK=8oa;`9,Ve_a_\8"DIHGb$Z^K*pRBc&Jm'Y/4/Fc"B#siuK?TT*X5pYYJ7.qR/hXE8nduUA]l$JDYTt/r&n2
%VrW<q^\ia_\K(>91d,rY+7o*<Eqr4dV4pcB&L\E8bsj=^,FUkYhPIpi,H^rsl#L]%I"%jh-Q)fC_`,sPg4.BK)"2Elq8;s\X(j^4
%25SJ@a1MM;k[I"G^-+hN?9X<+krVFlV.o[]i?JVsDS9?LH,"BL0dHP$>P(-q1-^9_A:Ai71-\!:Hi3Q*rUXN(NON%3C/eL5E+('p
%blU6Y'5X>^nOK;!W<r\NE%9mGdPkA_9Z'E"Y2^u'24MS84+69EO8i)-&d,mFC:ZjPYAKRBEX_>uCO'6,ThUGk>]T4k]D\t[VEF25
%AQ'r/mb#6nmG=?#oIS5F]$l!\rrB3f`(+\/4\gKi$gV5[l8k?AmYr1tiE]k+LJUiZMNi8uoi+66Rf9h6B:R'TEE\MIFD'FDKo,b;
%'X,9+FnuKp?p>*%F3j6[e%'s,@aBI9"h(>\b3*d<,8Tfla^r4K`.5hqPQDJa2"D270^O--GG<)5&1Ioc&/9m:Q+V8X"]X:dA^sFS
%KE^1-?K*gldjRQ$^Te!Oh^0&uGPkQHe_;Y*+\]3IMO65H=F4*#QZUhG.M:bbE,faT$K)]'iH@3fT,o!650#$?s71q[C&VV"9'"dr
%Ee2J%`tM@0Gj6I_+K&Pn-lr(HU<Pjd].EXik)V;XP>pc9p\cK[G)&G!MRKb21Fi@ba/dm%`!AB]@JMu]qJGMo\'d(Fo4@I$@?$lp
%KK1[Ji+o2Rs/`19)S6L)ps>1@ZuHHm2hfDTD9A$_HF*R!b\h.#Iuq&)jS:1^]<$WM$DbE+0XX*Ep<+L0g!"#@`4[7VlY<+o[CI:k
%VPYCKnCZb+=VUO?@@AL^#&e%"\JX2T`-f=G-GL!C*q_VNXC)mZ7M:9_8PN]M@r;jT[S`QEs3OVj%JDchm.nR(`/^&,]q:CW^/oht
%BOn?+m2h7``oNR;k(&+U7KdF\3mS[pe7JN<buWcDJ9?IA^sF"@_@10XfLd>82rO/Ad))r&pI89Z`ipuZ/C(>gUlYTVZ]^_2pmMX,
%J!YeDZl>Y&TcHAuE&V.2s3UZAXYmi-+1E!,#i__)>&b\K=a9rhYMmCTJhtIf)sN_BRX]F.e_gDkHe*VH*7A;!K/(RXj!6rK\DrTV
%bc7UE[9nRE,c3"3L+4]0@l-Oa=%YnNK)WJdBn6+FB1k0(Q<ribr]VeT$E>=c1nk]*F"",pnRU`L4/K!h/jc;=\iH?[>0]:B&H(&%
%!S=G3j%<Mo4)!k?X:dI=1PY*6HW_:*"pHL$F&]]5IgKBB/lEbef$<(c5BIS:rU4kFN"6*Qn?EU9=Rt;aF/\"6fJ/Eqd219[RD2NO
%n[WI'h=ioQ1$1[]d3UD4#rU"OSDAi%8L$\`$uOlY7A>Aa,N^o=EETU`L>4F61/pcbhV*gMs#m-k1q,P`+nBBWb\5$7<eec'ocM8C
%ljjH+P,#[u\UAJ,qH:[8j(bL4aC:^eBE-<Lr1k']l&d3qkJflJ2Io1,$@Cn[M3<YLA\DFYgdq%nXm1PIR>o$PJo%Eb$E>3r.'DGD
%5E",s12^(h4uk],%RHmIjgiX*d*LJ[OLf"hqS]U0^$Z9<N]lG&U\@XM)AGl./2O4AC4X?'`Qd7]!$e_76W;#S0A1DGRC(U[-^@5J
%kd1$H=anqJ6BA@g^%XLY"J[pBQk.\nRc.lMOV/OuL+V&Zpdh9iV^[ZQE>;+(/NfKl.2'>':%b#Qdqa3)K!W'_9reIfY(7=d9/FE4
%%S&<p*^e#4+Z<_>R@4=,^/WdGb:PBXfC"]CEhD1(=`TbYAMh7cl8bqNb%bSegL0S0Br<t?em]h-.^D[H)s#q=K6B/W?TsQ03Jkp=
%fR0J_5/.5eZPI+_.6'"#W<5C8g!@heoL160N>$&RC?P-a<:!R!A;.108h)C0nqdL\$!)XmgX/c$VpKu:89Y6=!*["VCSIu?j"`Wc
%+AY%'jKNb"B1u*]Nr?&%mTp`*T&[s>qUnWPK%UV.j)US1^7aWt<r_QC(\bp+MT`n`a"oU#jRs@h#_n6g'NJiJoT(%H7=``2e[je-
%V<]WM=e`."R`RpYbe<FAb+A!9j!EuO6=d%7Cp&FsNjPO6Qi,DcfWiH`EpNnD]TA'DaTaI\9G[d:c40sMfYk2T/na.lQQb,`m^L'U
%gRS/pV4;>rRm4PCmH\])H/bZWn!n]<j#\XGL@RLVs-l6c*F/KpZgVg^pU`ZhlQ:%&G.P2EY:UG%=\2nL7IQ4c?KE@PAgiOTL9.*$
%Q>W1X9]gYoIkfNb#O@/<Pi$/`4.W\ZSOrPa*h,[Q:t!&]CLE@D+^a>H>H@7Fl"Y*A(l,iP,IVgJ,G$*OgVsVVWpZkX,^ducp9U+E
%&6TDWn[T2#LPhN4U_(/cM/83iMJ#skO8i>$DF0\4QpV@b+h][`R!`;p)T#lo#Ikmr(EA.HMK*.mCgkJ;<p&E/f^(:Ul?sJ'&YD,%
%UK`3]Ott`GQ5T`)($k7-)BLuh=(.XQZ.sbK"EA6WbZ//GADHR<UDmV-33q@a36sgI>Um?V/XkMB-lu?!<?JRl'W4)R"GU>Y>!_5#
%BaA=X:h/H#a,c3t&51e9*s?to_]D50R\kXt,,5+(?/Ca)Ik_%O$k(5hSrc`d9ZZD;XRNDH6/Z2)!F9/$L9$TUPY2'VfDt4&C2b]3
%VKl8bY:k=:U1@$:2Ekj?M)H">6A*XVJRDifd39&CRCC*:!+F07K?-1VbT)N'7;.uX6_"7+1KRjg-iKAfTEh%[X)>\ddI#9;g[.e_
%SEXDB8Uk8#:m]n?@[=U$I#tG^8#tQ_nD)!"-X?&#oC@:CDZ8`XFEa(<M-aQPb=B0&D@u+M$H"Xr$_1BX\P]pU>b?5r`RXp+ZFe9i
%]O(:)`>"ffl6eq>*^#7iFGU0HWCpF4`H$ETF*U_)eVWThjdi2Qpo]gp$_rGY0"\_GhI"--*i=%oE\]h.mppgWSrCu+>1m8h_YnA(
%]=/OCG:q)U?5JI.bg:iGX8+"gU=*ps4diBnD#gP.RTjWLVt(>oftIr^YB2BrUN(cfkC6^9iPjDU:$sRj'??'aBc"%>`CD$Q8e,W%
%X>MabZ)/dF0V0p`TCEL>lA9*?%d>1VCm+/LeX)`$8C1=e+uNTDmR'rl96TZk<oN_)]eR@lRGZ;>V`Wj$+h>JQBTN;r6-pn^)CMjT
%;6$cjYt$gKY/01G/,;QmQ8gc$;!5N'IgN_q&[uHT]j\=qGDiElQNX_uWo.]Ah8SK.Yll(O5p3dFaK>+gNoJgA<I@/A<"K(&#:WY.
%%"k($WN>YSB&)D*#<@s[3K1'X`)JA-f(qb#@a++^B1-kTi'$&"ofqF6+ZcS&_korQNLRR(A_<K"D^Qa;R*K_fs08'XgQHGc+C4SJ
%0YjscQI;B*\Y'Fq1$.7GjGn8[(J/[7fFD;/:gS8tBDW3'7:09Xh@N#t.G.s#a<Z#<@m7.kg'7^_4,WV7`XEB[i8nYj+BP[0FJ+[[
%2:=S"Bh".R[[Ui>[+H*-;t&S'nt;=rGsO=lDk>M)R'R>T4mK'G#G9Ksktc=7!Zf))hAUDt]Q03'6X%4X5sA7VCOs[:RMdHW@5M?!
%rb+aL!N44N<hL>^''+aTJ55dNMnp4ulWb5a,DJ=]5q\UUb,$sHVsHMn.cb8%mj=*EU?*Kj;3Y"Cc>qR$*;;o!3Y&^J>.6oqMNA^h
%c"lVg>Ip'jQ@t=Pnq?^K`lEDMkp0p5p14_^9lU<C<V!%&"SZ<2Pb)/%V/#,!;Iedu"b2hBoC(_:aQ"q#A,o=(cLcu!oXQ@2[;1al
%Bp7]jc53'7Bh-cb/:"Ue[B'!C4Rd:;R$*E*f)XY2+kSRP'KoH%Rjk9jo5Z3K>"bS:h:p>4b#rWL5P*_K*?7"Yd11bBTR5G.?iVoX
%-Qa'=iT4C+dQ5R63jaN%Q[U*ep)e\di5Q(g=0SI)#rq89[H%EY@8rQ)*0h&*=8CDWG%.tC>PepP5sX_>R_KU5MM<)%&u,&udC:j#
%k2muqRVc=2^tB3Ts/9ukg4(2:,S`9cZC-QWoA5R<]5#ZCegpi<(C+K8:o/'3+CE?JZeS`6%k7_8F2bDr.7[;[JpJf[RHSN<CD9]0
%rb-UeDo=Ku8T'MPD6q(`*7#IO^KDl/V,Pk1Eo[o1G/#KF.9.p7n#H?\[TRUVQ2)hu]2HuZ]d6&6ir?d(X(dRZ#_I8Qs+;pb9$I%M
%0a7jaK&i#?&7eWHM&[e)OFNn%RAkJF3tj<;?0g<?=Xrn3^7"5gm\qhNN2;CS=]!iCEQ1*;<C/Q"V"RAKYRr_jFrAS0k??UWqCFd:
%5CpEr2Y#Q<4D6&#I_Xg-!Rq'T1USe=h+T23V?Vd3;2)s3cYH-:P,D(?dPKbU^W!Hnqs.Z!GJ8C9[Zn\(i5CFSim=KI&$"]AHUFEd
%^#Zqg>_O?*RYm,(D2r%]>9S:#en>4QR9tK_X/R:ErSU!::a.$/M@]^P#ZeJ6WL2@"a#!i,^YSkn]3""T'"EZt1KUiSZ&&>MN-G,h
%Chct3dJX/[F!UOf3#!F?.W*Vg^nHN)$U2.WKuofHj.64p"J8YB+L*ZPNXA%YD.Hu]`?Uj',[S*F7MN/u^^Shm)(5G*_@6mXF9Lse
%#&9P1Y6nW:mjO;h*!Hph+bBq8k_"d,:Aud11hYY0Q+ICGpO2D^d4StI(qXsMk<=(VLrGf;G&>?MKtZa+'6DoJl?/>QV[X)ZS,JG[
%2B9K#-tGpk1Zj';q00<C6'b==:DQ#.DCNO:0akWT<mNiD6<LqRl,^WGAa\'8c$-ObE?2(*ju^T5R*Bin;uXkkHqXIp/G%rfb3Fa[
%/Zo%mML0HDpLh;b%AtYMg<?3]i%V@]RDIM!It<tFQ]OrG.USPGcl@5<\YF-CYe43eEI4lO'+.;56)M7Q/Ejj:OG")V7k)%V7MPDm
%A:>fo.UoX+.X80mr;uHcQPP`<3[V3(A&9ETcuiZd)5!l)NPc)f3Q75^H<IM%XAc>#YP>;aS(DC/L/m>,7RGXj#If@L,]B*#[u)pF
%@AO9Je//,J,6,W9M9,^Egt^A@^-0Rn+d+h74hG9S'Ra@HSJdtMpb2RK22BsZIQGOiQ--&3e/O+GP@8o1Z['XpQQN(E$iXqEkd(fX
%J8t35LskM0a^K))aQWHeb<k3U5iMS2$D-h5B3s"nn\8'riSYZ@6N=&b'NnqtI`f:e/^%?"7d.h**Q_3&G,6""B>8D]ER%u#3BT7"
%Uc_mWW@Jc._FoE)5fn!B6OOm_Ob/hJa]#*jq\el#qZnaTANr1u^kD4q/X\j[:qP>BOV+gp/FiR+0p:78ap)(%:,h.m^[Cq^Y5jmP
%Vc%Q/5\He)Lg,,&;)Gb&EAO-/XC,iq-K!8UA\ieK/_[ZI(u:<X\T,^_MqP<F9Pe&IY_E>p[uHb+E-t<)`]O&]hV<EXNqN[Z?/Le'
%A7W:B@@Fq*E.VT,Gb?l9H"nO>B>!j)@&%K&aY@Nh@4P<q5dsp`7^Zo^93S51ZjE&`1253jPC84e'qKC$kXON+XR7`(gdGUe/VRc>
%nltp8i8lAmG"[u'O$a-4B"[a(i0t6R=ot>A=k5PV.UoOO*B.jF;iufUTrZQD/9tc_C;Kp>&I;u3H'c)1<eo+C)^$'!*G+R%hA6eX
%93BY/8aqscb8GVM/GSt4G%A,A,W5ui_jb;H?ajSMfSrnhj));[Kf+Jra]&1O4[ZCVs5f:cg[E!f5+/JRG@*7enIe8uU1N68C;#6$
%_DSr#(XtNKP[^\D9r+XO-+4cuCC6r:!k7C22"R#C+^@m;>4D">9bh#i5m%[&/@TQI<`<IWqF)>/d&aZJQC9_C)=Qon4b^U628TfU
%4<,sb[BNFVKFqBUc%&XMiBFc6ltnSj]QQE&BD+L$iO2ldZr"U&mL"Pbb-Qj7Xr]\o":QLgVYPfIqHj^ghUsQp-+3%eOWffZB&%=5
%oK\+i(?[/>gnR#h0u)XtRj`oI"okD64Bug/S:'O`@\=,/5">^Y0EPF7qsnT_@`ZOkCGn%BHo(dDp)&%SV=nY3Ni_2La0PStDGV)9
%N>oRt!f'F*@TFh#i.&ThDS^h]Gc);8UOnah%D-#7gRgjkn7SRER;bcFqH@LKVHJaC6ckRSBE![]AmX8XZ&5u_!S2?E]?RJ,nZL0:
%%=nh[`8P1A.XC&gIZ`jV<EA*Lr"iZ?&\^W$hJ#0nD0fmHm@_7*hHm6F_VpQEH/M5bncXjKcjTi^'&P7Q='NZKK,i3<>kHpR+gWOT
%oPT5,7):GN$6Jt`Z5%T"^PBc\c@PNmSJis5G+:N#luhnSK0l[pAi`_&Da#,M(Ap8hL0Jc[VJj!BL`4N,&r3A"+'%mQk\7k_[HQl!
%D`^GDWa_daft[U.[Hs<RW(bH5iqS;-3D,b*l8?J=rR0#!+7\JD7rJ@ih:,A)]S@"$q!JCebK&dQ+!1GB]\M<Xi:a(hVo-h6O.Ukc
%]Y&ago_S@7iTB\+)'A88BDJTtVjG<eQd7=?S(HO]rs]+G1k+EWp>_4k^OPu2O:=F`~>
%AI9_PrivateDataEnd
